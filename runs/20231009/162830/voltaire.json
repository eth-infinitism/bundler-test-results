{
  "testsuites": {
    "testsuite": {
      "@name": "voltaire",
      "@errors": "0",
      "@failures": "161",
      "@skipped": "0",
      "@tests": "167",
      "@time": "64.805",
      "@timestamp": "2023-10-09T16:27:21.716942",
      "@hostname": "fv-az257-30",
      "testcase": [
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[only_priority_fee_bump]",
          "@time": "0.086",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:81: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[only_max_fee_bump]",
          "@time": "0.041",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:81: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[with_same_fee]",
          "@time": "0.041",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:81: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[with_less_fee]",
          "@time": "0.042",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:81: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[fee_bump_below_threshold]",
          "@time": "0.039",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:81: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[fee_bump_at_threshold]",
          "@time": "0.038",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:81: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[fee_bump_above_threshold]",
          "@time": "0.039",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:81: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-sender]",
          "@time": "0.418",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:148: in test_mempool_reputation_rules_all_entities\n    set_reputation(\ntests/utils.py:200: in set_reputation\n    )\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-paymaster]",
          "@time": "0.242",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:154: in test_mempool_reputation_rules_all_entities\n    set_reputation(\ntests/utils.py:200: in set_reputation\n    )\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-factory]",
          "@time": "0.234",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:160: in test_mempool_reputation_rules_all_entities\n    set_reputation(\ntests/utils.py:200: in set_reputation\n    )\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-sender]",
          "@time": "0.231",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:148: in test_mempool_reputation_rules_all_entities\n    set_reputation(\ntests/utils.py:200: in set_reputation\n    )\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-paymaster]",
          "@time": "0.276",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:154: in test_mempool_reputation_rules_all_entities\n    set_reputation(\ntests/utils.py:200: in set_reputation\n    )\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-factory]",
          "@time": "0.240",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:160: in test_mempool_reputation_rules_all_entities\n    set_reputation(\ntests/utils.py:200: in set_reputation\n    )\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-sender]",
          "@time": "0.250",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:148: in test_mempool_reputation_rules_all_entities\n    set_reputation(\ntests/utils.py:200: in set_reputation\n    )\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-paymaster]",
          "@time": "0.234",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:154: in test_mempool_reputation_rules_all_entities\n    set_reputation(\ntests/utils.py:200: in set_reputation\n    )\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-factory]",
          "@time": "0.232",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:160: in test_mempool_reputation_rules_all_entities\n    set_reputation(\ntests/utils.py:200: in set_reputation\n    )\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_max_allowed_ops_unstaked_sender",
          "@time": "0.071",
          "failure": {
            "@message": "AssertionError: assert [] == [UserOperatio...gnature='0x')]\n  Right contains one more item: UserOperation(sender='0x388105079e84A52874B50617c2025817eBB51626', nonce='0x0', initCode='0x', callData='0xa9e966b7000...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0x3b9aca00', paymasterAndData='0x', signature='0x')\n  Full diff:\n    [\n  +  ,\n  -  UserOperation(sender='0x388105079e84A52874B50617c2025817eBB51626',\n  -                nonce='0x0',\n  -                initCode='0x',\n  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',\n  -                callGasLimit='0x493e0',\n  -                verificationGasLimit='0xf4240',\n  -                preVerificationGas='0x493e0',\n  -                maxFeePerGas='0xee6b2800',\n  -                maxPriorityFeePerGas='0x3b9aca00',\n  -                paymasterAndData='0x',\n  -                signature='0x'),\n    ]",
            "#text": "tests/bundle/test_bundle.py:248: in test_max_allowed_ops_unstaked_sender\n    assert dump_mempool() == wallet_ops[: i + 1]\nE   AssertionError: assert [] == [UserOperatio...gnature='0x')]\nE     Right contains one more item: UserOperation(sender='0x388105079e84A52874B50617c2025817eBB51626', nonce='0x0', initCode='0x', callData='0xa9e966b7000...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0x3b9aca00', paymasterAndData='0x', signature='0x')\nE     Full diff:\nE       [\nE     +  ,\nE     -  UserOperation(sender='0x388105079e84A52874B50617c2025817eBB51626',\nE     -                nonce='0x0',\nE     -                initCode='0x',\nE     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',\nE     -                callGasLimit='0x493e0',\nE     -                verificationGasLimit='0xf4240',\nE     -                preVerificationGas='0x493e0',\nE     -                maxFeePerGas='0xee6b2800',\nE     -                maxPriorityFeePerGas='0x3b9aca00',\nE     -                paymasterAndData='0x',\nE     -                signature='0x'),\nE       ]"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_max_allowed_ops_staked_sender",
          "@time": "0.105",
          "failure": {
            "@message": "AssertionError: assert [] == [UserOperatio...gnature='0x')]\n  Right contains one more item: UserOperation(sender='0x87D6f03C016EAd6A161913F68AAe7Bd28f7BA24f', nonce='0x10000000000000000', initCode='0x', callDat...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0x3b9aca00', paymasterAndData='0x', signature='0x')\n  Full diff:\n    [\n  +  ,\n  -  UserOperation(sender='0x87D6f03C016EAd6A161913F68AAe7Bd28f7BA24f',\n  -                nonce='0x10000000000000000',\n  -                initCode='0x',\n  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',\n  -                callGasLimit='0x493e0',\n  -                verificationGasLimit='0xf4240',\n  -                preVerificationGas='0x493e0',\n  -                maxFeePerGas='0xee6b2800',\n  -                maxPriorityFeePerGas='0x3b9aca00',\n  -                paymasterAndData='0x',\n  -                signature='0x'),\n    ]",
            "#text": "tests/bundle/test_bundle.py:275: in test_max_allowed_ops_staked_sender\n    assert dump_mempool() == wallet_ops[: i + 1]\nE   AssertionError: assert [] == [UserOperatio...gnature='0x')]\nE     Right contains one more item: UserOperation(sender='0x87D6f03C016EAd6A161913F68AAe7Bd28f7BA24f', nonce='0x10000000000000000', initCode='0x', callDat...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0x3b9aca00', paymasterAndData='0x', signature='0x')\nE     Full diff:\nE       [\nE     +  ,\nE     -  UserOperation(sender='0x87D6f03C016EAd6A161913F68AAe7Bd28f7BA24f',\nE     -                nonce='0x10000000000000000',\nE     -                initCode='0x',\nE     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',\nE     -                callGasLimit='0x493e0',\nE     -                verificationGasLimit='0xf4240',\nE     -                preVerificationGas='0x493e0',\nE     -                maxFeePerGas='0xee6b2800',\nE     -                maxPriorityFeePerGas='0x3b9aca00',\nE     -                paymasterAndData='0x',\nE     -                signature='0x'),\nE       ]"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_ban_user_op_access_other_ops_sender_in_bundle",
          "@time": "0.237",
          "failure": {
            "@message": "AssertionError: assert [] == [UserOperatio...gnature='0x')]\n  Right contains one more item: UserOperation(sender='0x3A33EdAeF8DA04f72Fd006d74CcA20dd1437C500', nonce='0x0', initCode='0x', callData='0x', callGasL...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0x3b9aca00', paymasterAndData='0x', signature='0x')\n  Full diff:\n    [\n  +  ,\n  -  UserOperation(sender='0x3A33EdAeF8DA04f72Fd006d74CcA20dd1437C500',\n  -                nonce='0x0',\n  -                initCode='0x',\n  -                callData='0x',\n  -                callGasLimit='0x493e0',\n  -                verificationGasLimit='0xf4240',\n  -                preVerificationGas='0x493e0',\n  -                maxFeePerGas='0xee6b2800',\n  -                maxPriorityFeePerGas='0x3b9aca00',\n  -                paymasterAndData='0x',\n  -                signature='0x'),\n    ]",
            "#text": "tests/bundle/test_bundle.py:319: in test_ban_user_op_access_other_ops_sender_in_bundle\n    assert dump_mempool() == [user_op2]\nE   AssertionError: assert [] == [UserOperatio...gnature='0x')]\nE     Right contains one more item: UserOperation(sender='0x3A33EdAeF8DA04f72Fd006d74CcA20dd1437C500', nonce='0x0', initCode='0x', callData='0x', callGasL...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0x3b9aca00', paymasterAndData='0x', signature='0x')\nE     Full diff:\nE       [\nE     +  ,\nE     -  UserOperation(sender='0x3A33EdAeF8DA04f72Fd006d74CcA20dd1437C500',\nE     -                nonce='0x0',\nE     -                initCode='0x',\nE     -                callData='0x',\nE     -                callGasLimit='0x493e0',\nE     -                verificationGasLimit='0xf4240',\nE     -                preVerificationGas='0x493e0',\nE     -                maxFeePerGas='0xee6b2800',\nE     -                maxPriorityFeePerGas='0x3b9aca00',\nE     -                paymasterAndData='0x',\nE     -                signature='0x'),\nE       ]"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_ban_user_sender_double_role_in_bundle",
          "@time": "0.183",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=66)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_bundle.py:358: in test_ban_user_sender_double_role_in_bundle\n    assert_ok(response1)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=66)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_stake_check_in_bundler",
          "@time": "0.066",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:382: in test_stake_check_in_bundler\n    response = get_stake_status(paymaster_contract.address, entrypoint_contract.address)\ntests/utils.py:165: in get_stake_status\n    .result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_codehash",
          "@name": "test_codehash_changed",
          "@time": "0.112",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_codehash.py:44: in test_codehash_changed\n    assert response.result, \"userop dropped by bundler\"\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-000]unstaked][paymaster][no_storage][ok]",
          "@time": "0.094",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=75)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=75)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-031]unstaked][paymaster][storage][drop]",
          "@time": "0.094",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=77).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=77).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-032]unstaked][paymaster][reference_storage][drop]",
          "@time": "0.094",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=79).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=79).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-032]unstaked][paymaster][reference_storage_struct][drop]",
          "@time": "0.093",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=81).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=81).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-010]unstaked][paymaster][account_storage][ok]",
          "@time": "0.108",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=83)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=83)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-021]unstaked][paymaster][account_reference_storage][ok]",
          "@time": "0.099",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=85)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=85)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-021]unstaked][paymaster][account_reference_storage_struct][ok]",
          "@time": "0.095",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=87)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=87)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop0]",
          "@time": "0.204",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=89).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=89).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[EREP-050]unstaked][paymaster][context][drop]",
          "@time": "0.208",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=91).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=91).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-032]unstaked][paymaster][external_storage][drop]",
          "@time": "0.095",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=93).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=93).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-020]unstaked][paymaster][out_of_gas][drop]",
          "@time": "0.094",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=95).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=95).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-020]unstaked][paymaster][sstore_out_of_gas][drop]",
          "@time": "0.092",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=97).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=97).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-000]staked][paymaster][no_storage][ok]",
          "@time": "0.130",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=99)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=99)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-031]staked][paymaster][storage][ok]",
          "@time": "0.125",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=101)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=101)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-032]staked][paymaster][reference_storage][ok]",
          "@time": "0.128",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=103)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=103)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-032]staked][paymaster][reference_storage_struct][ok]",
          "@time": "0.128",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=105)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=105)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-010]staked][paymaster][account_storage][ok]",
          "@time": "0.129",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=107)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=107)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-021]staked][paymaster][account_reference_storage][ok]",
          "@time": "0.132",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=109)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=109)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-021]staked][paymaster][account_reference_storage_struct][ok]",
          "@time": "0.133",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=111)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=111)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-022]staked][paymaster][account_reference_storage_init_code][ok]",
          "@time": "0.348",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=113)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=113)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[EREP-050]staked][paymaster][context][ok]",
          "@time": "0.133",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=115)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=115)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-031]staked][paymaster][external_storage][drop]",
          "@time": "0.128",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=117).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=117).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-020]staked][paymaster][out_of_gas][drop]",
          "@time": "0.133",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=119).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=119).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-020]staked][paymaster][sstore_out_of_gas][drop]",
          "@time": "0.129",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=121).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=121).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-000]unstaked][factory][no_storage][ok]",
          "@time": "0.151",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=123)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=123)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-000]unstaked][factory][storage][drop]",
          "@time": "0.150",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=125).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=125).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-000]unstaked][factory][reference_storage][drop]",
          "@time": "0.152",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=127).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=127).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-032]unstaked][factory][reference_storage_struct][drop]",
          "@time": "0.148",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=129).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=129).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-010]unstaked][factory][account_storage][ok]",
          "@time": "0.151",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=131)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=131)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-021]unstaked][factory][account_reference_storage][drop]",
          "@time": "0.151",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=133).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=133).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-021]unstaked][factory][account_reference_storage_struct][drop]",
          "@time": "0.157",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=135).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=135).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-000]unstaked][factory][external_storage][drop]",
          "@time": "0.152",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=137).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=137).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-042]unstaked][factory][EXTCODEx_CALLx_undeployed_sender][ok]",
          "@time": "0.152",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=139)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=139)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][factory][EXTCODESIZE_undeployed_contract][drop]",
          "@time": "0.147",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=141).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=141).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][factory][EXTCODEHASH_undeployed_contract][drop]",
          "@time": "0.156",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=143).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=143).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][factory][EXTCODECOPY_undeployed_contract][drop]",
          "@time": "0.156",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=145).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=145).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][factory][CALL_undeployed_contract][drop]",
          "@time": "0.172",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=147).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=147).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][factory][CALLCODE_undeployed_contract][drop]",
          "@time": "0.153",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=149).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=149).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][factory][DELEGATECALL_undeployed_contract][drop]",
          "@time": "0.153",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=151).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=151).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][factory][STATICCALL_undeployed_contract][drop]",
          "@time": "0.153",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=153).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=153).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-020]unstaked][factory][out_of_gas][drop]",
          "@time": "0.152",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=155).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=155).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-020]unstaked][factory][sstore_out_of_gas][drop]",
          "@time": "0.154",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=157).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=157).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-000]staked][factory][no_storage][ok]",
          "@time": "0.193",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=159)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=159)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-031]staked][factory][storage][ok]",
          "@time": "0.216",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=161)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=161)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-032]staked][factory][reference_storage][ok]",
          "@time": "0.188",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=163)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=163)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-032]staked][factory][reference_storage_struct][ok]",
          "@time": "0.188",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=165)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=165)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-010]staked][factory][account_storage][ok]",
          "@time": "0.184",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=167)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=167)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-021]staked][factory][account_reference_storage][ok]",
          "@time": "0.183",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=169)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=169)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-021]staked][factory][account_reference_storage_struct][ok]",
          "@time": "0.200",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=171)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=171)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-000]staked][factory][external_storage][drop]",
          "@time": "0.198",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=173).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=173).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-020]staked][factory][out_of_gas][drop]",
          "@time": "0.207",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=175).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=175).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-020]staked][factory][sstore_out_of_gas][drop]",
          "@time": "0.185",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=177).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=177).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-000]unstaked][account][no_storage][ok]",
          "@time": "0.158",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=179)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=179)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-010]unstaked][account][account_storage][ok]",
          "@time": "0.090",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=181)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=181)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-021]unstaked][account][account_reference_storage][ok]",
          "@time": "0.087",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=183)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=183)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][drop]",
          "@time": "0.193",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=185).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=185).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][ok]",
          "@time": "0.300",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=187)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=187)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop1]",
          "@time": "0.240",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=189).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=189).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-021]unstaked][account][account_reference_storage_struct][ok]",
          "@time": "0.087",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=191)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=191)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-000]unstaked][account][external_storage][drop]",
          "@time": "0.090",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=193).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=193).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-020]unstaked][account][out_of_gas][drop]",
          "@time": "0.090",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=195).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=195).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-020]unstaked][account][sstore_out_of_gas][drop]",
          "@time": "0.096",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=197).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=197).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-000]staked][account][no_storage][ok]",
          "@time": "0.124",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=199)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=199)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-010]staked][account][account_storage][ok]",
          "@time": "0.126",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=201)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=201)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-021]staked][account][account_reference_storage][ok]",
          "@time": "0.130",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=203)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=203)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-021]staked][account][account_reference_storage_struct][ok]",
          "@time": "0.128",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=205)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=205)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-020]staked][account][out_of_gas][drop]",
          "@time": "0.125",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=207).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=207).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-020]staked][account][sstore_out_of_gas][drop]",
          "@time": "0.124",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=209).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=209).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[STO-000]staked][account][external_storage][drop]",
          "@time": "0.124",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=211).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=211).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-011]unstaked][account][entryPoint_call_balanceOf][drop]",
          "@time": "0.091",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=213).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=213).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-061]unstaked][account][eth_value_transfer_forbidden][drop]",
          "@time": "0.139",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=215).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=215).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-053]unstaked][account][eth_value_transfer_entryPoint][ok]",
          "@time": "0.093",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=217)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=217)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-052]unstaked][account][eth_value_transfer_entryPoint_depositTo][ok]",
          "@time": "0.094",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=219)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=219)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][account][EXTCODESIZE_undeployed_contract][drop]",
          "@time": "0.093",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=221).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=221).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][account][EXTCODEHASH_undeployed_contract][drop]",
          "@time": "0.200",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=223).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=223).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][account][EXTCODECOPY_undeployed_contract][drop]",
          "@time": "0.088",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=225).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=225).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-054]unstaked][account][EXTCODESIZE_entrypoint][drop]",
          "@time": "0.089",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=227).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=227).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-054]unstaked][account][EXTCODEHASH_entrypoint][drop]",
          "@time": "0.092",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=229).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=229).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-054]unstaked][account][EXTCODECOPY_entrypoint][drop]",
          "@time": "0.089",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=231).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=231).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][account][CALL_undeployed_contract][drop]",
          "@time": "0.090",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=233).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=233).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][account][CALLCODE_undeployed_contract][drop]",
          "@time": "0.087",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=235).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=235).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][account][DELEGATECALL_undeployed_contract][drop]",
          "@time": "0.090",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=237).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=237).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-041]unstaked][account][STATICCALL_undeployed_contract][drop]",
          "@time": "0.095",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=239).code",
            "#text": "tests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:19: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=239).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[[OP-062]unstaked][account][CALL_undeployed_contract_allowed_precompile][ok]",
          "@time": "0.090",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=241)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:737: in test_rule\n    case.assert_func(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=241)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[GAS]",
          "@time": "0.064",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=242).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=242).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[NUMBER]",
          "@time": "0.063",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=243).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=243).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[TIMESTAMP]",
          "@time": "0.069",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=244).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=244).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[COINBASE]",
          "@time": "0.108",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=245).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=245).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[DIFFICULTY]",
          "@time": "0.061",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=246).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=246).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[BASEFEE]",
          "@time": "0.062",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=247).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=247).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[GASLIMIT]",
          "@time": "0.064",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=248).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=248).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[GASPRICE]",
          "@time": "0.070",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=249).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=249).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[SELFBALANCE]",
          "@time": "0.064",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=250).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=250).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[BALANCE]",
          "@time": "0.063",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=251).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=251).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[ORIGIN]",
          "@time": "0.063",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=252).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=252).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[BLOCKHASH]",
          "@time": "0.061",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=253).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=253).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[CREATE]",
          "@time": "0.061",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=254).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=254).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[CREATE2]",
          "@time": "0.069",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=255).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=255).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[SELFDESTRUCT]",
          "@time": "0.063",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=256).code",
            "#text": "tests/opbanning/test_op_banning.py:46: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=256).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_allowed_opcode_sequence[GAS CALL]",
          "@time": "0.063",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=257)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/opbanning/test_op_banning.py:58: in test_account_allowed_opcode_sequence\n    assert_ok(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=257)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_allowed_opcode_sequence[GAS DELEGATECALL]",
          "@time": "0.063",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=258)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/opbanning/test_op_banning.py:58: in test_account_allowed_opcode_sequence\n    assert_ok(response)\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=258)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[GAS]",
          "@time": "0.090",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=259).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=259).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[NUMBER]",
          "@time": "0.091",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=260).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=260).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[TIMESTAMP]",
          "@time": "0.092",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=261).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=261).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[COINBASE]",
          "@time": "0.091",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=262).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=262).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[DIFFICULTY]",
          "@time": "0.094",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=263).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=263).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[BASEFEE]",
          "@time": "0.094",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=264).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=264).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[GASLIMIT]",
          "@time": "0.099",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=265).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=265).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[GASPRICE]",
          "@time": "0.095",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=266).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=266).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[SELFBALANCE]",
          "@time": "0.090",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=267).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=267).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[BALANCE]",
          "@time": "0.090",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=268).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=268).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[ORIGIN]",
          "@time": "0.088",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=269).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=269).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[BLOCKHASH]",
          "@time": "0.089",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=270).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=270).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[CREATE]",
          "@time": "0.090",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=271).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=271).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[CREATE2]",
          "@time": "0.092",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=272).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=272).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[SELFDESTRUCT]",
          "@time": "0.089",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=273).code",
            "#text": "tests/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=273).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[GAS]",
          "@time": "0.162",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=274).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=274).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[NUMBER]",
          "@time": "0.149",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=275).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=275).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[TIMESTAMP]",
          "@time": "0.143",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=276).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=276).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[COINBASE]",
          "@time": "0.142",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=277).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=277).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[DIFFICULTY]",
          "@time": "0.149",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=278).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=278).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[BASEFEE]",
          "@time": "0.144",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=279).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=279).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[GASLIMIT]",
          "@time": "0.144",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=280).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=280).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[GASPRICE]",
          "@time": "0.144",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=281).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=281).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[SELFBALANCE]",
          "@time": "0.150",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=282).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=282).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[BALANCE]",
          "@time": "0.141",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=283).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=283).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[ORIGIN]",
          "@time": "0.148",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=284).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=284).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[BLOCKHASH]",
          "@time": "0.142",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=285).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=285).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[CREATE]",
          "@time": "0.250",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=286).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=286).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[CREATE2]",
          "@time": "0.144",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=287).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=287).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[SELFDESTRUCT]",
          "@time": "0.146",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=288).code",
            "#text": "tests/opbanning/test_op_banning.py:84: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=288).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.reputation.test_reputation",
          "@name": "test_staked_entity_reputation_threshold[with_factory]",
          "@time": "41.830",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=293)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/reputation/test_reputation.py:124: in test_staked_entity_reputation_threshold\n    assert_ok(userop.send())\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=293)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.reputation.test_reputation",
          "@name": "test_staked_entity_reputation_threshold[without_factory]",
          "@time": "0.229",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=298)",
            "#text": "tests/utils.py:108: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/reputation/test_reputation.py:124: in test_staked_entity_reputation_threshold\n    assert_ok(userop.send())\ntests/utils.py:110: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=298)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_chainId",
          "@name": "test_eth_chainId[]",
          "@time": "0.012"
        },
        {
          "@classname": "tests.rpc.test_eth_estimateUserOperationGas",
          "@name": "test_eth_estimateUserOperationGas[]",
          "@time": "0.056",
          "failure": {
            "@message": "jsonschema.exceptions.ValidationError: 'verificationGasLimit' is a required property\n\nFailed validating 'required' in schema:\n    {'properties': {'callGasLimit': {'oneOf': [{'pattern': '^0x([1-9a-f]+[0-9a-f]*|0)$',\n                                                'type': 'string'},\n                                               {'type': 'number'}],\n                                     'title': 'callGasLimit'},\n                    'preVerificationGas': {'oneOf': [{'pattern': '^0x([1-9a-f]+[0-9a-f]*|0)$',\n                                                      'type': 'string'},\n                                                     {'type': 'number'}],\n                                           'title': 'preVerificationGas'},\n                    'verificationGasLimit': {'oneOf': [{'pattern': '^0x([1-9a-f]+[0-9a-f]*|0)$',\n                                                        'type': 'string'},\n                                                       {'type': 'number'}],\n                                             'title': 'verificationGasLimit'}},\n     'required': ['callGasLimit',\n                  'preVerificationGas',\n                  'verificationGasLimit'],\n     'title': 'UserOperation Gas parameters',\n     'type': 'object'}\n\nOn instance:\n    {'callGasLimit': '0xab10',\n     'deadline': 281474976710655,\n     'preVerificationGas': 48220,\n     'verificationGas': 334329}",
            "#text": "tests/rpc/test_eth_estimateUserOperationGas.py:20: in test_eth_estimateUserOperationGas\n    validate(instance=response.result, schema=schema)\n.venv/lib/python3.10/site-packages/jsonschema/validators.py:1121: in validate\n    raise error\nE   jsonschema.exceptions.ValidationError: 'verificationGasLimit' is a required property\nE   \nE   Failed validating 'required' in schema:\nE       {'properties': {'callGasLimit': {'oneOf': [{'pattern': '^0x([1-9a-f]+[0-9a-f]*|0)$',\nE                                                   'type': 'string'},\nE                                                  {'type': 'number'}],\nE                                        'title': 'callGasLimit'},\nE                       'preVerificationGas': {'oneOf': [{'pattern': '^0x([1-9a-f]+[0-9a-f]*|0)$',\nE                                                         'type': 'string'},\nE                                                        {'type': 'number'}],\nE                                              'title': 'preVerificationGas'},\nE                       'verificationGasLimit': {'oneOf': [{'pattern': '^0x([1-9a-f]+[0-9a-f]*|0)$',\nE                                                           'type': 'string'},\nE                                                          {'type': 'number'}],\nE                                                'title': 'verificationGasLimit'}},\nE        'required': ['callGasLimit',\nE                     'preVerificationGas',\nE                     'verificationGasLimit'],\nE        'title': 'UserOperation Gas parameters',\nE        'type': 'object'}\nE   \nE   On instance:\nE       {'callGasLimit': '0xab10',\nE        'deadline': 281474976710655,\nE        'preVerificationGas': 48220,\nE        'verificationGas': 334329}"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_estimateUserOperationGas",
          "@name": "test_eth_estimateUserOperationGas_execution_revert",
          "@time": "0.041"
        },
        {
          "@classname": "tests.rpc.test_eth_estimateUserOperationGas",
          "@name": "test_eth_estimateUserOperationGas_simulation_revert",
          "@time": "0.042"
        },
        {
          "@classname": "tests.rpc.test_eth_getUserOperationByHash",
          "@name": "test_eth_getUserOperationByHash[]",
          "@time": "0.068",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/rpc/test_eth_getUserOperationByHash.py:16: in test_eth_getUserOperationByHash\n    ) == userop_hash(helper_contract, userop), \"user operation mismatch\"\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_getUserOperationByHash",
          "@name": "test_eth_getUserOperationByHash_error",
          "@time": "0.004"
        },
        {
          "@classname": "tests.rpc.test_eth_getUserOperationReceipt",
          "@name": "test_eth_getUserOperationReceipt[]",
          "@time": "0.067",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/rpc/test_eth_getUserOperationReceipt.py:15: in test_eth_getUserOperationReceipt\n    assert response.result[\"userOpHash\"] == userop_hash(helper_contract, userop)\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_getUserOperationReceipt",
          "@name": "test_eth_getUserOperationReceipt_error",
          "@time": "0.004"
        },
        {
          "@classname": "tests.rpc.test_eth_sendUserOperation",
          "@name": "test_eth_sendUserOperation[]",
          "@time": "0.053",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/rpc/test_eth_sendUserOperation.py:19: in test_eth_sendUserOperation\n    assert response.result == userop_hash(helper_contract, userop)\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_sendUserOperation",
          "@name": "test_eth_sendUserOperation_revert",
          "@time": "0.049",
          "failure": {
            "@message": "AssertionError: assert 'testwallet: dead signature' in 'max priority fee per gas is too low. it should be minimum : 3000000000'\n +  where 'testwallet: dead signature' = <built-in method lower of str object at 0x7fbe30b48c10>()\n +    where <built-in method lower of str object at 0x7fbe30b48c10> = 'testWallet: dead signature'.lower\n +  and   'max priority fee per gas is too low. it should be minimum : 3000000000' = <built-in method lower of str object at 0x7fbe300f9e30>()\n +    where <built-in method lower of str object at 0x7fbe300f9e30> = 'Max priority fee per gas is too low. it should be minimum : 3000000000'.lower\n +      where 'Max priority fee per gas is too low. it should be minimum : 3000000000' = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=313).message",
            "#text": "tests/rpc/test_eth_sendUserOperation.py:32: in test_eth_sendUserOperation_revert\n    assert_rpc_error(\ntests/utils.py:116: in assert_rpc_error\n    assert message.lower() in response.message.lower()\nE   AssertionError: assert 'testwallet: dead signature' in 'max priority fee per gas is too low. it should be minimum : 3000000000'\nE    +  where 'testwallet: dead signature' = <built-in method lower of str object at 0x7fbe30b48c10>()\nE    +    where <built-in method lower of str object at 0x7fbe30b48c10> = 'testWallet: dead signature'.lower\nE    +  and   'max priority fee per gas is too low. it should be minimum : 3000000000' = <built-in method lower of str object at 0x7fbe300f9e30>()\nE    +    where <built-in method lower of str object at 0x7fbe300f9e30> = 'Max priority fee per gas is too low. it should be minimum : 3000000000'.lower\nE    +      where 'Max priority fee per gas is too low. it should be minimum : 3000000000' = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=313).message"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_sendUserOperation",
          "@name": "test_eth_sendUserOperation_invalid_signature",
          "@time": "0.039",
          "failure": {
            "@message": "AssertionError: assert -32500 == <RPCErrorCode.INVALID_SIGNATURE: -32507>\n +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=315).code",
            "#text": "tests/rpc/test_eth_sendUserOperation.py:38: in test_eth_sendUserOperation_invalid_signature\n    assert_rpc_error(\ntests/utils.py:115: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32500 == <RPCErrorCode.INVALID_SIGNATURE: -32507>\nE    +  where -32500 = Error(code=-32500, message='Max priority fee per gas is too low. it should be minimum : 3000000000', data=None, id=315).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_supportedEntryPoints",
          "@name": "test_eth_supportedEntryPoints[]",
          "@time": "0.019"
        }
      ]
    }
  }
}
