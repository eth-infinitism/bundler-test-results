{
  "testsuites": {
    "testsuite": {
      "@name": "aa-bundler in Rust",
      "@errors": "0",
      "@failures": "111",
      "@skipped": "1",
      "@tests": "115",
      "@time": "28.436",
      "@timestamp": "2023-06-18T11:18:14.832335",
      "@hostname": "fv-az581-176",
      "testcase": [
        {
          "@classname": "",
          "@name": "tests.bundle.test_stake_rules",
          "@time": "0.000",
          "skipped": {
            "@message": "collection skipped",
            "#text": "('/home/runner/work/bundler-test-executor/bundler-test-executor/bundler-spec-tests/tests/bundle/test_stake_rules.py', 12, 'Skipped')"
          }
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[only_priority_fee_bump]",
          "@time": "0.066",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:79: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[only_max_fee_bump]",
          "@time": "0.057",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:79: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[with_same_fee]",
          "@time": "0.056",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:79: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[with_less_fee]",
          "@time": "0.055",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:79: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[fee_bump_below_threshold]",
          "@time": "0.055",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:79: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[fee_bump_at_threshold]",
          "@time": "0.056",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:79: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_bundle_replace_op[fee_bump_above_threshold]",
          "@time": "0.056",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:79: in test_bundle_replace_op\n    assert new_op.send().result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_max_allowed_ops_unstaked_sender[]",
          "@time": "0.110",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:97: in test_max_allowed_ops_unstaked_sender\n    assert dump_mempool() == wallet_ops[: i + 1]\ntests/utils.py:138: in dump_mempool\n    .result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_bundle",
          "@name": "test_max_allowed_ops_staked_sender[]",
          "@time": "0.169",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_bundle.py:123: in test_max_allowed_ops_staked_sender\n    assert dump_mempool() == wallet_ops[: i + 1]\ntests/utils.py:138: in dump_mempool\n    .result\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_codehash",
          "@name": "test_codehash_changed[]",
          "@time": "0.096",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/bundle/test_codehash.py:45: in test_codehash_changed\n    assert response.result, \"userop dropped by bundler\"\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][paymaster][no_storage][ok]",
          "@time": "0.168",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=26)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=26)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][paymaster][storage][drop]",
          "@time": "0.185",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=28).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=28).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][paymaster][reference_storage][drop]",
          "@time": "0.167",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=30).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=30).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][paymaster][reference_storage_struct][drop]",
          "@time": "0.168",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=32).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=32).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][paymaster][account_storage][ok]",
          "@time": "0.169",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=34)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=34)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][paymaster][account_reference_storage][ok]",
          "@time": "0.167",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=36)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=36)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][paymaster][account_reference_storage_struct][ok]",
          "@time": "0.168",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=38)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=38)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][paymaster][account_reference_storage_init_code][drop]",
          "@time": "0.379",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=40).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=40).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][paymaster][context][drop]",
          "@time": "0.168",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=42).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=42).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][paymaster][external_storage][drop]",
          "@time": "0.173",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=44).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=44).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][paymaster][no_storage][ok]",
          "@time": "0.210",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=46)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=46)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][paymaster][storage][ok]",
          "@time": "0.201",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=48)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=48)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][paymaster][reference_storage][ok]",
          "@time": "0.205",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=50)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=50)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][paymaster][reference_storage_struct][ok]",
          "@time": "0.201",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=52)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=52)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][paymaster][account_storage][ok]",
          "@time": "0.201",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=54)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=54)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][paymaster][account_reference_storage][ok]",
          "@time": "0.206",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=56)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=56)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][paymaster][account_reference_storage_struct][ok]",
          "@time": "0.198",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=58)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=58)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][paymaster][account_reference_storage_init_code][ok]",
          "@time": "0.397",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=60)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=60)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][paymaster][context][ok]",
          "@time": "0.200",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=62)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=62)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][paymaster][external_storage][drop]",
          "@time": "0.202",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=64).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=64).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][factory][no_storage][ok]",
          "@time": "0.219",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=66)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=66)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][factory][storage][drop]",
          "@time": "0.214",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=68).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=68).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][factory][reference_storage][drop]",
          "@time": "0.221",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=70).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=70).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][factory][reference_storage_struct][drop]",
          "@time": "0.219",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=72).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=72).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][factory][account_storage][ok]",
          "@time": "0.216",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=74)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=74)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][factory][account_reference_storage][drop]",
          "@time": "0.228",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=76).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=76).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][factory][account_reference_storage_struct][drop]",
          "@time": "0.229",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=78).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=78).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][factory][external_storage][drop]",
          "@time": "0.219",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=80).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=80).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][factory][no_storage][ok]",
          "@time": "0.271",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=82)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=82)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][factory][storage][ok]",
          "@time": "0.250",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=84)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=84)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][factory][reference_storage][ok]",
          "@time": "0.248",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=86)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=86)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][factory][reference_storage_struct][ok]",
          "@time": "0.247",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=88)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=88)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][factory][account_storage][ok]",
          "@time": "0.256",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=90)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=90)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][factory][account_reference_storage][ok]",
          "@time": "0.250",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=92)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=92)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][factory][account_reference_storage_struct][ok]",
          "@time": "0.257",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=94)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=94)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][factory][external_storage][drop]",
          "@time": "0.252",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=96).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=96).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][account][no_storage][ok]",
          "@time": "0.124",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=98)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=98)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][account][account_storage][ok]",
          "@time": "0.122",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=100)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=100)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][account][account_reference_storage][ok]",
          "@time": "0.123",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=102)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=102)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][account][account_reference_storage_init_code][drop]",
          "@time": "0.308",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=104).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=104).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][account][account_reference_storage_struct][ok]",
          "@time": "0.125",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=106)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=106)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[unstaked][account][external_storage][drop]",
          "@time": "0.122",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=108).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=108).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][account][no_storage][ok]",
          "@time": "0.155",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=110)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=110)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][account][account_storage][ok]",
          "@time": "0.156",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=112)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=112)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][account][account_reference_storage][ok]",
          "@time": "0.156",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=114)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=114)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][account][account_reference_storage_struct][ok]",
          "@time": "0.156",
          "failure": {
            "@message": "Exception: expected result object, got:\nError(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=116)",
            "#text": "tests/bundle/test_storage_rules.py:19: in assert_ok\n    assert response.result\nE   AttributeError: 'Error' object has no attribute 'result'\n\nThe above exception was the direct cause of the following exception:\ntests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:21: in assert_ok\n    raise Exception(f\"expected result object, got:\\n{response}\") from exc\nE   Exception: expected result object, got:\nE   Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=116)"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.bundle.test_storage_rules",
          "@name": "test_rule[staked][account][external_storage][drop]",
          "@time": "0.161",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=118).code",
            "#text": "tests/bundle/test_storage_rules.py:320: in test_rule\n    case.assert_func(response)\ntests/bundle/test_storage_rules.py:25: in assert_error\n    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=118).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[GAS]",
          "@time": "0.093",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=119).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=119).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[NUMBER]",
          "@time": "0.092",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=120).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=120).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[TIMESTAMP]",
          "@time": "0.092",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=121).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=121).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[COINBASE]",
          "@time": "0.093",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=122).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=122).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[DIFFICULTY]",
          "@time": "0.092",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=123).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=123).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[BASEFEE]",
          "@time": "0.091",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=124).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=124).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[GASLIMIT]",
          "@time": "0.091",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=125).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=125).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[GASPRICE]",
          "@time": "0.091",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=126).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=126).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[SELFBALANCE]",
          "@time": "0.089",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=127).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=127).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[BALANCE]",
          "@time": "0.093",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=128).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=128).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[ORIGIN]",
          "@time": "0.090",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=129).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=129).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[BLOCKHASH]",
          "@time": "0.092",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=130).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=130).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[CREATE]",
          "@time": "0.126",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=131).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=131).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[CREATE2]",
          "@time": "0.092",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=132).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=132).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_account_banned_opcode[SELFDESTRUCT]",
          "@time": "0.091",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=133).code",
            "#text": "tests/opbanning/test_op_banning.py:41: in test_account_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=133).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[GAS]",
          "@time": "0.163",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=134).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=134).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[NUMBER]",
          "@time": "0.163",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=135).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=135).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[TIMESTAMP]",
          "@time": "0.166",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=136).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=136).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[COINBASE]",
          "@time": "0.166",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=137).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=137).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[DIFFICULTY]",
          "@time": "0.169",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=138).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=138).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[BASEFEE]",
          "@time": "0.166",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=139).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=139).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[GASLIMIT]",
          "@time": "0.165",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=140).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=140).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[GASPRICE]",
          "@time": "0.169",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=141).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=141).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[SELFBALANCE]",
          "@time": "0.164",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=142).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=142).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[BALANCE]",
          "@time": "0.166",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=143).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=143).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[ORIGIN]",
          "@time": "0.165",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=144).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=144).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[BLOCKHASH]",
          "@time": "0.166",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=145).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=145).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[CREATE]",
          "@time": "0.162",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=146).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=146).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[CREATE2]",
          "@time": "0.171",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=147).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=147).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_paymaster_banned_opcode[SELFDESTRUCT]",
          "@time": "0.168",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=148).code",
            "#text": "tests/opbanning/test_op_banning.py:52: in test_paymaster_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=148).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[GAS]",
          "@time": "0.216",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=149).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=149).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[NUMBER]",
          "@time": "0.213",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=150).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=150).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[TIMESTAMP]",
          "@time": "0.216",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=151).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=151).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[COINBASE]",
          "@time": "0.214",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=152).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=152).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[DIFFICULTY]",
          "@time": "0.216",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=153).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=153).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[BASEFEE]",
          "@time": "0.218",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=154).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=154).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[GASLIMIT]",
          "@time": "0.216",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=155).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=155).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[GASPRICE]",
          "@time": "0.214",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=156).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=156).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[SELFBALANCE]",
          "@time": "0.215",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=157).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=157).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[BALANCE]",
          "@time": "0.220",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=158).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=158).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[ORIGIN]",
          "@time": "0.215",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=159).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=159).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[BLOCKHASH]",
          "@time": "0.215",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=160).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=160).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[CREATE]",
          "@time": "0.218",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=161).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=161).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[CREATE2]",
          "@time": "0.217",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=162).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=162).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.opbanning.test_op_banning",
          "@name": "test_factory_banned_opcode[SELFDESTRUCT]",
          "@time": "0.221",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=163).code",
            "#text": "tests/opbanning/test_op_banning.py:69: in test_factory_banned_opcode\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.BANNED_OPCODE: -32502>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=163).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_chainId",
          "@name": "test_eth_chainId[]",
          "@time": "0.009"
        },
        {
          "@classname": "tests.rpc.test_eth_estimateUserOperationGas",
          "@name": "test_eth_estimateUserOperationGas[]",
          "@time": "0.051",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/rpc/test_eth_estimateUserOperationGas.py:20: in test_eth_estimateUserOperationGas\n    validate(instance=response.result, schema=schema)\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_estimateUserOperationGas",
          "@name": "test_eth_estimateUserOperationGas_execution_revert",
          "@time": "0.051",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.EXECUTION_REVERTED: -32521>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=166).code",
            "#text": "tests/rpc/test_eth_estimateUserOperationGas.py:29: in test_eth_estimateUserOperationGas_execution_revert\n    assert_rpc_error(response, \"test fail\", RPCErrorCode.EXECUTION_REVERTED)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.EXECUTION_REVERTED: -32521>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=166).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_estimateUserOperationGas",
          "@name": "test_eth_estimateUserOperationGas_simulation_revert",
          "@time": "0.052",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.REJECTED_BY_EP_OR_ACCOUNT: -32500>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=167).code",
            "#text": "tests/rpc/test_eth_estimateUserOperationGas.py:37: in test_eth_estimateUserOperationGas_simulation_revert\n    assert_rpc_error(response, \"dead signature\", RPCErrorCode.REJECTED_BY_EP_OR_ACCOUNT)\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.REJECTED_BY_EP_OR_ACCOUNT: -32500>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=167).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_getUserOperationByHash",
          "@name": "test_eth_getUserOperationByHash[]",
          "@time": "0.066",
          "failure": {
            "@message": "TypeError: 'NoneType' object is not subscriptable",
            "#text": "tests/rpc/test_eth_getUserOperationByHash.py:14: in test_eth_getUserOperationByHash\n    assert userop_hash(\nE   TypeError: 'NoneType' object is not subscriptable"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_getUserOperationByHash",
          "@name": "test_eth_getUserOperationByHash_error",
          "@time": "0.002"
        },
        {
          "@classname": "tests.rpc.test_eth_getUserOperationReceipt",
          "@name": "test_eth_getUserOperationReceipt[]",
          "@time": "0.066",
          "failure": {
            "@message": "TypeError: 'NoneType' object is not subscriptable",
            "#text": "tests/rpc/test_eth_getUserOperationReceipt.py:15: in test_eth_getUserOperationReceipt\n    assert response.result[\"userOpHash\"] == userop_hash(helper_contract, userop)\nE   TypeError: 'NoneType' object is not subscriptable"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_getUserOperationReceipt",
          "@name": "test_eth_getUserOperationReceipt_error",
          "@time": "0.003"
        },
        {
          "@classname": "tests.rpc.test_eth_sendUserOperation",
          "@name": "test_eth_sendUserOperation[]",
          "@time": "0.069",
          "failure": {
            "@message": "AttributeError: 'Error' object has no attribute 'result'",
            "#text": "tests/rpc/test_eth_sendUserOperation.py:19: in test_eth_sendUserOperation\n    assert response.result == userop_hash(helper_contract, userop)\nE   AttributeError: 'Error' object has no attribute 'result'"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_sendUserOperation",
          "@name": "test_eth_sendUserOperation_revert",
          "@time": "0.067",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.REJECTED_BY_EP_OR_ACCOUNT: -32500>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=178).code",
            "#text": "tests/rpc/test_eth_sendUserOperation.py:32: in test_eth_sendUserOperation_revert\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.REJECTED_BY_EP_OR_ACCOUNT: -32500>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=178).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_sendUserOperation",
          "@name": "test_eth_sendUserOperation_invalid_signature",
          "@time": "0.052",
          "failure": {
            "@message": "AssertionError: assert -32603 == <RPCErrorCode.INVALID_SIGNATURE: -32507>\n +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=180).code",
            "#text": "tests/rpc/test_eth_sendUserOperation.py:37: in test_eth_sendUserOperation_invalid_signature\n    assert_rpc_error(\ntests/utils.py:103: in assert_rpc_error\n    assert response.code == code\nE   AssertionError: assert -32603 == <RPCErrorCode.INVALID_SIGNATURE: -32507>\nE    +  where -32603 = Error(code=-32603, message='gRPC error: User operation pool is not available', data=None, id=180).code"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        },
        {
          "@classname": "tests.rpc.test_eth_supportedEntryPoints",
          "@name": "test_eth_supportedEntryPoints[]",
          "@time": "0.010",
          "failure": {
            "@message": "AssertionError: assert '0x0576a174D2...45A78A0C91B57' == '0x5FF137D4b0...E578a026d2789'\n  - 0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\n  + 0x0576a174D229E3cFA37253523E645A78A0C91B57",
            "#text": "tests/rpc/test_eth_supportedEntryPoints.py:11: in test_eth_supportedEntryPoints\n    assert supported_entrypoints[0] == CommandLineArgs.entrypoint\nE   AssertionError: assert '0x0576a174D2...45A78A0C91B57' == '0x5FF137D4b0...E578a026d2789'\nE     - 0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789\nE     + 0x0576a174D229E3cFA37253523E645A78A0C91B57"
          },
          "system-out": "--------------------------------- Captured Log ---------------------------------\n\n--------------------------------- Captured Out ---------------------------------",
          "system-err": "--------------------------------- Captured Err ---------------------------------"
        }
      ]
    }
  }
}
