<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="okbund" errors="0" failures="167" skipped="1" tests="171" time="38.649" timestamp="2024-05-08T14:53:14.883688" hostname="fv-az985-371"><testcase classname="" name="tests.single.reputation.test_reputation" time="0.000"><skipped message="collection skipped">('/home/runner/work/bundler-test-executor/bundler-test-executor/bundler-spec-tests/tests/single/reputation/test_reputation.py', 18, 'Skipped: reputation tests currently skipped')</skipped></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[only_priority_fee_bump]" time="0.243"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[only_max_fee_bump]" time="0.038"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[with_same_fee]" time="0.035"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[with_less_fee]" time="0.038"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[fee_bump_below_threshold]" time="0.035"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[fee_bump_at_threshold]" time="0.039"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[fee_bump_above_threshold]" time="0.033"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-sender]" time="0.502"><failure message="AssertionError: assert -32500 == -32504&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=19).code">tests/single/bundle/test_bundle.py:233: in test_mempool_reputation_rules_all_entities
    assert_rpc_error(response, case.stake_status, case.errorCode)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == -32504
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=19).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-paymaster]" time="0.366"><failure message="AssertionError: assert -32500 == -32504&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=26).code">tests/single/bundle/test_bundle.py:233: in test_mempool_reputation_rules_all_entities
    assert_rpc_error(response, case.stake_status, case.errorCode)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == -32504
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=26).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-factory]" time="0.365"><failure message="AssertionError: assert -32500 == -32504&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=33).code">tests/single/bundle/test_bundle.py:233: in test_mempool_reputation_rules_all_entities
    assert_rpc_error(response, case.stake_status, case.errorCode)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == -32504
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=33).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-sender]" time="1.307"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains 4 more items, first extra item: UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49', nonce='0x0', initCode='0x93102A1831d049D55e95D25d07...ityFeePerGas='0xb2d05e00', paymasterAndData='0x712790adeb13aab7b1a696b7ce60181691ae2da96e6f7468696e67', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',&#10;  -                nonce='0x0',&#10;  -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x712790adeb13aab7b1a696b7ce60181691ae2da96e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x686ac9f5d30d2ba99d535dbb7e15e6927e5655486e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',&#10;  -                nonce='0x20000000000000000',&#10;  -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x2307a7eb7dfb9b93bc99ffe2a829ab60a7dcd5506e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',&#10;  -                nonce='0x30000000000000000',&#10;  -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xd7c1591f038071de1480bd68ad61a22466b3bdf46e6f7468696e67',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49', nonce='0x0', initCode='0x93102A1831d049D55e95D25d07...ityFeePerGas='0xb2d05e00', paymasterAndData='0x712790adeb13aab7b1a696b7ce60181691ae2da96e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',
E     -                nonce='0x0',
E     -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x712790adeb13aab7b1a696b7ce60181691ae2da96e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x686ac9f5d30d2ba99d535dbb7e15e6927e5655486e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',
E     -                nonce='0x20000000000000000',
E     -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x2307a7eb7dfb9b93bc99ffe2a829ab60a7dcd5506e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xd7c1591f038071de1480bd68ad61a22466b3bdf46e6f7468696e67',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-paymaster]" time="1.121"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains 4 more items, first extra item: UserOperation(sender='0xaeDC8304961dCFc14a416E9a0a1788B23634b092', nonce='0x0', initCode='0x9BF32C16073D0E65d5f5728271...ityFeePerGas='0xb2d05e00', paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0xaeDC8304961dCFc14a416E9a0a1788B23634b092',&#10;  -                nonce='0x0',&#10;  -                initCode='0x9BF32C16073D0E65d5f57282715B948d931442360d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x047bd6a3A34aa4d464E0d34D3DcB4201f68aF057',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0x4a5fF638e31B820D724327a1f9E5fCCCB8d700140d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x2E89f6255CBf0bAEA7DFeaE37E7c3b99Bb7E7b8a',&#10;  -                nonce='0x20000000000000000',&#10;  -                initCode='0x8dfcfCeFB1d126E15Ca1E9D913be845443f8D1300d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x8391BD1367099672B6ba7a65B4250c87F384C3a3',&#10;  -                nonce='0x30000000000000000',&#10;  -                initCode='0xAe08e45461C5Ca2BE52961A38a1ed620a2020b710d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0xaeDC8304961dCFc14a416E9a0a1788B23634b092', nonce='0x0', initCode='0x9BF32C16073D0E65d5f5728271...ityFeePerGas='0xb2d05e00', paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xaeDC8304961dCFc14a416E9a0a1788B23634b092',
E     -                nonce='0x0',
E     -                initCode='0x9BF32C16073D0E65d5f57282715B948d931442360d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x047bd6a3A34aa4d464E0d34D3DcB4201f68aF057',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x4a5fF638e31B820D724327a1f9E5fCCCB8d700140d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x2E89f6255CBf0bAEA7DFeaE37E7c3b99Bb7E7b8a',
E     -                nonce='0x20000000000000000',
E     -                initCode='0x8dfcfCeFB1d126E15Ca1E9D913be845443f8D1300d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x8391BD1367099672B6ba7a65B4250c87F384C3a3',
E     -                nonce='0x30000000000000000',
E     -                initCode='0xAe08e45461C5Ca2BE52961A38a1ed620a2020b710d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-factory]" time="1.162"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains 4 more items, first extra item: UserOperation(sender='0x8150Edf5fCCa643413123721a5dBece565bFd857', nonce='0x0', initCode='0x722081A4f71908AC2Fcb874664...ityFeePerGas='0xb2d05e00', paymasterAndData='0xeb0a4f1135f68a244ec5ec958866b986d0ec0dbf6e6f7468696e67', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0x8150Edf5fCCa643413123721a5dBece565bFd857',&#10;  -                nonce='0x0',&#10;  -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xeb0a4f1135f68a244ec5ec958866b986d0ec0dbf6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x216Ebbef8003C6E65862a90E3866Bac256a2C69d',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x752dda075eca4b92e5bcf37afb2ae6d818852ebc6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x194ad0C67207fd64791046B80a78E9734dD00f17',&#10;  -                nonce='0x20000000000000000',&#10;  -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x74bbd87fb5e4cd55a5bcc0f469dabb6c3b5163926e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x7349a22c2F4C5D94801bC34B6767d78ae32E5830',&#10;  -                nonce='0x30000000000000000',&#10;  -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xb58d5009ff47f7eedf823f5fa3cb0837ec5013926e6f7468696e67',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0x8150Edf5fCCa643413123721a5dBece565bFd857', nonce='0x0', initCode='0x722081A4f71908AC2Fcb874664...ityFeePerGas='0xb2d05e00', paymasterAndData='0xeb0a4f1135f68a244ec5ec958866b986d0ec0dbf6e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x8150Edf5fCCa643413123721a5dBece565bFd857',
E     -                nonce='0x0',
E     -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xeb0a4f1135f68a244ec5ec958866b986d0ec0dbf6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x216Ebbef8003C6E65862a90E3866Bac256a2C69d',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x752dda075eca4b92e5bcf37afb2ae6d818852ebc6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x194ad0C67207fd64791046B80a78E9734dD00f17',
E     -                nonce='0x20000000000000000',
E     -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x74bbd87fb5e4cd55a5bcc0f469dabb6c3b5163926e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x7349a22c2F4C5D94801bC34B6767d78ae32E5830',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xb58d5009ff47f7eedf823f5fa3cb0837ec5013926e6f7468696e67',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-sender]" time="1.580"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains 4 more items, first extra item: UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717', nonce='0x0', initCode='0xe6027abEC871594f6F328Fae3F...ityFeePerGas='0xb2d05e00', paymasterAndData='0xcd265fcc81026a08ff3304141213e864e20ae4d66e6f7468696e67', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',&#10;  -                nonce='0x0',&#10;  -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xcd265fcc81026a08ff3304141213e864e20ae4d66e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x2e929b2516839e78c27be05f50cc609b97b07ce66e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',&#10;  -                nonce='0x20000000000000000',&#10;  -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x272db3d6dcfeb30a205a0e59f65dad5ace948c146e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',&#10;  -                nonce='0x30000000000000000',&#10;  -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xc695c2cac55d67477df85e8a40669375584ef79f6e6f7468696e67',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717', nonce='0x0', initCode='0xe6027abEC871594f6F328Fae3F...ityFeePerGas='0xb2d05e00', paymasterAndData='0xcd265fcc81026a08ff3304141213e864e20ae4d66e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',
E     -                nonce='0x0',
E     -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xcd265fcc81026a08ff3304141213e864e20ae4d66e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',
E     -                nonce='0x10000000000000000',
E     -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x2e929b2516839e78c27be05f50cc609b97b07ce66e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',
E     -                nonce='0x20000000000000000',
E     -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x272db3d6dcfeb30a205a0e59f65dad5ace948c146e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',
E     -                nonce='0x30000000000000000',
E     -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xc695c2cac55d67477df85e8a40669375584ef79f6e6f7468696e67',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-paymaster]" time="2.452"><failure message="AssertionError: assert [] == [UserOperatio...re='0x'), ...]&#10;  Right contains 11 more items, first extra item: UserOperation(sender='0xA20da00290186736Ab090492f6FC474131C3dD48', nonce='0x0', initCode='0x35575623B9a1f32dDf2FDbC78e...ityFeePerGas='0xb2d05e00', paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0xA20da00290186736Ab090492f6FC474131C3dD48',&#10;  -                nonce='0x0',&#10;  -                initCode='0x35575623B9a1f32dDf2FDbC78e969B74e9FD78b40d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x32b71cbB6951e4825463d85430b58a685bDC7650',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0xf3b6a719b22F6C25acCbA8389Ac4C2aDb9d08B9F0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x2Aa7f67bd63c21418B3C223362444D6866f5fb3D',&#10;  -                nonce='0x20000000000000000',&#10;  -                initCode='0x0693bE2cF02d2a5054Bd1eE2B74B1770a4aA83aC0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x0F7eC8803db6115F8875c34fCC0c239d34a9fA62',&#10;  -                nonce='0x30000000000000000',&#10;  -                initCode='0x0f31cD7acdb497d646C486f42850F5f68DEC8a620d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xfe463Be4Ac1A40b95f5Ad6e25638Bea04ece0e93',&#10;  -                nonce='0x40000000000000000',&#10;  -                initCode='0x61d547E41EBF39b7045Ad7E3fD88E3880a55F5000d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x1B1cd9E595Cfd77fC845dD35Fb4031F79AF8F514',&#10;  -                nonce='0x50000000000000000',&#10;  -                initCode='0x56DBAd9adF7a801360C2f5eEc6875B0846f0Abc90d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x7edbD3947ce73B05b433836ce6A1576da51ECc09',&#10;  -                nonce='0x60000000000000000',&#10;  -                initCode='0x2bd7753098B6AbdEa1AD11A39080853b1307FD440d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xa0E57e97be8a1fCf0Ef4e7777aAf06B68dB774aF',&#10;  -                nonce='0x70000000000000000',&#10;  -                initCode='0x6a8Cb2C61EF921c134c7EBB2dE16b73552C9D5860d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x6290f0847A92627956A993ABe39bca49779e7154',&#10;  -                nonce='0x80000000000000000',&#10;  -                initCode='0x8E432C431C6e4eCf58d3a03e913A75830d4E91960d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xee2a59c6ec9CD3aDb94144d9b4F1A5061b82D28B',&#10;  -                nonce='0x90000000000000000',&#10;  -                initCode='0xE87128612E39C3Be9dc15c2000EEe97696015b8B0d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x4b1B7fe594C3011918fcE4881C504640417FCBd2',&#10;  -                nonce='0xa0000000000000000',&#10;  -                initCode='0x1a91153c88008bB0975A72DC2c9C31f015d1b6100d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...re='0x'), ...]
E     Right contains 11 more items, first extra item: UserOperation(sender='0xA20da00290186736Ab090492f6FC474131C3dD48', nonce='0x0', initCode='0x35575623B9a1f32dDf2FDbC78e...ityFeePerGas='0xb2d05e00', paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xA20da00290186736Ab090492f6FC474131C3dD48',
E     -                nonce='0x0',
E     -                initCode='0x35575623B9a1f32dDf2FDbC78e969B74e9FD78b40d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x32b71cbB6951e4825463d85430b58a685bDC7650',
E     -                nonce='0x10000000000000000',
E     -                initCode='0xf3b6a719b22F6C25acCbA8389Ac4C2aDb9d08B9F0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x2Aa7f67bd63c21418B3C223362444D6866f5fb3D',
E     -                nonce='0x20000000000000000',
E     -                initCode='0x0693bE2cF02d2a5054Bd1eE2B74B1770a4aA83aC0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x0F7eC8803db6115F8875c34fCC0c239d34a9fA62',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x0f31cD7acdb497d646C486f42850F5f68DEC8a620d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xfe463Be4Ac1A40b95f5Ad6e25638Bea04ece0e93',
E     -                nonce='0x40000000000000000',
E     -                initCode='0x61d547E41EBF39b7045Ad7E3fD88E3880a55F5000d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x1B1cd9E595Cfd77fC845dD35Fb4031F79AF8F514',
E     -                nonce='0x50000000000000000',
E     -                initCode='0x56DBAd9adF7a801360C2f5eEc6875B0846f0Abc90d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x7edbD3947ce73B05b433836ce6A1576da51ECc09',
E     -                nonce='0x60000000000000000',
E     -                initCode='0x2bd7753098B6AbdEa1AD11A39080853b1307FD440d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xa0E57e97be8a1fCf0Ef4e7777aAf06B68dB774aF',
E     -                nonce='0x70000000000000000',
E     -                initCode='0x6a8Cb2C61EF921c134c7EBB2dE16b73552C9D5860d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x6290f0847A92627956A993ABe39bca49779e7154',
E     -                nonce='0x80000000000000000',
E     -                initCode='0x8E432C431C6e4eCf58d3a03e913A75830d4E91960d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xee2a59c6ec9CD3aDb94144d9b4F1A5061b82D28B',
E     -                nonce='0x90000000000000000',
E     -                initCode='0xE87128612E39C3Be9dc15c2000EEe97696015b8B0d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x4b1B7fe594C3011918fcE4881C504640417FCBd2',
E     -                nonce='0xa0000000000000000',
E     -                initCode='0x1a91153c88008bB0975A72DC2c9C31f015d1b6100d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-factory]" time="2.481"><failure message="AssertionError: assert [] == [UserOperatio...re='0x'), ...]&#10;  Right contains 11 more items, first extra item: UserOperation(sender='0x1E38b33255635f48778632FAc4cD3DaaC100FF45', nonce='0x0', initCode='0xe8B8502EbbA0F8A2667d9E36cc...ityFeePerGas='0xb2d05e00', paymasterAndData='0x2ee570ce72762180a2712e5b55c529fefdb2ef976e6f7468696e67', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0x1E38b33255635f48778632FAc4cD3DaaC100FF45',&#10;  -                nonce='0x0',&#10;  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x2ee570ce72762180a2712e5b55c529fefdb2ef976e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x052D2F7035E9a87442c68FfAA1B04eC97Cf4E551',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x72ead559d07af32670c4202b739aee797bdaafce6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x91A490F500a88C34CBF0ce34f1b392cb746AD3a5',&#10;  -                nonce='0x20000000000000000',&#10;  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x8a7aba4468f36242680bb9844d75e5f18436a0af6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x14d4D40c5487a44a0C02C24E7b272cEC19e7bfd8',&#10;  -                nonce='0x30000000000000000',&#10;  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x3209af030e8e8073c51ab255b19db5ef7b03a1436e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xb34640Ec88E7EF27339E18A18af7f1e0A3514245',&#10;  -                nonce='0x40000000000000000',&#10;  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf5c1b727e85a9f0f1e80a95f22445bb13a2ca8356e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xd74e5429d85f02590b60c884A1e683BE6125e4fB',&#10;  -                nonce='0x50000000000000000',&#10;  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x94b17b309a4c42701bbd5718c18e193711d6da916e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xE1BaF82E5e2Ed8ac0660726723e915785e047445',&#10;  -                nonce='0x60000000000000000',&#10;  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x4a567001454227551a09f75f0bc401fd58425d7c6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xE4691aF4B8A449D55CB54A7f4D6Ee13Cc8479c72',&#10;  -                nonce='0x70000000000000000',&#10;  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xb87299e5d0b787aca9d0d733027644c82f5a5bb56e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x14ed851C4c9d8e7f4B74B86b68F72103f855FdE8',&#10;  -                nonce='0x80000000000000000',&#10;  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x239949f5b1af72783957e37797a17541db1f30b66e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xBbE8c89589ef06F6E746004c6969dc5170c91c91',&#10;  -                nonce='0x90000000000000000',&#10;  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf32e4480abe68f50a08547e5295fc3eeea544fa66e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xBf6F4C384324b4Dd64362DC1C2114475B4782b78',&#10;  -                nonce='0xa0000000000000000',&#10;  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x3ba165f66bc2327fbefa0aa0bf01bd42bfb8578f6e6f7468696e67',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...re='0x'), ...]
E     Right contains 11 more items, first extra item: UserOperation(sender='0x1E38b33255635f48778632FAc4cD3DaaC100FF45', nonce='0x0', initCode='0xe8B8502EbbA0F8A2667d9E36cc...ityFeePerGas='0xb2d05e00', paymasterAndData='0x2ee570ce72762180a2712e5b55c529fefdb2ef976e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x1E38b33255635f48778632FAc4cD3DaaC100FF45',
E     -                nonce='0x0',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x2ee570ce72762180a2712e5b55c529fefdb2ef976e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x052D2F7035E9a87442c68FfAA1B04eC97Cf4E551',
E     -                nonce='0x10000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x72ead559d07af32670c4202b739aee797bdaafce6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x91A490F500a88C34CBF0ce34f1b392cb746AD3a5',
E     -                nonce='0x20000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x8a7aba4468f36242680bb9844d75e5f18436a0af6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x14d4D40c5487a44a0C02C24E7b272cEC19e7bfd8',
E     -                nonce='0x30000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x3209af030e8e8073c51ab255b19db5ef7b03a1436e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xb34640Ec88E7EF27339E18A18af7f1e0A3514245',
E     -                nonce='0x40000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf5c1b727e85a9f0f1e80a95f22445bb13a2ca8356e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xd74e5429d85f02590b60c884A1e683BE6125e4fB',
E     -                nonce='0x50000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x94b17b309a4c42701bbd5718c18e193711d6da916e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xE1BaF82E5e2Ed8ac0660726723e915785e047445',
E     -                nonce='0x60000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x4a567001454227551a09f75f0bc401fd58425d7c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xE4691aF4B8A449D55CB54A7f4D6Ee13Cc8479c72',
E     -                nonce='0x70000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xb87299e5d0b787aca9d0d733027644c82f5a5bb56e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x14ed851C4c9d8e7f4B74B86b68F72103f855FdE8',
E     -                nonce='0x80000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x239949f5b1af72783957e37797a17541db1f30b66e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xBbE8c89589ef06F6E746004c6969dc5170c91c91',
E     -                nonce='0x90000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf32e4480abe68f50a08547e5295fc3eeea544fa66e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xBf6F4C384324b4Dd64362DC1C2114475B4782b78',
E     -                nonce='0xa0000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x3ba165f66bc2327fbefa0aa0bf01bd42bfb8578f6e6f7468696e67',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_max_allowed_ops_unstaked_sender" time="0.049"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains one more item: UserOperation(sender='0xb8CC681AA513f1bDFDB0D6a984893F1bFd030De6', nonce='0x0', initCode='0x', callData='0xa9e966b7000...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0xb8CC681AA513f1bDFDB0D6a984893F1bFd030De6',&#10;  -                nonce='0x0',&#10;  -                initCode='0x',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:248: in test_max_allowed_ops_unstaked_sender
    assert dump_mempool() == wallet_ops[: i + 1]
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains one more item: UserOperation(sender='0xb8CC681AA513f1bDFDB0D6a984893F1bFd030De6', nonce='0x0', initCode='0x', callData='0xa9e966b7000...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xb8CC681AA513f1bDFDB0D6a984893F1bFd030De6',
E     -                nonce='0x0',
E     -                initCode='0x',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_max_allowed_ops_staked_sender" time="0.071"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains one more item: UserOperation(sender='0xa4aF82e7d511bdf1460A355c0F748Cc746d688AC', nonce='0x10000000000000000', initCode='0x', callDat...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0xa4aF82e7d511bdf1460A355c0F748Cc746d688AC',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0x',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:275: in test_max_allowed_ops_staked_sender
    assert dump_mempool() == wallet_ops[: i + 1]
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains one more item: UserOperation(sender='0xa4aF82e7d511bdf1460A355c0F748Cc746d688AC', nonce='0x10000000000000000', initCode='0x', callDat...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xa4aF82e7d511bdf1460A355c0F748Cc746d688AC',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_ban_user_op_access_other_ops_sender_in_bundle" time="0.172"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains one more item: UserOperation(sender='0x95649063Dcc9140ce146f9fbde8484581e4F8552', nonce='0x0', initCode='0x', callData='0x', callGasL...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0x95649063Dcc9140ce146f9fbde8484581e4F8552',&#10;  -                nonce='0x0',&#10;  -                initCode='0x',&#10;  -                callData='0x',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:319: in test_ban_user_op_access_other_ops_sender_in_bundle
    assert dump_mempool() == [user_op2]
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains one more item: UserOperation(sender='0x95649063Dcc9140ce146f9fbde8484581e4F8552', nonce='0x0', initCode='0x', callData='0x', callGasL...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x95649063Dcc9140ce146f9fbde8484581e4F8552',
E     -                nonce='0x0',
E     -                initCode='0x',
E     -                callData='0x',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_ban_user_sender_double_role_in_bundle" time="0.122"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='0x', data=None, id=119)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_bundle.py:358: in test_ban_user_sender_double_role_in_bundle
    assert_ok(response1)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='0x', data=None, id=119)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_stake_check_in_bundler" time="0.322" /><testcase classname="tests.single.bundle.test_codehash" name="test_codehash_changed" time="0.076"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_codehash.py:44: in test_codehash_changed
    assert response.result, "userop dropped by bundler"
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][paymaster][no_storage][ok]" time="0.165"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=129)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=129)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-031]unstaked][paymaster][storage][drop]" time="0.164"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=131).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=131).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]unstaked][paymaster][reference_storage][drop]" time="0.164"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=133).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=133).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]unstaked][paymaster][reference_storage_struct][drop]" time="0.163"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=135).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=135).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-010]unstaked][paymaster][account_storage][ok]" time="0.267"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=137)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=137)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]unstaked][paymaster][account_reference_storage][ok]" time="0.168"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=139)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=139)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]unstaked][paymaster][account_reference_storage_struct][ok]" time="0.163"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=141)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=141)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop0]" time="0.327"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=143).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=143).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[EREP-050]unstaked][paymaster][context][drop]" time="0.167"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=145).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=145).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]unstaked][paymaster][external_storage_read][drop]" time="0.162"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=147).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=147).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]unstaked][paymaster][out_of_gas][drop]" time="0.172"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=149).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=149).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]unstaked][paymaster][sstore_out_of_gas][drop]" time="0.166"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=151).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=151).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]staked][paymaster][no_storage][ok]" time="0.184"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=153)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=153)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-031]staked][paymaster][storage][ok]" time="0.188"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=155)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=155)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]staked][paymaster][reference_storage][ok]" time="0.188"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=157)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=157)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]staked][paymaster][reference_storage_struct][ok]" time="0.184"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=159)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=159)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][paymaster][reference_storage_struct][ok]" time="0.183"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=161)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=161)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-010]staked][paymaster][account_storage][ok]" time="0.185"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=163)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=163)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]staked][paymaster][account_reference_storage][ok]" time="0.184"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=165)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=165)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]staked][paymaster][account_reference_storage_struct][ok]" time="0.184"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=167)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=167)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-022]staked][paymaster][account_reference_storage_init_code][ok]" time="0.349"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=169)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=169)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[EREP-050]staked][paymaster][context][ok]" time="0.187"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=171)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=171)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][paymaster][external_storage_write][drop]" time="0.184"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=173).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=173).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][paymaster][external_storage_read][ok]" time="0.183"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=175)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=175)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]staked][paymaster][out_of_gas][drop]" time="0.184"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=177).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=177).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]staked][paymaster][sstore_out_of_gas][drop]" time="0.184"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=179).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=179).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][factory][no_storage][ok]" time="0.192"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=181)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=181)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][factory][storage][drop]" time="0.191"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=183).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=183).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][factory][reference_storage][drop]" time="0.193"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=185).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=185).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]unstaked][factory][reference_storage_struct][drop]" time="0.194"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=187).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=187).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-010]unstaked][factory][account_storage][ok]" time="0.194"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=189)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=189)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]unstaked][factory][account_reference_storage][drop]" time="0.195"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=191).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=191).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]unstaked][factory][account_reference_storage_struct][drop]" time="0.193"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=193).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=193).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][factory][external_storage_read][drop]" time="0.192"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=195).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=195).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-042]unstaked][factory][EXTCODEx_CALLx_undeployed_sender][ok]" time="0.210"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=197)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=197)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][EXTCODESIZE_undeployed_contract][drop]" time="0.193"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=199).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=199).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][EXTCODEHASH_undeployed_contract][drop]" time="0.197"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=201).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=201).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][EXTCODECOPY_undeployed_contract][drop]" time="0.195"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=203).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=203).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][CALL_undeployed_contract][drop]" time="0.191"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=205).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=205).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][CALLCODE_undeployed_contract][drop]" time="0.193"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=207).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=207).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][DELEGATECALL_undeployed_contract][drop]" time="0.194"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=209).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=209).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][STATICCALL_undeployed_contract][drop]" time="0.216"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=211).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=211).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]unstaked][factory][out_of_gas][drop]" time="0.192"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=213).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=213).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]unstaked][factory][sstore_out_of_gas][drop]" time="0.192"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=215).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=215).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]staked][factory][no_storage][ok]" time="0.212"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=217)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=217)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-031]staked][factory][storage][ok]" time="0.219"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=219)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=219)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]staked][factory][reference_storage][ok]" time="0.213"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=221)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=221)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]staked][factory][reference_storage_struct][ok]" time="0.213"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=223)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=223)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-010]staked][factory][account_storage][ok]" time="0.213"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=225)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=225)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]staked][factory][account_reference_storage][ok]" time="0.213"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=227)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=227)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]staked][factory][account_reference_storage_struct][ok]" time="0.213"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=229)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=229)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][factory][external_storage_write][drop]" time="0.213"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=231).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=231).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][factory][external_storage_read][ok]" time="0.215"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=233)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=233)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]staked][factory][out_of_gas][drop]" time="0.216"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=235).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=235).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]staked][factory][sstore_out_of_gas][drop]" time="0.213"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=237).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=237).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][account][no_storage][ok]" time="0.206"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=239)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=239)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-010]unstaked][account][account_storage][ok]" time="0.160"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=241)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=241)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]unstaked][account][account_reference_storage][ok]" time="0.161"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=243)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=243)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][drop]" time="0.328"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=245).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=245).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][ok]" time="0.389"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=247)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=247)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop1]" time="0.378"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=249).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=249).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]unstaked][account][account_reference_storage_struct][ok]" time="0.162"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=251)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=251)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][account][external_storage_read][drop]" time="0.162"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=253).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=253).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]unstaked][account][out_of_gas][drop]" time="0.162"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=255).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=255).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]unstaked][account][sstore_out_of_gas][drop]" time="0.161"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=257).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=257).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]staked][account][no_storage][ok]" time="0.179"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=259)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=259)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-010]staked][account][account_storage][ok]" time="0.181"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=261)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=261)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]staked][account][account_reference_storage][ok]" time="0.181"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=263)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=263)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]staked][account][account_reference_storage_struct][ok]" time="0.180"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=265)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=265)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]staked][account][out_of_gas][drop]" time="0.182"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=267).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=267).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]staked][account][sstore_out_of_gas][drop]" time="0.181"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=269).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=269).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][account][external_storage_write][drop]" time="0.204"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=271).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=271).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][account][external_storage_read][ok]" time="0.184"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=273)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=273)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-011]unstaked][account][entryPoint_call_balanceOf][drop]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=275).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=275).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-061]unstaked][account][eth_value_transfer_forbidden][drop]" time="0.158"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=277).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=277).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-053]unstaked][account][eth_value_transfer_entryPoint][ok]" time="0.057"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=279)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=279)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-052]unstaked][account][eth_value_transfer_entryPoint_depositTo][ok]" time="0.159"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=281)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=281)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][EXTCODESIZE_undeployed_contract][drop]" time="0.057"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=283).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=283).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][EXTCODEHASH_undeployed_contract][drop]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=285).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=285).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][EXTCODECOPY_undeployed_contract][drop]" time="0.059"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=287).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=287).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-054]unstaked][account][EXTCODESIZE_entrypoint][drop]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=289).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=289).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-054]unstaked][account][EXTCODEHASH_entrypoint][drop]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=291).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=291).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-054]unstaked][account][EXTCODECOPY_entrypoint][drop]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=293).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=293).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][CALL_undeployed_contract][drop]" time="0.159"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=295).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=295).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][CALLCODE_undeployed_contract][drop]" time="0.158"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=297).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=297).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][DELEGATECALL_undeployed_contract][drop]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=299).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=299).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][STATICCALL_undeployed_contract][drop]" time="0.159"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=301).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=301).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-062]unstaked][account][CALL_undeployed_contract_allowed_precompile][ok]" time="0.056"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=303)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=303)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_enough_verification_gas" time="0.029"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_storage_rules.py:798: in test_enough_verification_gas
    pre_verification_gas = response.result["preVerificationGas"]
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[GAS]" time="0.143"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=307).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=307).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[NUMBER]" time="0.142"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=308).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=308).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[TIMESTAMP]" time="0.142"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=309).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=309).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[COINBASE]" time="0.143"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=310).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=310).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[DIFFICULTY]" time="0.143"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=311).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=311).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[BASEFEE]" time="0.042"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=312).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=312).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[GASLIMIT]" time="0.150"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=313).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=313).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[GASPRICE]" time="0.144"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=314).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=314).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[SELFBALANCE]" time="0.144"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=315).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=315).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[BALANCE]" time="0.142"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=316).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=316).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[ORIGIN]" time="0.040"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=317).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=317).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[BLOCKHASH]" time="0.143"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=318).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=318).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[CREATE]" time="0.144"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=319).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=319).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[CREATE2]" time="0.145"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=320).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=320).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[SELFDESTRUCT]" time="0.142"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=321).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=321).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_allowed_opcode_sequence[GAS CALL]" time="0.143"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=322)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/opbanning/test_op_banning.py:58: in test_account_allowed_opcode_sequence
    assert_ok(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=322)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_allowed_opcode_sequence[GAS DELEGATECALL]" time="0.143"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=323)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/opbanning/test_op_banning.py:58: in test_account_allowed_opcode_sequence
    assert_ok(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=323)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[GAS]" time="0.159"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=324).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=324).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[NUMBER]" time="0.159"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=325).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=325).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[TIMESTAMP]" time="0.161"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=326).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=326).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[COINBASE]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=327).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=327).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[DIFFICULTY]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=328).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=328).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[BASEFEE]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=329).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=329).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[GASLIMIT]" time="0.162"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=330).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=330).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[GASPRICE]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=331).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=331).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[SELFBALANCE]" time="0.159"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=332).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=332).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[BALANCE]" time="0.263"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=333).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=333).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[ORIGIN]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=334).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=334).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[BLOCKHASH]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=335).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=335).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[CREATE]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=336).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=336).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[CREATE2]" time="0.160"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=337).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=337).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[SELFDESTRUCT]" time="0.159"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=338).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=338).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[GAS]" time="0.220"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=339).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=339).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[NUMBER]" time="0.187"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=340).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=340).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[TIMESTAMP]" time="0.190"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=341).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=341).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[COINBASE]" time="0.191"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=342).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=342).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[DIFFICULTY]" time="0.189"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=343).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=343).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[BASEFEE]" time="0.190"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=344).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=344).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[GASLIMIT]" time="0.189"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=345).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=345).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[GASPRICE]" time="0.189"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=346).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=346).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[SELFBALANCE]" time="0.189"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=347).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=347).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[BALANCE]" time="0.192"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=348).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=348).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[ORIGIN]" time="0.188"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=349).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=349).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[BLOCKHASH]" time="0.189"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=350).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=350).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[CREATE]" time="0.188"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=351).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=351).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[CREATE2]" time="0.190"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=352).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=352).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[SELFDESTRUCT]" time="0.191"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=353).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=353).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_chainId" name="test_eth_chainId[]" time="0.008" /><testcase classname="tests.single.rpc.test_eth_estimateUserOperationGas" name="test_eth_estimateUserOperationGas[]" time="0.027"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/rpc/test_eth_estimateUserOperationGas.py:20: in test_eth_estimateUserOperationGas
    validate(instance=response.result, schema=schema)
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_estimateUserOperationGas" name="test_eth_estimateUserOperationGas_execution_revert" time="0.025"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.EXECUTION_REVERTED: -32521&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=356).code">tests/single/rpc/test_eth_estimateUserOperationGas.py:29: in test_eth_estimateUserOperationGas_execution_revert
    assert_rpc_error(response, "test fail", RPCErrorCode.EXECUTION_REVERTED)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.EXECUTION_REVERTED: -32521&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=356).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_estimateUserOperationGas" name="test_eth_estimateUserOperationGas_simulation_revert" time="0.025"><failure message="AssertionError: assert 'dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'&#10; +  where 'dead signature' = &lt;built-in method lower of str object at 0x7f2d2a9d4270&gt;()&#10; +    where &lt;built-in method lower of str object at 0x7f2d2a9d4270&gt; = 'dead signature'.lower&#10; +  and   'failedopwithrevert(0,aa23 reverted,0x)' = &lt;built-in method lower of str object at 0x7f2d297ffd50&gt;()&#10; +    where &lt;built-in method lower of str object at 0x7f2d297ffd50&gt; = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower&#10; +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=357).message">tests/single/rpc/test_eth_estimateUserOperationGas.py:37: in test_eth_estimateUserOperationGas_simulation_revert
    assert_rpc_error(response, "dead signature", RPCErrorCode.REJECTED_BY_EP_OR_ACCOUNT)
tests/utils.py:106: in assert_rpc_error
    assert message.lower() in response.message.lower()
E   AssertionError: assert 'dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'
E    +  where 'dead signature' = &lt;built-in method lower of str object at 0x7f2d2a9d4270&gt;()
E    +    where &lt;built-in method lower of str object at 0x7f2d2a9d4270&gt; = 'dead signature'.lower
E    +  and   'failedopwithrevert(0,aa23 reverted,0x)' = &lt;built-in method lower of str object at 0x7f2d297ffd50&gt;()
E    +    where &lt;built-in method lower of str object at 0x7f2d297ffd50&gt; = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower
E    +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=357).message</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_getUserOperationByHash" name="test_eth_getUserOperationByHash[]" time="0.041"><failure message="TypeError: 'NoneType' object is not subscriptable">tests/single/rpc/test_eth_getUserOperationByHash.py:14: in test_eth_getUserOperationByHash
    assert userop_hash(
E   TypeError: 'NoneType' object is not subscriptable</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_getUserOperationByHash" name="test_eth_getUserOperationByHash_error" time="0.003"><failure message="AssertionError: assert -32602 == -32601&#10; +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=361).code">tests/single/rpc/test_eth_getUserOperationByHash.py:28: in test_eth_getUserOperationByHash_error
    assert_rpc_error(response, "Missing/invalid userOpHash", -32601)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32602 == -32601
E    +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=361).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_getUserOperationReceipt" name="test_eth_getUserOperationReceipt[]" time="0.037"><failure message="TypeError: 'NoneType' object is not subscriptable">tests/single/rpc/test_eth_getUserOperationReceipt.py:15: in test_eth_getUserOperationReceipt
    assert response.result["userOpHash"] == userop_hash(helper_contract, userop)
E   TypeError: 'NoneType' object is not subscriptable</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_getUserOperationReceipt" name="test_eth_getUserOperationReceipt_error" time="0.003"><failure message="AssertionError: assert -32602 == -32601&#10; +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=365).code">tests/single/rpc/test_eth_getUserOperationReceipt.py:26: in test_eth_getUserOperationReceipt_error
    assert_rpc_error(response, "Missing/invalid userOpHash", -32601)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32602 == -32601
E    +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=365).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_sendUserOperation" name="test_eth_sendUserOperation[]" time="0.035"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/rpc/test_eth_sendUserOperation.py:19: in test_eth_sendUserOperation
    assert response.result == userop_hash(helper_contract, userop)
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_sendUserOperation" name="test_eth_sendUserOperation_revert" time="0.036"><failure message="AssertionError: assert 'testwallet: dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'&#10; +  where 'testwallet: dead signature' = &lt;built-in method lower of str object at 0x7f2d2a5657f0&gt;()&#10; +    where &lt;built-in method lower of str object at 0x7f2d2a5657f0&gt; = 'testWallet: dead signature'.lower&#10; +  and   'failedopwithrevert(0,aa23 reverted,0x)' = &lt;built-in method lower of str object at 0x7f2d297ffbd0&gt;()&#10; +    where &lt;built-in method lower of str object at 0x7f2d297ffbd0&gt; = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower&#10; +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=368).message">tests/single/rpc/test_eth_sendUserOperation.py:32: in test_eth_sendUserOperation_revert
    assert_rpc_error(
tests/utils.py:106: in assert_rpc_error
    assert message.lower() in response.message.lower()
E   AssertionError: assert 'testwallet: dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'
E    +  where 'testwallet: dead signature' = &lt;built-in method lower of str object at 0x7f2d2a5657f0&gt;()
E    +    where &lt;built-in method lower of str object at 0x7f2d2a5657f0&gt; = 'testWallet: dead signature'.lower
E    +  and   'failedopwithrevert(0,aa23 reverted,0x)' = &lt;built-in method lower of str object at 0x7f2d297ffbd0&gt;()
E    +    where &lt;built-in method lower of str object at 0x7f2d297ffbd0&gt; = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower
E    +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=368).message</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_sendUserOperation" name="test_eth_sendUserOperation_invalid_signature" time="0.023"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.INVALID_SIGNATURE: -32507&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=370).code">tests/single/rpc/test_eth_sendUserOperation.py:38: in test_eth_sendUserOperation_invalid_signature
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.INVALID_SIGNATURE: -32507&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=370).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_supportedEntryPoints" name="test_eth_supportedEntryPoints[]" time="0.019" /></testsuite></testsuites>