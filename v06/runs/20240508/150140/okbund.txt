Wed May  8 14:52:44 UTC 2024: starting bundler /home/runner/work/bundler-test-executor/bundler-test-executor/bundlers/okbund/okbund.yml, name=okbund
Wed May  8 14:53:13 UTC 2024: started bundler /home/runner/work/bundler-test-executor/bundler-test-executor/bundlers/okbund/okbund.yml, name=okbund
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.2.0, pluggy-1.0.0
rootdir: /home/runner/work/bundler-test-executor/bundler-test-executor/bundler-spec-tests
plugins: web3-5.31.1
collected 170 items / 1 skipped

tests/single/bundle/test_bundle.py FFFFFFFFFFFFFFFFFFFF.                 [ 12%]
tests/single/bundle/test_codehash.py F                                   [ 12%]
tests/single/bundle/test_storage_rules.py FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF [ 30%]
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF              [ 65%]
tests/single/opbanning/test_op_banning.py FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF [ 82%]
FFFFFFFFFFFFFFFFF                                                        [ 92%]
tests/single/rpc/test_eth_chainId.py .                                   [ 93%]
tests/single/rpc/test_eth_estimateUserOperationGas.py FFF                [ 95%]
tests/single/rpc/test_eth_getUserOperationByHash.py FF                   [ 96%]
tests/single/rpc/test_eth_getUserOperationReceipt.py FF                  [ 97%]
tests/single/rpc/test_eth_sendUserOperation.py FFF                       [ 99%]
tests/single/rpc/test_eth_supportedEntryPoints.py .                      [100%]

=================================== FAILURES ===================================
________________ test_bundle_replace_op[only_priority_fee_bump] ________________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
__________________ test_bundle_replace_op[only_max_fee_bump] ___________________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
____________________ test_bundle_replace_op[with_same_fee] _____________________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
____________________ test_bundle_replace_op[with_less_fee] _____________________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
_______________ test_bundle_replace_op[fee_bump_below_threshold] _______________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
________________ test_bundle_replace_op[fee_bump_at_threshold] _________________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
_______________ test_bundle_replace_op[fee_bump_above_threshold] _______________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
_ test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-sender] _
tests/single/bundle/test_bundle.py:233: in test_mempool_reputation_rules_all_entities
    assert_rpc_error(response, case.stake_status, case.errorCode)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == -32504
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=19).code
_ test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-paymaster] _
tests/single/bundle/test_bundle.py:233: in test_mempool_reputation_rules_all_entities
    assert_rpc_error(response, case.stake_status, case.errorCode)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == -32504
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=26).code
_ test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-factory] _
tests/single/bundle/test_bundle.py:233: in test_mempool_reputation_rules_all_entities
    assert_rpc_error(response, case.stake_status, case.errorCode)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == -32504
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=33).code
_ test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-sender] _
tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49', nonce='0x0', initCode='0x93102A1831d049D55e95D25d07...ityFeePerGas='0xb2d05e00', paymasterAndData='0x712790adeb13aab7b1a696b7ce60181691ae2da96e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',
E     -                nonce='0x0',
E     -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x712790adeb13aab7b1a696b7ce60181691ae2da96e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x686ac9f5d30d2ba99d535dbb7e15e6927e5655486e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',
E     -                nonce='0x20000000000000000',
E     -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x2307a7eb7dfb9b93bc99ffe2a829ab60a7dcd5506e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xd7c1591f038071de1480bd68ad61a22466b3bdf46e6f7468696e67',
E     -                signature='0x'),
E       ]
_ test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-paymaster] _
tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0xaeDC8304961dCFc14a416E9a0a1788B23634b092', nonce='0x0', initCode='0x9BF32C16073D0E65d5f5728271...ityFeePerGas='0xb2d05e00', paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xaeDC8304961dCFc14a416E9a0a1788B23634b092',
E     -                nonce='0x0',
E     -                initCode='0x9BF32C16073D0E65d5f57282715B948d931442360d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x047bd6a3A34aa4d464E0d34D3DcB4201f68aF057',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x4a5fF638e31B820D724327a1f9E5fCCCB8d700140d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x2E89f6255CBf0bAEA7DFeaE37E7c3b99Bb7E7b8a',
E     -                nonce='0x20000000000000000',
E     -                initCode='0x8dfcfCeFB1d126E15Ca1E9D913be845443f8D1300d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x8391BD1367099672B6ba7a65B4250c87F384C3a3',
E     -                nonce='0x30000000000000000',
E     -                initCode='0xAe08e45461C5Ca2BE52961A38a1ed620a2020b710d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',
E     -                signature='0x'),
E       ]
_ test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-factory] _
tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0x8150Edf5fCCa643413123721a5dBece565bFd857', nonce='0x0', initCode='0x722081A4f71908AC2Fcb874664...ityFeePerGas='0xb2d05e00', paymasterAndData='0xeb0a4f1135f68a244ec5ec958866b986d0ec0dbf6e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x8150Edf5fCCa643413123721a5dBece565bFd857',
E     -                nonce='0x0',
E     -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xeb0a4f1135f68a244ec5ec958866b986d0ec0dbf6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x216Ebbef8003C6E65862a90E3866Bac256a2C69d',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x752dda075eca4b92e5bcf37afb2ae6d818852ebc6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x194ad0C67207fd64791046B80a78E9734dD00f17',
E     -                nonce='0x20000000000000000',
E     -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x74bbd87fb5e4cd55a5bcc0f469dabb6c3b5163926e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x7349a22c2F4C5D94801bC34B6767d78ae32E5830',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xb58d5009ff47f7eedf823f5fa3cb0837ec5013926e6f7468696e67',
E     -                signature='0x'),
E       ]
_ test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-sender] _
tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717', nonce='0x0', initCode='0xe6027abEC871594f6F328Fae3F...ityFeePerGas='0xb2d05e00', paymasterAndData='0xcd265fcc81026a08ff3304141213e864e20ae4d66e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',
E     -                nonce='0x0',
E     -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xcd265fcc81026a08ff3304141213e864e20ae4d66e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',
E     -                nonce='0x10000000000000000',
E     -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x2e929b2516839e78c27be05f50cc609b97b07ce66e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',
E     -                nonce='0x20000000000000000',
E     -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x272db3d6dcfeb30a205a0e59f65dad5ace948c146e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',
E     -                nonce='0x30000000000000000',
E     -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xc695c2cac55d67477df85e8a40669375584ef79f6e6f7468696e67',
E     -                signature='0x'),
E       ]
_ test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-paymaster] _
tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...re='0x'), ...]
E     Right contains 11 more items, first extra item: UserOperation(sender='0xA20da00290186736Ab090492f6FC474131C3dD48', nonce='0x0', initCode='0x35575623B9a1f32dDf2FDbC78e...ityFeePerGas='0xb2d05e00', paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xA20da00290186736Ab090492f6FC474131C3dD48',
E     -                nonce='0x0',
E     -                initCode='0x35575623B9a1f32dDf2FDbC78e969B74e9FD78b40d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x32b71cbB6951e4825463d85430b58a685bDC7650',
E     -                nonce='0x10000000000000000',
E     -                initCode='0xf3b6a719b22F6C25acCbA8389Ac4C2aDb9d08B9F0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x2Aa7f67bd63c21418B3C223362444D6866f5fb3D',
E     -                nonce='0x20000000000000000',
E     -                initCode='0x0693bE2cF02d2a5054Bd1eE2B74B1770a4aA83aC0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x0F7eC8803db6115F8875c34fCC0c239d34a9fA62',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x0f31cD7acdb497d646C486f42850F5f68DEC8a620d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xfe463Be4Ac1A40b95f5Ad6e25638Bea04ece0e93',
E     -                nonce='0x40000000000000000',
E     -                initCode='0x61d547E41EBF39b7045Ad7E3fD88E3880a55F5000d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x1B1cd9E595Cfd77fC845dD35Fb4031F79AF8F514',
E     -                nonce='0x50000000000000000',
E     -                initCode='0x56DBAd9adF7a801360C2f5eEc6875B0846f0Abc90d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x7edbD3947ce73B05b433836ce6A1576da51ECc09',
E     -                nonce='0x60000000000000000',
E     -                initCode='0x2bd7753098B6AbdEa1AD11A39080853b1307FD440d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xa0E57e97be8a1fCf0Ef4e7777aAf06B68dB774aF',
E     -                nonce='0x70000000000000000',
E     -                initCode='0x6a8Cb2C61EF921c134c7EBB2dE16b73552C9D5860d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x6290f0847A92627956A993ABe39bca49779e7154',
E     -                nonce='0x80000000000000000',
E     -                initCode='0x8E432C431C6e4eCf58d3a03e913A75830d4E91960d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xee2a59c6ec9CD3aDb94144d9b4F1A5061b82D28B',
E     -                nonce='0x90000000000000000',
E     -                initCode='0xE87128612E39C3Be9dc15c2000EEe97696015b8B0d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x4b1B7fe594C3011918fcE4881C504640417FCBd2',
E     -                nonce='0xa0000000000000000',
E     -                initCode='0x1a91153c88008bB0975A72DC2c9C31f015d1b6100d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
E     -                signature='0x'),
E       ]
_ test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-factory] _
tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...re='0x'), ...]
E     Right contains 11 more items, first extra item: UserOperation(sender='0x1E38b33255635f48778632FAc4cD3DaaC100FF45', nonce='0x0', initCode='0xe8B8502EbbA0F8A2667d9E36cc...ityFeePerGas='0xb2d05e00', paymasterAndData='0x2ee570ce72762180a2712e5b55c529fefdb2ef976e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x1E38b33255635f48778632FAc4cD3DaaC100FF45',
E     -                nonce='0x0',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x2ee570ce72762180a2712e5b55c529fefdb2ef976e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x052D2F7035E9a87442c68FfAA1B04eC97Cf4E551',
E     -                nonce='0x10000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x72ead559d07af32670c4202b739aee797bdaafce6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x91A490F500a88C34CBF0ce34f1b392cb746AD3a5',
E     -                nonce='0x20000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x8a7aba4468f36242680bb9844d75e5f18436a0af6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x14d4D40c5487a44a0C02C24E7b272cEC19e7bfd8',
E     -                nonce='0x30000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x3209af030e8e8073c51ab255b19db5ef7b03a1436e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xb34640Ec88E7EF27339E18A18af7f1e0A3514245',
E     -                nonce='0x40000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf5c1b727e85a9f0f1e80a95f22445bb13a2ca8356e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xd74e5429d85f02590b60c884A1e683BE6125e4fB',
E     -                nonce='0x50000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x94b17b309a4c42701bbd5718c18e193711d6da916e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xE1BaF82E5e2Ed8ac0660726723e915785e047445',
E     -                nonce='0x60000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x4a567001454227551a09f75f0bc401fd58425d7c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xE4691aF4B8A449D55CB54A7f4D6Ee13Cc8479c72',
E     -                nonce='0x70000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xb87299e5d0b787aca9d0d733027644c82f5a5bb56e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x14ed851C4c9d8e7f4B74B86b68F72103f855FdE8',
E     -                nonce='0x80000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x239949f5b1af72783957e37797a17541db1f30b66e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xBbE8c89589ef06F6E746004c6969dc5170c91c91',
E     -                nonce='0x90000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf32e4480abe68f50a08547e5295fc3eeea544fa66e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xBf6F4C384324b4Dd64362DC1C2114475B4782b78',
E     -                nonce='0xa0000000000000000',
E     -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x3ba165f66bc2327fbefa0aa0bf01bd42bfb8578f6e6f7468696e67',
E     -                signature='0x'),
E       ]
_____________________ test_max_allowed_ops_unstaked_sender _____________________
tests/single/bundle/test_bundle.py:248: in test_max_allowed_ops_unstaked_sender
    assert dump_mempool() == wallet_ops[: i + 1]
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains one more item: UserOperation(sender='0xb8CC681AA513f1bDFDB0D6a984893F1bFd030De6', nonce='0x0', initCode='0x', callData='0xa9e966b7000...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xb8CC681AA513f1bDFDB0D6a984893F1bFd030De6',
E     -                nonce='0x0',
E     -                initCode='0x',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x',
E     -                signature='0x'),
E       ]
______________________ test_max_allowed_ops_staked_sender ______________________
tests/single/bundle/test_bundle.py:275: in test_max_allowed_ops_staked_sender
    assert dump_mempool() == wallet_ops[: i + 1]
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains one more item: UserOperation(sender='0xa4aF82e7d511bdf1460A355c0F748Cc746d688AC', nonce='0x10000000000000000', initCode='0x', callDat...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xa4aF82e7d511bdf1460A355c0F748Cc746d688AC',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x',
E     -                signature='0x'),
E       ]
______________ test_ban_user_op_access_other_ops_sender_in_bundle ______________
tests/single/bundle/test_bundle.py:319: in test_ban_user_op_access_other_ops_sender_in_bundle
    assert dump_mempool() == [user_op2]
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains one more item: UserOperation(sender='0x95649063Dcc9140ce146f9fbde8484581e4F8552', nonce='0x0', initCode='0x', callData='0x', callGasL...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x95649063Dcc9140ce146f9fbde8484581e4F8552',
E     -                nonce='0x0',
E     -                initCode='0x',
E     -                callData='0x',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x',
E     -                signature='0x'),
E       ]
__________________ test_ban_user_sender_double_role_in_bundle __________________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_bundle.py:358: in test_ban_user_sender_double_role_in_bundle
    assert_ok(response1)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='0x', data=None, id=119)
____________________________ test_codehash_changed _____________________________
tests/single/bundle/test_codehash.py:44: in test_codehash_changed
    assert response.result, "userop dropped by bundler"
E   AttributeError: 'Error' object has no attribute 'result'
___________ test_rule[[STO-000]unstaked][paymaster][no_storage][ok] ____________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=129)
____________ test_rule[[STO-031]unstaked][paymaster][storage][drop] ____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=131).code
_______ test_rule[[STO-032]unstaked][paymaster][reference_storage][drop] _______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=133).code
___ test_rule[[STO-032]unstaked][paymaster][reference_storage_struct][drop] ____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=135).code
_________ test_rule[[STO-010]unstaked][paymaster][account_storage][ok] _________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=137)
____ test_rule[[STO-021]unstaked][paymaster][account_reference_storage][ok] ____
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=139)
_ test_rule[[STO-021]unstaked][paymaster][account_reference_storage_struct][ok] _
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=141)
_ test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop0] _
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=143).code
___________ test_rule[[EREP-050]unstaked][paymaster][context][drop] ____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=145).code
_____ test_rule[[STO-032]unstaked][paymaster][external_storage_read][drop] _____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=147).code
___________ test_rule[[OP-020]unstaked][paymaster][out_of_gas][drop] ___________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=149).code
_______ test_rule[[OP-020]unstaked][paymaster][sstore_out_of_gas][drop] ________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=151).code
____________ test_rule[[STO-000]staked][paymaster][no_storage][ok] _____________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=153)
______________ test_rule[[STO-031]staked][paymaster][storage][ok] ______________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=155)
_________ test_rule[[STO-032]staked][paymaster][reference_storage][ok] _________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=157)
_____ test_rule[[STO-032]staked][paymaster][reference_storage_struct][ok] ______
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=159)
_____ test_rule[[STO-033]staked][paymaster][reference_storage_struct][ok] ______
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=161)
__________ test_rule[[STO-010]staked][paymaster][account_storage][ok] __________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=163)
_____ test_rule[[STO-021]staked][paymaster][account_reference_storage][ok] _____
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=165)
_ test_rule[[STO-021]staked][paymaster][account_reference_storage_struct][ok] __
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=167)
_ test_rule[[STO-022]staked][paymaster][account_reference_storage_init_code][ok] _
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=169)
_____________ test_rule[[EREP-050]staked][paymaster][context][ok] ______________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=171)
_____ test_rule[[STO-033]staked][paymaster][external_storage_write][drop] ______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=173).code
_______ test_rule[[STO-033]staked][paymaster][external_storage_read][ok] _______
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=175)
____________ test_rule[[OP-020]staked][paymaster][out_of_gas][drop] ____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=177).code
________ test_rule[[OP-020]staked][paymaster][sstore_out_of_gas][drop] _________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=179).code
____________ test_rule[[STO-000]unstaked][factory][no_storage][ok] _____________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=181)
_____________ test_rule[[STO-000]unstaked][factory][storage][drop] _____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=183).code
________ test_rule[[STO-000]unstaked][factory][reference_storage][drop] ________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=185).code
____ test_rule[[STO-032]unstaked][factory][reference_storage_struct][drop] _____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=187).code
__________ test_rule[[STO-010]unstaked][factory][account_storage][ok] __________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=189)
____ test_rule[[STO-021]unstaked][factory][account_reference_storage][drop] ____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=191).code
_ test_rule[[STO-021]unstaked][factory][account_reference_storage_struct][drop] _
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=193).code
______ test_rule[[STO-000]unstaked][factory][external_storage_read][drop] ______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=195).code
__ test_rule[[OP-042]unstaked][factory][EXTCODEx_CALLx_undeployed_sender][ok] __
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=197)
_ test_rule[[OP-041]unstaked][factory][EXTCODESIZE_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=199).code
_ test_rule[[OP-041]unstaked][factory][EXTCODEHASH_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=201).code
_ test_rule[[OP-041]unstaked][factory][EXTCODECOPY_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=203).code
_____ test_rule[[OP-041]unstaked][factory][CALL_undeployed_contract][drop] _____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=205).code
___ test_rule[[OP-041]unstaked][factory][CALLCODE_undeployed_contract][drop] ___
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=207).code
_ test_rule[[OP-041]unstaked][factory][DELEGATECALL_undeployed_contract][drop] _
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=209).code
__ test_rule[[OP-041]unstaked][factory][STATICCALL_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=211).code
____________ test_rule[[OP-020]unstaked][factory][out_of_gas][drop] ____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=213).code
________ test_rule[[OP-020]unstaked][factory][sstore_out_of_gas][drop] _________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=215).code
_____________ test_rule[[STO-000]staked][factory][no_storage][ok] ______________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=217)
_______________ test_rule[[STO-031]staked][factory][storage][ok] _______________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=219)
__________ test_rule[[STO-032]staked][factory][reference_storage][ok] __________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=221)
______ test_rule[[STO-032]staked][factory][reference_storage_struct][ok] _______
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=223)
___________ test_rule[[STO-010]staked][factory][account_storage][ok] ___________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=225)
______ test_rule[[STO-021]staked][factory][account_reference_storage][ok] ______
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=227)
__ test_rule[[STO-021]staked][factory][account_reference_storage_struct][ok] ___
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=229)
______ test_rule[[STO-033]staked][factory][external_storage_write][drop] _______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=231).code
________ test_rule[[STO-033]staked][factory][external_storage_read][ok] ________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=233)
_____________ test_rule[[OP-020]staked][factory][out_of_gas][drop] _____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=235).code
_________ test_rule[[OP-020]staked][factory][sstore_out_of_gas][drop] __________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=237).code
____________ test_rule[[STO-000]unstaked][account][no_storage][ok] _____________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=239)
__________ test_rule[[STO-010]unstaked][account][account_storage][ok] __________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=241)
_____ test_rule[[STO-021]unstaked][account][account_reference_storage][ok] _____
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=243)
_ test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][drop] _
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=245).code
_ test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][ok] _
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=247)
_ test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop1] _
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=249).code
_ test_rule[[STO-021]unstaked][account][account_reference_storage_struct][ok] __
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=251)
______ test_rule[[STO-000]unstaked][account][external_storage_read][drop] ______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=253).code
____________ test_rule[[OP-020]unstaked][account][out_of_gas][drop] ____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=255).code
________ test_rule[[OP-020]unstaked][account][sstore_out_of_gas][drop] _________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=257).code
_____________ test_rule[[STO-000]staked][account][no_storage][ok] ______________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=259)
___________ test_rule[[STO-010]staked][account][account_storage][ok] ___________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=261)
______ test_rule[[STO-021]staked][account][account_reference_storage][ok] ______
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=263)
__ test_rule[[STO-021]staked][account][account_reference_storage_struct][ok] ___
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=265)
_____________ test_rule[[OP-020]staked][account][out_of_gas][drop] _____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=267).code
_________ test_rule[[OP-020]staked][account][sstore_out_of_gas][drop] __________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=269).code
______ test_rule[[STO-033]staked][account][external_storage_write][drop] _______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=271).code
________ test_rule[[STO-033]staked][account][external_storage_read][ok] ________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=273)
____ test_rule[[OP-011]unstaked][account][entryPoint_call_balanceOf][drop] _____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=275).code
___ test_rule[[OP-061]unstaked][account][eth_value_transfer_forbidden][drop] ___
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=277).code
___ test_rule[[OP-053]unstaked][account][eth_value_transfer_entryPoint][ok] ____
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=279)
_ test_rule[[OP-052]unstaked][account][eth_value_transfer_entryPoint_depositTo][ok] _
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=281)
_ test_rule[[OP-041]unstaked][account][EXTCODESIZE_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=283).code
_ test_rule[[OP-041]unstaked][account][EXTCODEHASH_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=285).code
_ test_rule[[OP-041]unstaked][account][EXTCODECOPY_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=287).code
______ test_rule[[OP-054]unstaked][account][EXTCODESIZE_entrypoint][drop] ______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=289).code
______ test_rule[[OP-054]unstaked][account][EXTCODEHASH_entrypoint][drop] ______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=291).code
______ test_rule[[OP-054]unstaked][account][EXTCODECOPY_entrypoint][drop] ______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=293).code
_____ test_rule[[OP-041]unstaked][account][CALL_undeployed_contract][drop] _____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=295).code
___ test_rule[[OP-041]unstaked][account][CALLCODE_undeployed_contract][drop] ___
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=297).code
_ test_rule[[OP-041]unstaked][account][DELEGATECALL_undeployed_contract][drop] _
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=299).code
__ test_rule[[OP-041]unstaked][account][STATICCALL_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=301).code
_ test_rule[[OP-062]unstaked][account][CALL_undeployed_contract_allowed_precompile][ok] _
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=303)
_________________________ test_enough_verification_gas _________________________
tests/single/bundle/test_storage_rules.py:798: in test_enough_verification_gas
    pre_verification_gas = response.result["preVerificationGas"]
E   AttributeError: 'Error' object has no attribute 'result'
_______________________ test_account_banned_opcode[GAS] ________________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=307).code
______________________ test_account_banned_opcode[NUMBER] ______________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=308).code
____________________ test_account_banned_opcode[TIMESTAMP] _____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=309).code
_____________________ test_account_banned_opcode[COINBASE] _____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=310).code
____________________ test_account_banned_opcode[DIFFICULTY] ____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=311).code
_____________________ test_account_banned_opcode[BASEFEE] ______________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=312).code
_____________________ test_account_banned_opcode[GASLIMIT] _____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=313).code
_____________________ test_account_banned_opcode[GASPRICE] _____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=314).code
___________________ test_account_banned_opcode[SELFBALANCE] ____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=315).code
_____________________ test_account_banned_opcode[BALANCE] ______________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=316).code
______________________ test_account_banned_opcode[ORIGIN] ______________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=317).code
____________________ test_account_banned_opcode[BLOCKHASH] _____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=318).code
______________________ test_account_banned_opcode[CREATE] ______________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=319).code
_____________________ test_account_banned_opcode[CREATE2] ______________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=320).code
___________________ test_account_banned_opcode[SELFDESTRUCT] ___________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=321).code
________________ test_account_allowed_opcode_sequence[GAS CALL] ________________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/opbanning/test_op_banning.py:58: in test_account_allowed_opcode_sequence
    assert_ok(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=322)
____________ test_account_allowed_opcode_sequence[GAS DELEGATECALL] ____________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/opbanning/test_op_banning.py:58: in test_account_allowed_opcode_sequence
    assert_ok(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=323)
______________________ test_paymaster_banned_opcode[GAS] _______________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=324).code
_____________________ test_paymaster_banned_opcode[NUMBER] _____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=325).code
___________________ test_paymaster_banned_opcode[TIMESTAMP] ____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=326).code
____________________ test_paymaster_banned_opcode[COINBASE] ____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=327).code
___________________ test_paymaster_banned_opcode[DIFFICULTY] ___________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=328).code
____________________ test_paymaster_banned_opcode[BASEFEE] _____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=329).code
____________________ test_paymaster_banned_opcode[GASLIMIT] ____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=330).code
____________________ test_paymaster_banned_opcode[GASPRICE] ____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=331).code
__________________ test_paymaster_banned_opcode[SELFBALANCE] ___________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=332).code
____________________ test_paymaster_banned_opcode[BALANCE] _____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=333).code
_____________________ test_paymaster_banned_opcode[ORIGIN] _____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=334).code
___________________ test_paymaster_banned_opcode[BLOCKHASH] ____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=335).code
_____________________ test_paymaster_banned_opcode[CREATE] _____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=336).code
____________________ test_paymaster_banned_opcode[CREATE2] _____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=337).code
__________________ test_paymaster_banned_opcode[SELFDESTRUCT] __________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=338).code
_______________________ test_factory_banned_opcode[GAS] ________________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=339).code
______________________ test_factory_banned_opcode[NUMBER] ______________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=340).code
____________________ test_factory_banned_opcode[TIMESTAMP] _____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=341).code
_____________________ test_factory_banned_opcode[COINBASE] _____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=342).code
____________________ test_factory_banned_opcode[DIFFICULTY] ____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=343).code
_____________________ test_factory_banned_opcode[BASEFEE] ______________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=344).code
_____________________ test_factory_banned_opcode[GASLIMIT] _____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=345).code
_____________________ test_factory_banned_opcode[GASPRICE] _____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=346).code
___________________ test_factory_banned_opcode[SELFBALANCE] ____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=347).code
_____________________ test_factory_banned_opcode[BALANCE] ______________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=348).code
______________________ test_factory_banned_opcode[ORIGIN] ______________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=349).code
____________________ test_factory_banned_opcode[BLOCKHASH] _____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=350).code
______________________ test_factory_banned_opcode[CREATE] ______________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=351).code
_____________________ test_factory_banned_opcode[CREATE2] ______________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=352).code
___________________ test_factory_banned_opcode[SELFDESTRUCT] ___________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=353).code
_____________________ test_eth_estimateUserOperationGas[] ______________________
tests/single/rpc/test_eth_estimateUserOperationGas.py:20: in test_eth_estimateUserOperationGas
    validate(instance=response.result, schema=schema)
E   AttributeError: 'Error' object has no attribute 'result'
______________ test_eth_estimateUserOperationGas_execution_revert ______________
tests/single/rpc/test_eth_estimateUserOperationGas.py:29: in test_eth_estimateUserOperationGas_execution_revert
    assert_rpc_error(response, "test fail", RPCErrorCode.EXECUTION_REVERTED)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.EXECUTION_REVERTED: -32521>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=356).code
_____________ test_eth_estimateUserOperationGas_simulation_revert ______________
tests/single/rpc/test_eth_estimateUserOperationGas.py:37: in test_eth_estimateUserOperationGas_simulation_revert
    assert_rpc_error(response, "dead signature", RPCErrorCode.REJECTED_BY_EP_OR_ACCOUNT)
tests/utils.py:106: in assert_rpc_error
    assert message.lower() in response.message.lower()
E   AssertionError: assert 'dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'
E    +  where 'dead signature' = <built-in method lower of str object at 0x7f2d2a9d4270>()
E    +    where <built-in method lower of str object at 0x7f2d2a9d4270> = 'dead signature'.lower
E    +  and   'failedopwithrevert(0,aa23 reverted,0x)' = <built-in method lower of str object at 0x7f2d297ffd50>()
E    +    where <built-in method lower of str object at 0x7f2d297ffd50> = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower
E    +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=357).message
______________________ test_eth_getUserOperationByHash[] _______________________
tests/single/rpc/test_eth_getUserOperationByHash.py:14: in test_eth_getUserOperationByHash
    assert userop_hash(
E   TypeError: 'NoneType' object is not subscriptable
____________________ test_eth_getUserOperationByHash_error _____________________
tests/single/rpc/test_eth_getUserOperationByHash.py:28: in test_eth_getUserOperationByHash_error
    assert_rpc_error(response, "Missing/invalid userOpHash", -32601)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32602 == -32601
E    +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=361).code
______________________ test_eth_getUserOperationReceipt[] ______________________
tests/single/rpc/test_eth_getUserOperationReceipt.py:15: in test_eth_getUserOperationReceipt
    assert response.result["userOpHash"] == userop_hash(helper_contract, userop)
E   TypeError: 'NoneType' object is not subscriptable
____________________ test_eth_getUserOperationReceipt_error ____________________
tests/single/rpc/test_eth_getUserOperationReceipt.py:26: in test_eth_getUserOperationReceipt_error
    assert_rpc_error(response, "Missing/invalid userOpHash", -32601)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32602 == -32601
E    +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=365).code
_________________________ test_eth_sendUserOperation[] _________________________
tests/single/rpc/test_eth_sendUserOperation.py:19: in test_eth_sendUserOperation
    assert response.result == userop_hash(helper_contract, userop)
E   AttributeError: 'Error' object has no attribute 'result'
______________________ test_eth_sendUserOperation_revert _______________________
tests/single/rpc/test_eth_sendUserOperation.py:32: in test_eth_sendUserOperation_revert
    assert_rpc_error(
tests/utils.py:106: in assert_rpc_error
    assert message.lower() in response.message.lower()
E   AssertionError: assert 'testwallet: dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'
E    +  where 'testwallet: dead signature' = <built-in method lower of str object at 0x7f2d2a5657f0>()
E    +    where <built-in method lower of str object at 0x7f2d2a5657f0> = 'testWallet: dead signature'.lower
E    +  and   'failedopwithrevert(0,aa23 reverted,0x)' = <built-in method lower of str object at 0x7f2d297ffbd0>()
E    +    where <built-in method lower of str object at 0x7f2d297ffbd0> = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower
E    +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=368).message
_________________ test_eth_sendUserOperation_invalid_signature _________________
tests/single/rpc/test_eth_sendUserOperation.py:38: in test_eth_sendUserOperation_invalid_signature
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.INVALID_SIGNATURE: -32507>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=370).code
=============================== warnings summary ===============================
tests/single/bundle/test_codehash.py::test_codehash_changed
  /home/runner/work/bundler-test-executor/bundler-test-executor/bundler-spec-tests/.venv/lib/python3.10/site-packages/web3/contract.py:1190: UserWarning: The log with transaction hash: HexBytes('0x7bcfe5fea078a99eef51bdead0c9754a9c2b4c004673dba97d4aac50d8240db9') and logIndex: 0 encountered the following error during processing: MismatchedABI(The event signature did not match the provided ABI). It has been discarded.
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
==================================== PASSES ====================================
- generated xml file: /home/runner/work/bundler-test-executor/bundler-test-executor/build/out/okbund.xml -
=========================== short test summary info ============================
PASSED tests/single/bundle/test_bundle.py::test_stake_check_in_bundler
PASSED tests/single/rpc/test_eth_chainId.py::test_eth_chainId[]
PASSED tests/single/rpc/test_eth_supportedEntryPoints.py::test_eth_supportedEntryPoints[]
SKIPPED [1] tests/single/reputation/test_reputation.py:18: reputation tests currently skipped
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[only_priority_fee_bump] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[only_max_fee_bump] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[with_same_fee] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[with_less_fee] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[fee_bump_below_threshold] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[fee_bump_at_threshold] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[fee_bump_above_threshold] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-sender] - AssertionError: assert -32500 == -32504
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=19).code
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-paymaster] - AssertionError: assert -32500 == -32504
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=26).code
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-factory] - AssertionError: assert -32500 == -32504
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=33).code
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-sender] - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains 4 more items, first extra item: UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49', nonce='0x0', initCode='0x93102A1831d049D55e95D25d07...ityFeePerGas='0xb2d05e00', paymasterAndData='0x712790adeb13aab7b1a696b7ce60181691ae2da96e6f7468696e67', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',
  -                nonce='0x0',
  -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x712790adeb13aab7b1a696b7ce60181691ae2da96e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',
  -                nonce='0x10000000000000000',
  -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x686ac9f5d30d2ba99d535dbb7e15e6927e5655486e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',
  -                nonce='0x20000000000000000',
  -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x2307a7eb7dfb9b93bc99ffe2a829ab60a7dcd5506e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x9beF06A8a509dF42CaFe2b7d87e58C272Be4Cb49',
  -                nonce='0x30000000000000000',
  -                initCode='0x93102A1831d049D55e95D25d07443a19e4fa05160d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xd7c1591f038071de1480bd68ad61a22466b3bdf46e6f7468696e67',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-paymaster] - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains 4 more items, first extra item: UserOperation(sender='0xaeDC8304961dCFc14a416E9a0a1788B23634b092', nonce='0x0', initCode='0x9BF32C16073D0E65d5f5728271...ityFeePerGas='0xb2d05e00', paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0xaeDC8304961dCFc14a416E9a0a1788B23634b092',
  -                nonce='0x0',
  -                initCode='0x9BF32C16073D0E65d5f57282715B948d931442360d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x047bd6a3A34aa4d464E0d34D3DcB4201f68aF057',
  -                nonce='0x10000000000000000',
  -                initCode='0x4a5fF638e31B820D724327a1f9E5fCCCB8d700140d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x2E89f6255CBf0bAEA7DFeaE37E7c3b99Bb7E7b8a',
  -                nonce='0x20000000000000000',
  -                initCode='0x8dfcfCeFB1d126E15Ca1E9D913be845443f8D1300d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x8391BD1367099672B6ba7a65B4250c87F384C3a3',
  -                nonce='0x30000000000000000',
  -                initCode='0xAe08e45461C5Ca2BE52961A38a1ed620a2020b710d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x562d9d5229f909bd16a0800c568af0348b6e58c36e6f7468696e67',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-factory] - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains 4 more items, first extra item: UserOperation(sender='0x8150Edf5fCCa643413123721a5dBece565bFd857', nonce='0x0', initCode='0x722081A4f71908AC2Fcb874664...ityFeePerGas='0xb2d05e00', paymasterAndData='0xeb0a4f1135f68a244ec5ec958866b986d0ec0dbf6e6f7468696e67', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0x8150Edf5fCCa643413123721a5dBece565bFd857',
  -                nonce='0x0',
  -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xeb0a4f1135f68a244ec5ec958866b986d0ec0dbf6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x216Ebbef8003C6E65862a90E3866Bac256a2C69d',
  -                nonce='0x10000000000000000',
  -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x752dda075eca4b92e5bcf37afb2ae6d818852ebc6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x194ad0C67207fd64791046B80a78E9734dD00f17',
  -                nonce='0x20000000000000000',
  -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x74bbd87fb5e4cd55a5bcc0f469dabb6c3b5163926e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x7349a22c2F4C5D94801bC34B6767d78ae32E5830',
  -                nonce='0x30000000000000000',
  -                initCode='0x722081A4f71908AC2Fcb87466437e61819Ed473C0d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xb58d5009ff47f7eedf823f5fa3cb0837ec5013926e6f7468696e67',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-sender] - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains 4 more items, first extra item: UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717', nonce='0x0', initCode='0xe6027abEC871594f6F328Fae3F...ityFeePerGas='0xb2d05e00', paymasterAndData='0xcd265fcc81026a08ff3304141213e864e20ae4d66e6f7468696e67', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',
  -                nonce='0x0',
  -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xcd265fcc81026a08ff3304141213e864e20ae4d66e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',
  -                nonce='0x10000000000000000',
  -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x2e929b2516839e78c27be05f50cc609b97b07ce66e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',
  -                nonce='0x20000000000000000',
  -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x272db3d6dcfeb30a205a0e59f65dad5ace948c146e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x484d3bCd370F0240ED04F9B9b3FbE1e1342b6717',
  -                nonce='0x30000000000000000',
  -                initCode='0xe6027abEC871594f6F328Fae3FA7B7Be52C36a2c0d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xc695c2cac55d67477df85e8a40669375584ef79f6e6f7468696e67',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-paymaster] - AssertionError: assert [] == [UserOperatio...re='0x'), ...]
  Right contains 11 more items, first extra item: UserOperation(sender='0xA20da00290186736Ab090492f6FC474131C3dD48', nonce='0x0', initCode='0x35575623B9a1f32dDf2FDbC78e...ityFeePerGas='0xb2d05e00', paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0xA20da00290186736Ab090492f6FC474131C3dD48',
  -                nonce='0x0',
  -                initCode='0x35575623B9a1f32dDf2FDbC78e969B74e9FD78b40d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x32b71cbB6951e4825463d85430b58a685bDC7650',
  -                nonce='0x10000000000000000',
  -                initCode='0xf3b6a719b22F6C25acCbA8389Ac4C2aDb9d08B9F0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x2Aa7f67bd63c21418B3C223362444D6866f5fb3D',
  -                nonce='0x20000000000000000',
  -                initCode='0x0693bE2cF02d2a5054Bd1eE2B74B1770a4aA83aC0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x0F7eC8803db6115F8875c34fCC0c239d34a9fA62',
  -                nonce='0x30000000000000000',
  -                initCode='0x0f31cD7acdb497d646C486f42850F5f68DEC8a620d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xfe463Be4Ac1A40b95f5Ad6e25638Bea04ece0e93',
  -                nonce='0x40000000000000000',
  -                initCode='0x61d547E41EBF39b7045Ad7E3fD88E3880a55F5000d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x1B1cd9E595Cfd77fC845dD35Fb4031F79AF8F514',
  -                nonce='0x50000000000000000',
  -                initCode='0x56DBAd9adF7a801360C2f5eEc6875B0846f0Abc90d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x7edbD3947ce73B05b433836ce6A1576da51ECc09',
  -                nonce='0x60000000000000000',
  -                initCode='0x2bd7753098B6AbdEa1AD11A39080853b1307FD440d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xa0E57e97be8a1fCf0Ef4e7777aAf06B68dB774aF',
  -                nonce='0x70000000000000000',
  -                initCode='0x6a8Cb2C61EF921c134c7EBB2dE16b73552C9D5860d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x6290f0847A92627956A993ABe39bca49779e7154',
  -                nonce='0x80000000000000000',
  -                initCode='0x8E432C431C6e4eCf58d3a03e913A75830d4E91960d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xee2a59c6ec9CD3aDb94144d9b4F1A5061b82D28B',
  -                nonce='0x90000000000000000',
  -                initCode='0xE87128612E39C3Be9dc15c2000EEe97696015b8B0d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x4b1B7fe594C3011918fcE4881C504640417FCBd2',
  -                nonce='0xa0000000000000000',
  -                initCode='0x1a91153c88008bB0975A72DC2c9C31f015d1b6100d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x53ddcc4d2c550a26c02673498770857c421180f36e6f7468696e67',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-factory] - AssertionError: assert [] == [UserOperatio...re='0x'), ...]
  Right contains 11 more items, first extra item: UserOperation(sender='0x1E38b33255635f48778632FAc4cD3DaaC100FF45', nonce='0x0', initCode='0xe8B8502EbbA0F8A2667d9E36cc...ityFeePerGas='0xb2d05e00', paymasterAndData='0x2ee570ce72762180a2712e5b55c529fefdb2ef976e6f7468696e67', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0x1E38b33255635f48778632FAc4cD3DaaC100FF45',
  -                nonce='0x0',
  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x2ee570ce72762180a2712e5b55c529fefdb2ef976e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x052D2F7035E9a87442c68FfAA1B04eC97Cf4E551',
  -                nonce='0x10000000000000000',
  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x72ead559d07af32670c4202b739aee797bdaafce6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x91A490F500a88C34CBF0ce34f1b392cb746AD3a5',
  -                nonce='0x20000000000000000',
  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x8a7aba4468f36242680bb9844d75e5f18436a0af6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x14d4D40c5487a44a0C02C24E7b272cEC19e7bfd8',
  -                nonce='0x30000000000000000',
  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x3209af030e8e8073c51ab255b19db5ef7b03a1436e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xb34640Ec88E7EF27339E18A18af7f1e0A3514245',
  -                nonce='0x40000000000000000',
  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf5c1b727e85a9f0f1e80a95f22445bb13a2ca8356e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xd74e5429d85f02590b60c884A1e683BE6125e4fB',
  -                nonce='0x50000000000000000',
  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x94b17b309a4c42701bbd5718c18e193711d6da916e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xE1BaF82E5e2Ed8ac0660726723e915785e047445',
  -                nonce='0x60000000000000000',
  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x4a567001454227551a09f75f0bc401fd58425d7c6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xE4691aF4B8A449D55CB54A7f4D6Ee13Cc8479c72',
  -                nonce='0x70000000000000000',
  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xb87299e5d0b787aca9d0d733027644c82f5a5bb56e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x14ed851C4c9d8e7f4B74B86b68F72103f855FdE8',
  -                nonce='0x80000000000000000',
  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x239949f5b1af72783957e37797a17541db1f30b66e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xBbE8c89589ef06F6E746004c6969dc5170c91c91',
  -                nonce='0x90000000000000000',
  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf32e4480abe68f50a08547e5295fc3eeea544fa66e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xBf6F4C384324b4Dd64362DC1C2114475B4782b78',
  -                nonce='0xa0000000000000000',
  -                initCode='0xe8B8502EbbA0F8A2667d9E36cc9BE201Fb823A530d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x3ba165f66bc2327fbefa0aa0bf01bd42bfb8578f6e6f7468696e67',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_max_allowed_ops_unstaked_sender - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains one more item: UserOperation(sender='0xb8CC681AA513f1bDFDB0D6a984893F1bFd030De6', nonce='0x0', initCode='0x', callData='0xa9e966b7000...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0xb8CC681AA513f1bDFDB0D6a984893F1bFd030De6',
  -                nonce='0x0',
  -                initCode='0x',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_max_allowed_ops_staked_sender - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains one more item: UserOperation(sender='0xa4aF82e7d511bdf1460A355c0F748Cc746d688AC', nonce='0x10000000000000000', initCode='0x', callDat...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0xa4aF82e7d511bdf1460A355c0F748Cc746d688AC',
  -                nonce='0x10000000000000000',
  -                initCode='0x',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_ban_user_op_access_other_ops_sender_in_bundle - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains one more item: UserOperation(sender='0x95649063Dcc9140ce146f9fbde8484581e4F8552', nonce='0x0', initCode='0x', callData='0x', callGasL...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0x95649063Dcc9140ce146f9fbde8484581e4F8552',
  -                nonce='0x0',
  -                initCode='0x',
  -                callData='0x',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_ban_user_sender_double_role_in_bundle - Exception: expected result object, got:
Error(code=-32500, message='0x', data=None, id=119)
FAILED tests/single/bundle/test_codehash.py::test_codehash_changed - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][paymaster][no_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=129)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-031]unstaked][paymaster][storage][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=131).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]unstaked][paymaster][reference_storage][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=133).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]unstaked][paymaster][reference_storage_struct][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=135).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-010]unstaked][paymaster][account_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=137)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]unstaked][paymaster][account_reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=139)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]unstaked][paymaster][account_reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=141)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop0] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=143).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[EREP-050]unstaked][paymaster][context][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=145).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]unstaked][paymaster][external_storage_read][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=147).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]unstaked][paymaster][out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=149).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]unstaked][paymaster][sstore_out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=151).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]staked][paymaster][no_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=153)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-031]staked][paymaster][storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=155)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]staked][paymaster][reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=157)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]staked][paymaster][reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=159)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][paymaster][reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=161)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-010]staked][paymaster][account_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=163)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]staked][paymaster][account_reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=165)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]staked][paymaster][account_reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=167)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-022]staked][paymaster][account_reference_storage_init_code][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=169)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[EREP-050]staked][paymaster][context][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=171)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][paymaster][external_storage_write][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=173).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][paymaster][external_storage_read][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=175)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]staked][paymaster][out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=177).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]staked][paymaster][sstore_out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=179).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][factory][no_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=181)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][factory][storage][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=183).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][factory][reference_storage][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=185).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]unstaked][factory][reference_storage_struct][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=187).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-010]unstaked][factory][account_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=189)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]unstaked][factory][account_reference_storage][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=191).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]unstaked][factory][account_reference_storage_struct][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=193).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][factory][external_storage_read][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=195).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-042]unstaked][factory][EXTCODEx_CALLx_undeployed_sender][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=197)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][EXTCODESIZE_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=199).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][EXTCODEHASH_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=201).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][EXTCODECOPY_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=203).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][CALL_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=205).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][CALLCODE_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=207).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][DELEGATECALL_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=209).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][STATICCALL_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=211).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]unstaked][factory][out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=213).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]unstaked][factory][sstore_out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=215).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]staked][factory][no_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=217)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-031]staked][factory][storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=219)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]staked][factory][reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=221)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]staked][factory][reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=223)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-010]staked][factory][account_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=225)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]staked][factory][account_reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=227)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]staked][factory][account_reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=229)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][factory][external_storage_write][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=231).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][factory][external_storage_read][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=233)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]staked][factory][out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=235).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]staked][factory][sstore_out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=237).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][account][no_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=239)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-010]unstaked][account][account_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=241)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]unstaked][account][account_reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=243)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=245).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=247)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop1] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=249).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]unstaked][account][account_reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=251)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][account][external_storage_read][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=253).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]unstaked][account][out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=255).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]unstaked][account][sstore_out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=257).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]staked][account][no_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=259)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-010]staked][account][account_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=261)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]staked][account][account_reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=263)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]staked][account][account_reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=265)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]staked][account][out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=267).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]staked][account][sstore_out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=269).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][account][external_storage_write][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=271).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][account][external_storage_read][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=273)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-011]unstaked][account][entryPoint_call_balanceOf][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=275).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-061]unstaked][account][eth_value_transfer_forbidden][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=277).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-053]unstaked][account][eth_value_transfer_entryPoint][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=279)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-052]unstaked][account][eth_value_transfer_entryPoint_depositTo][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=281)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][EXTCODESIZE_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=283).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][EXTCODEHASH_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=285).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][EXTCODECOPY_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=287).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-054]unstaked][account][EXTCODESIZE_entrypoint][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=289).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-054]unstaked][account][EXTCODEHASH_entrypoint][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=291).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-054]unstaked][account][EXTCODECOPY_entrypoint][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=293).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][CALL_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=295).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][CALLCODE_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=297).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][DELEGATECALL_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=299).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][STATICCALL_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=301).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-062]unstaked][account][CALL_undeployed_contract_allowed_precompile][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=303)
FAILED tests/single/bundle/test_storage_rules.py::test_enough_verification_gas - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[GAS] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=307).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[NUMBER] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=308).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[TIMESTAMP] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=309).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[COINBASE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=310).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[DIFFICULTY] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=311).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[BASEFEE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=312).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[GASLIMIT] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=313).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[GASPRICE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=314).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[SELFBALANCE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=315).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[BALANCE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=316).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[ORIGIN] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=317).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[BLOCKHASH] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=318).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[CREATE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=319).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[CREATE2] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=320).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[SELFDESTRUCT] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=321).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_allowed_opcode_sequence[GAS CALL] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=322)
FAILED tests/single/opbanning/test_op_banning.py::test_account_allowed_opcode_sequence[GAS DELEGATECALL] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=323)
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[GAS] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=324).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[NUMBER] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=325).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[TIMESTAMP] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=326).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[COINBASE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=327).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[DIFFICULTY] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=328).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[BASEFEE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=329).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[GASLIMIT] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=330).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[GASPRICE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=331).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[SELFBALANCE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=332).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[BALANCE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=333).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[ORIGIN] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=334).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[BLOCKHASH] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=335).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[CREATE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=336).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[CREATE2] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=337).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[SELFDESTRUCT] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=338).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[GAS] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=339).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[NUMBER] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=340).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[TIMESTAMP] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=341).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[COINBASE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=342).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[DIFFICULTY] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=343).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[BASEFEE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=344).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[GASLIMIT] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=345).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[GASPRICE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=346).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[SELFBALANCE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=347).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[BALANCE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=348).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[ORIGIN] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=349).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[BLOCKHASH] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=350).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[CREATE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=351).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[CREATE2] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=352).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[SELFDESTRUCT] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=353).code
FAILED tests/single/rpc/test_eth_estimateUserOperationGas.py::test_eth_estimateUserOperationGas[] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/rpc/test_eth_estimateUserOperationGas.py::test_eth_estimateUserOperationGas_execution_revert - AssertionError: assert -32500 == <RPCErrorCode.EXECUTION_REVERTED: -32521>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=356).code
FAILED tests/single/rpc/test_eth_estimateUserOperationGas.py::test_eth_estimateUserOperationGas_simulation_revert - AssertionError: assert 'dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'
 +  where 'dead signature' = <built-in method lower of str object at 0x7f2d2a9d4270>()
 +    where <built-in method lower of str object at 0x7f2d2a9d4270> = 'dead signature'.lower
 +  and   'failedopwithrevert(0,aa23 reverted,0x)' = <built-in method lower of str object at 0x7f2d297ffd50>()
 +    where <built-in method lower of str object at 0x7f2d297ffd50> = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower
 +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=357).message
FAILED tests/single/rpc/test_eth_getUserOperationByHash.py::test_eth_getUserOperationByHash[] - TypeError: 'NoneType' object is not subscriptable
FAILED tests/single/rpc/test_eth_getUserOperationByHash.py::test_eth_getUserOperationByHash_error - AssertionError: assert -32602 == -32601
 +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=361).code
FAILED tests/single/rpc/test_eth_getUserOperationReceipt.py::test_eth_getUserOperationReceipt[] - TypeError: 'NoneType' object is not subscriptable
FAILED tests/single/rpc/test_eth_getUserOperationReceipt.py::test_eth_getUserOperationReceipt_error - AssertionError: assert -32602 == -32601
 +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=365).code
FAILED tests/single/rpc/test_eth_sendUserOperation.py::test_eth_sendUserOperation[] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/rpc/test_eth_sendUserOperation.py::test_eth_sendUserOperation_revert - AssertionError: assert 'testwallet: dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'
 +  where 'testwallet: dead signature' = <built-in method lower of str object at 0x7f2d2a5657f0>()
 +    where <built-in method lower of str object at 0x7f2d2a5657f0> = 'testWallet: dead signature'.lower
 +  and   'failedopwithrevert(0,aa23 reverted,0x)' = <built-in method lower of str object at 0x7f2d297ffbd0>()
 +    where <built-in method lower of str object at 0x7f2d297ffbd0> = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower
 +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=368).message
FAILED tests/single/rpc/test_eth_sendUserOperation.py::test_eth_sendUserOperation_invalid_signature - AssertionError: assert -32500 == <RPCErrorCode.INVALID_SIGNATURE: -32507>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=370).code
============= 167 failed, 3 passed, 1 skipped, 1 warning in 38.68s =============
Wed May  8 14:53:53 UTC 2024: done bundler /home/runner/work/bundler-test-executor/bundler-test-executor/bundlers/okbund/okbund.yml, name=okbund
              Container                           Repository                Tag          Image Id       Size  
--------------------------------------------------------------------------------------------------------------
bundler-test-executor_bundler-waiter_1   curlimages/curl                latest         79009b90fb07   17.29 MB
bundler-test-executor_bundler_1          txgyy/ok_bund                  latest         11a080f35782   565.3 MB
bundler-test-executor_deployer_1         accountabstraction/deployer    0.6            7e3c6d5f0f4d   143.1 MB
bundler-test-executor_funder_1           bundler-test-executor_funder   latest         3a1150ada355   164.3 MB
geth-1.13                                ethereum/client-go             release-1.13   ef31eb599a3f   66.72 MB
