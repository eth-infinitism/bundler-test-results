<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="okbund" errors="0" failures="167" skipped="1" tests="171" time="37.006" timestamp="2024-05-08T12:47:49.336365" hostname="fv-az1116-338"><testcase classname="" name="tests.single.reputation.test_reputation" time="0.000"><skipped message="collection skipped">('/home/runner/work/bundler-test-executor/bundler-test-executor/bundler-spec-tests/tests/single/reputation/test_reputation.py', 18, 'Skipped: reputation tests currently skipped')</skipped></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[only_priority_fee_bump]" time="0.247"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[only_max_fee_bump]" time="0.042"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[with_same_fee]" time="0.041"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[with_less_fee]" time="0.040"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[fee_bump_below_threshold]" time="0.038"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[fee_bump_at_threshold]" time="0.037"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_bundle_replace_op[fee_bump_above_threshold]" time="0.039"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-sender]" time="0.429"><failure message="AssertionError: assert -32500 == -32504&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=19).code">tests/single/bundle/test_bundle.py:233: in test_mempool_reputation_rules_all_entities
    assert_rpc_error(response, case.stake_status, case.errorCode)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == -32504
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=19).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-paymaster]" time="0.385"><failure message="AssertionError: assert -32500 == -32504&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=26).code">tests/single/bundle/test_bundle.py:233: in test_mempool_reputation_rules_all_entities
    assert_rpc_error(response, case.stake_status, case.errorCode)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == -32504
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=26).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-factory]" time="0.384"><failure message="AssertionError: assert -32500 == -32504&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=33).code">tests/single/bundle/test_bundle.py:233: in test_mempool_reputation_rules_all_entities
    assert_rpc_error(response, case.stake_status, case.errorCode)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == -32504
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=33).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-sender]" time="1.173"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains 4 more items, first extra item: UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284', nonce='0x0', initCode='0xD14FbD8a040e74dAa9E38c92Bf...ityFeePerGas='0xb2d05e00', paymasterAndData='0xc0c7c6047ebfff49b4607f7d493d60037c336d4a6e6f7468696e67', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',&#10;  -                nonce='0x0',&#10;  -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xc0c7c6047ebfff49b4607f7d493d60037c336d4a6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xd8781682d1ec9ad131b55cdd261148e2dc5343476e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',&#10;  -                nonce='0x20000000000000000',&#10;  -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x38903b7be4172e26e1fff122a0b8e0d30902fe3e6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',&#10;  -                nonce='0x30000000000000000',&#10;  -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf276c5c895427c498935a0bbcfc94eb48296a7306e6f7468696e67',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284', nonce='0x0', initCode='0xD14FbD8a040e74dAa9E38c92Bf...ityFeePerGas='0xb2d05e00', paymasterAndData='0xc0c7c6047ebfff49b4607f7d493d60037c336d4a6e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',
E     -                nonce='0x0',
E     -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xc0c7c6047ebfff49b4607f7d493d60037c336d4a6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',
E     -                nonce='0x10000000000000000',
E     -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xd8781682d1ec9ad131b55cdd261148e2dc5343476e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',
E     -                nonce='0x20000000000000000',
E     -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x38903b7be4172e26e1fff122a0b8e0d30902fe3e6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',
E     -                nonce='0x30000000000000000',
E     -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf276c5c895427c498935a0bbcfc94eb48296a7306e6f7468696e67',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-paymaster]" time="0.865"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains 4 more items, first extra item: UserOperation(sender='0xCbfeebB23ed42dA96fE04eC6B82E77480e7585c1', nonce='0x0', initCode='0x4a5217bEA15D166251b19834f0...ityFeePerGas='0xb2d05e00', paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0xCbfeebB23ed42dA96fE04eC6B82E77480e7585c1',&#10;  -                nonce='0x0',&#10;  -                initCode='0x4a5217bEA15D166251b19834f00B51a4E70634650d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x868e9d9e907834649C3B23c0B4929538464cB82d',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0xBAFB8322F143B7FB5b3f55d306F2F218664A65aA0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x147A5abFC6ecedB6259Ee2e58FDf8a456d895dA4',&#10;  -                nonce='0x20000000000000000',&#10;  -                initCode='0xF3D59e8A1bD7C0B8D9b0C5BA434aFEF753d56b910d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xa9Ec3BF411592016C5d3aa93a9208B87a247f014',&#10;  -                nonce='0x30000000000000000',&#10;  -                initCode='0x262544cA8d87618ff1F064DB0329C2b8e0A65ADf0d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0xCbfeebB23ed42dA96fE04eC6B82E77480e7585c1', nonce='0x0', initCode='0x4a5217bEA15D166251b19834f0...ityFeePerGas='0xb2d05e00', paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xCbfeebB23ed42dA96fE04eC6B82E77480e7585c1',
E     -                nonce='0x0',
E     -                initCode='0x4a5217bEA15D166251b19834f00B51a4E70634650d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x868e9d9e907834649C3B23c0B4929538464cB82d',
E     -                nonce='0x10000000000000000',
E     -                initCode='0xBAFB8322F143B7FB5b3f55d306F2F218664A65aA0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x147A5abFC6ecedB6259Ee2e58FDf8a456d895dA4',
E     -                nonce='0x20000000000000000',
E     -                initCode='0xF3D59e8A1bD7C0B8D9b0C5BA434aFEF753d56b910d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xa9Ec3BF411592016C5d3aa93a9208B87a247f014',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x262544cA8d87618ff1F064DB0329C2b8e0A65ADf0d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-factory]" time="1.167"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains 4 more items, first extra item: UserOperation(sender='0xaa29d8Cc6Ce97045D44d35d59F9D73cAcFe4B3b0', nonce='0x0', initCode='0x0A2F4A1B01A3938D353758A54E...ityFeePerGas='0xb2d05e00', paymasterAndData='0xbce71b72dea6fe8c3467af921927c6c9d922435e6e6f7468696e67', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0xaa29d8Cc6Ce97045D44d35d59F9D73cAcFe4B3b0',&#10;  -                nonce='0x0',&#10;  -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xbce71b72dea6fe8c3467af921927c6c9d922435e6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x1FA774fD9DbcAD806914D709efff3229d088825c',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x2d2b0e153d38a647aa340ffce497d23302ea70e96e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xA8C55A0d07A0C1A8bcb2DAd66B1e9dBe176cAdFa',&#10;  -                nonce='0x20000000000000000',&#10;  -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x0c2bc546170af052e09af44150f44c807a55f9676e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x308F0eDd9Ec006097E6DfEc1293F15288A54222F',&#10;  -                nonce='0x30000000000000000',&#10;  -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x788a8067dc02d624bbca0a906b82e6cb554897776e6f7468696e67',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0xaa29d8Cc6Ce97045D44d35d59F9D73cAcFe4B3b0', nonce='0x0', initCode='0x0A2F4A1B01A3938D353758A54E...ityFeePerGas='0xb2d05e00', paymasterAndData='0xbce71b72dea6fe8c3467af921927c6c9d922435e6e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xaa29d8Cc6Ce97045D44d35d59F9D73cAcFe4B3b0',
E     -                nonce='0x0',
E     -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xbce71b72dea6fe8c3467af921927c6c9d922435e6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x1FA774fD9DbcAD806914D709efff3229d088825c',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x2d2b0e153d38a647aa340ffce497d23302ea70e96e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xA8C55A0d07A0C1A8bcb2DAd66B1e9dBe176cAdFa',
E     -                nonce='0x20000000000000000',
E     -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x0c2bc546170af052e09af44150f44c807a55f9676e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x308F0eDd9Ec006097E6DfEc1293F15288A54222F',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x788a8067dc02d624bbca0a906b82e6cb554897776e6f7468696e67',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-sender]" time="1.334"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains 4 more items, first extra item: UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A', nonce='0x0', initCode='0xe34A029A9FD373a789dFC2F066...ityFeePerGas='0xb2d05e00', paymasterAndData='0xd5a67289a06cb80c6de21e631bc2e8e2ddeda5986e6f7468696e67', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',&#10;  -                nonce='0x0',&#10;  -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xd5a67289a06cb80c6de21e631bc2e8e2ddeda5986e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x7de8cb007b4e4f25beee380c0d0566a23c5285196e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',&#10;  -                nonce='0x20000000000000000',&#10;  -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x15b49038f94a377b0ecde0cb5047e067accb58bf6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',&#10;  -                nonce='0x30000000000000000',&#10;  -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xe52f1c1ea2501f08796122d3ba21e1806cd7d69d6e6f7468696e67',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A', nonce='0x0', initCode='0xe34A029A9FD373a789dFC2F066...ityFeePerGas='0xb2d05e00', paymasterAndData='0xd5a67289a06cb80c6de21e631bc2e8e2ddeda5986e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',
E     -                nonce='0x0',
E     -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xd5a67289a06cb80c6de21e631bc2e8e2ddeda5986e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',
E     -                nonce='0x10000000000000000',
E     -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x7de8cb007b4e4f25beee380c0d0566a23c5285196e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',
E     -                nonce='0x20000000000000000',
E     -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x15b49038f94a377b0ecde0cb5047e067accb58bf6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',
E     -                nonce='0x30000000000000000',
E     -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xe52f1c1ea2501f08796122d3ba21e1806cd7d69d6e6f7468696e67',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-paymaster]" time="2.478"><failure message="AssertionError: assert [] == [UserOperatio...re='0x'), ...]&#10;  Right contains 11 more items, first extra item: UserOperation(sender='0x9D1Bbe7d29049e28852CafEFc080d953FBA67D79', nonce='0x0', initCode='0x8918b10dAF5fBdE75D7493F8f0...ityFeePerGas='0xb2d05e00', paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0x9D1Bbe7d29049e28852CafEFc080d953FBA67D79',&#10;  -                nonce='0x0',&#10;  -                initCode='0x8918b10dAF5fBdE75D7493F8f01c13D4670D5Cee0d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x257b703f3FdF3Ef612f5ceb23ab2a4122fAf5F99',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0x3f900Cd347B97a26af63dEBD6b90031b449953Db0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xFdd03570198D096e3879d098B6cf71D5401142d3',&#10;  -                nonce='0x20000000000000000',&#10;  -                initCode='0xCbAd1c699C3A1538603C332e22AeBd24D91b64cD0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xD29eB06403C273cc57a372f9F6f5791D8E5fDCc8',&#10;  -                nonce='0x30000000000000000',&#10;  -                initCode='0x2EeaD5bC99393049230151278c44fd38E1C9C8760d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xF12d7246B1b147457170C6fdF4fD4b83caF262a5',&#10;  -                nonce='0x40000000000000000',&#10;  -                initCode='0x0Cc52eE387541470E6786447E8593053A7d6CA2a0d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x2845682200FB2b62B376A38c3A0A3f2692a345e9',&#10;  -                nonce='0x50000000000000000',&#10;  -                initCode='0x54c17e4f4fCB9212673c105B87D536591dBDdB160d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xC6B42683BC5d6bD01BfEAFBeF7841a2500Dadb15',&#10;  -                nonce='0x60000000000000000',&#10;  -                initCode='0x1b03BCa79555046788238c69B6A0E024ECd0FAc50d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xf293c34894A64a94Ddec632f031588A182A536d8',&#10;  -                nonce='0x70000000000000000',&#10;  -                initCode='0xf9A21ef8211486D712d5A7d8B041A532117F27280d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x0406E61e70963e6B51C88d6c47DedE8bD9D72f0B',&#10;  -                nonce='0x80000000000000000',&#10;  -                initCode='0x9C30c6fAa0E930Bbe9C5970EdC142463d071E7410d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x842B2b21AE653461397901791f43491F5c4DB8EA',&#10;  -                nonce='0x90000000000000000',&#10;  -                initCode='0xC5d30fbCC27cf242e9Aae2c2e6eccf5b0f1d719D0d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xCB41BB8C023dc1dF00efaDA1fA3207DfDc96E2E4',&#10;  -                nonce='0xa0000000000000000',&#10;  -                initCode='0x0E999f4025A4BD6f1eccFF2f8fE0Ab50E5B0B5970d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...re='0x'), ...]
E     Right contains 11 more items, first extra item: UserOperation(sender='0x9D1Bbe7d29049e28852CafEFc080d953FBA67D79', nonce='0x0', initCode='0x8918b10dAF5fBdE75D7493F8f0...ityFeePerGas='0xb2d05e00', paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x9D1Bbe7d29049e28852CafEFc080d953FBA67D79',
E     -                nonce='0x0',
E     -                initCode='0x8918b10dAF5fBdE75D7493F8f01c13D4670D5Cee0d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x257b703f3FdF3Ef612f5ceb23ab2a4122fAf5F99',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x3f900Cd347B97a26af63dEBD6b90031b449953Db0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xFdd03570198D096e3879d098B6cf71D5401142d3',
E     -                nonce='0x20000000000000000',
E     -                initCode='0xCbAd1c699C3A1538603C332e22AeBd24D91b64cD0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xD29eB06403C273cc57a372f9F6f5791D8E5fDCc8',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x2EeaD5bC99393049230151278c44fd38E1C9C8760d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xF12d7246B1b147457170C6fdF4fD4b83caF262a5',
E     -                nonce='0x40000000000000000',
E     -                initCode='0x0Cc52eE387541470E6786447E8593053A7d6CA2a0d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x2845682200FB2b62B376A38c3A0A3f2692a345e9',
E     -                nonce='0x50000000000000000',
E     -                initCode='0x54c17e4f4fCB9212673c105B87D536591dBDdB160d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xC6B42683BC5d6bD01BfEAFBeF7841a2500Dadb15',
E     -                nonce='0x60000000000000000',
E     -                initCode='0x1b03BCa79555046788238c69B6A0E024ECd0FAc50d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xf293c34894A64a94Ddec632f031588A182A536d8',
E     -                nonce='0x70000000000000000',
E     -                initCode='0xf9A21ef8211486D712d5A7d8B041A532117F27280d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x0406E61e70963e6B51C88d6c47DedE8bD9D72f0B',
E     -                nonce='0x80000000000000000',
E     -                initCode='0x9C30c6fAa0E930Bbe9C5970EdC142463d071E7410d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x842B2b21AE653461397901791f43491F5c4DB8EA',
E     -                nonce='0x90000000000000000',
E     -                initCode='0xC5d30fbCC27cf242e9Aae2c2e6eccf5b0f1d719D0d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xCB41BB8C023dc1dF00efaDA1fA3207DfDc96E2E4',
E     -                nonce='0xa0000000000000000',
E     -                initCode='0x0E999f4025A4BD6f1eccFF2f8fE0Ab50E5B0B5970d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-factory]" time="2.283"><failure message="AssertionError: assert [] == [UserOperatio...re='0x'), ...]&#10;  Right contains 11 more items, first extra item: UserOperation(sender='0xe442F254C216051d592ecd0B89eBe1229965b9c1', nonce='0x0', initCode='0x58A9673006FBa67d7B55812600...ityFeePerGas='0xb2d05e00', paymasterAndData='0xd2f7b109b426341eca1b4569f27e7a66388a6fe56e6f7468696e67', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0xe442F254C216051d592ecd0B89eBe1229965b9c1',&#10;  -                nonce='0x0',&#10;  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xd2f7b109b426341eca1b4569f27e7a66388a6fe56e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xfd5fDFD81077399adb5D0a5E215095A6fFFcF6b3',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xa7b891864a120fe562e192b242cc4455f4f84f5d6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x02d3053a4f1f2d686755Fb20E1fbC66D782FA3ed',&#10;  -                nonce='0x20000000000000000',&#10;  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x925976e4f15e46fa39b38c0a3e2e9d23d542b7c96e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x60AD072b8a7e81DbdB6cE822F4345ca24bEb30DA',&#10;  -                nonce='0x30000000000000000',&#10;  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x009c812a8cede6be0eb4105c292ddee5d112dbce6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xE86018cA6cd2599712FBBB10458dEbf68cf42eC4',&#10;  -                nonce='0x40000000000000000',&#10;  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xf811c26421e844e50f67c2c18dc32a4867fbd65d6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xCc89618A2e28E862C1E8B2989e9117714C008dE6',&#10;  -                nonce='0x50000000000000000',&#10;  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xe30911b834e07b58919fa5ce673993ddef14b4186e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x16Fa376C5277Ea396E3B2eB1132e804B8a1C3a54',&#10;  -                nonce='0x60000000000000000',&#10;  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x47532854295ec7ee150f77102f72b11db04e1a9e6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x77DFcB1d748c600887f36b2bDF3B9d8f23D035C9',&#10;  -                nonce='0x70000000000000000',&#10;  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x83a2128e2634d14998f62d7f492c2afb956ba5de6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x4Db08a04e8c0A15bbE2D605eC15C5EfF3864E125',&#10;  -                nonce='0x80000000000000000',&#10;  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x620f434f5cd3fceb5505834858b0fe7b0a2db8db6e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0xC698ebAB62CAb6FEA722574c2c80fB97963983Cd',&#10;  -                nonce='0x90000000000000000',&#10;  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0xae9631d0200455d6c0e91bf953fe71f27c8966c66e6f7468696e67',&#10;  -                signature='0x'),&#10;  -  UserOperation(sender='0x2d1e2a6F82D7f6f9d5d309CD11F8dE980C7c3322',&#10;  -                nonce='0xa0000000000000000',&#10;  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x0f45d5a3d72945f3df66a0e59850a0728b6c52016e6f7468696e67',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...re='0x'), ...]
E     Right contains 11 more items, first extra item: UserOperation(sender='0xe442F254C216051d592ecd0B89eBe1229965b9c1', nonce='0x0', initCode='0x58A9673006FBa67d7B55812600...ityFeePerGas='0xb2d05e00', paymasterAndData='0xd2f7b109b426341eca1b4569f27e7a66388a6fe56e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xe442F254C216051d592ecd0B89eBe1229965b9c1',
E     -                nonce='0x0',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xd2f7b109b426341eca1b4569f27e7a66388a6fe56e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xfd5fDFD81077399adb5D0a5E215095A6fFFcF6b3',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xa7b891864a120fe562e192b242cc4455f4f84f5d6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x02d3053a4f1f2d686755Fb20E1fbC66D782FA3ed',
E     -                nonce='0x20000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x925976e4f15e46fa39b38c0a3e2e9d23d542b7c96e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x60AD072b8a7e81DbdB6cE822F4345ca24bEb30DA',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x009c812a8cede6be0eb4105c292ddee5d112dbce6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xE86018cA6cd2599712FBBB10458dEbf68cf42eC4',
E     -                nonce='0x40000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811c26421e844e50f67c2c18dc32a4867fbd65d6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xCc89618A2e28E862C1E8B2989e9117714C008dE6',
E     -                nonce='0x50000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xe30911b834e07b58919fa5ce673993ddef14b4186e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x16Fa376C5277Ea396E3B2eB1132e804B8a1C3a54',
E     -                nonce='0x60000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x47532854295ec7ee150f77102f72b11db04e1a9e6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x77DFcB1d748c600887f36b2bDF3B9d8f23D035C9',
E     -                nonce='0x70000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x83a2128e2634d14998f62d7f492c2afb956ba5de6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x4Db08a04e8c0A15bbE2D605eC15C5EfF3864E125',
E     -                nonce='0x80000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x620f434f5cd3fceb5505834858b0fe7b0a2db8db6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xC698ebAB62CAb6FEA722574c2c80fB97963983Cd',
E     -                nonce='0x90000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xae9631d0200455d6c0e91bf953fe71f27c8966c66e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x2d1e2a6F82D7f6f9d5d309CD11F8dE980C7c3322',
E     -                nonce='0xa0000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x0f45d5a3d72945f3df66a0e59850a0728b6c52016e6f7468696e67',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_max_allowed_ops_unstaked_sender" time="0.058"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains one more item: UserOperation(sender='0x9148D8a387b27be3894F1444153c238633c0e068', nonce='0x0', initCode='0x', callData='0xa9e966b7000...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0x9148D8a387b27be3894F1444153c238633c0e068',&#10;  -                nonce='0x0',&#10;  -                initCode='0x',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:248: in test_max_allowed_ops_unstaked_sender
    assert dump_mempool() == wallet_ops[: i + 1]
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains one more item: UserOperation(sender='0x9148D8a387b27be3894F1444153c238633c0e068', nonce='0x0', initCode='0x', callData='0xa9e966b7000...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x9148D8a387b27be3894F1444153c238633c0e068',
E     -                nonce='0x0',
E     -                initCode='0x',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_max_allowed_ops_staked_sender" time="0.076"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains one more item: UserOperation(sender='0x72bB5c413FBa35522dD8B45A32C437dBf2eb6670', nonce='0x10000000000000000', initCode='0x', callDat...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0x72bB5c413FBa35522dD8B45A32C437dBf2eb6670',&#10;  -                nonce='0x10000000000000000',&#10;  -                initCode='0x',&#10;  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:275: in test_max_allowed_ops_staked_sender
    assert dump_mempool() == wallet_ops[: i + 1]
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains one more item: UserOperation(sender='0x72bB5c413FBa35522dD8B45A32C437dBf2eb6670', nonce='0x10000000000000000', initCode='0x', callDat...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x72bB5c413FBa35522dD8B45A32C437dBf2eb6670',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_ban_user_op_access_other_ops_sender_in_bundle" time="0.204"><failure message="AssertionError: assert [] == [UserOperatio...gnature='0x')]&#10;  Right contains one more item: UserOperation(sender='0xad9f4A570C949C67Cadde666Fc2b2cE234812dE3', nonce='0x0', initCode='0x', callData='0x', callGasL...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')&#10;  Full diff:&#10;    [&#10;  +  ,&#10;  -  UserOperation(sender='0xad9f4A570C949C67Cadde666Fc2b2cE234812dE3',&#10;  -                nonce='0x0',&#10;  -                initCode='0x',&#10;  -                callData='0x',&#10;  -                callGasLimit='0x493e0',&#10;  -                verificationGasLimit='0xf4240',&#10;  -                preVerificationGas='0x493e0',&#10;  -                maxFeePerGas='0xee6b2800',&#10;  -                maxPriorityFeePerGas='0xb2d05e00',&#10;  -                paymasterAndData='0x',&#10;  -                signature='0x'),&#10;    ]">tests/single/bundle/test_bundle.py:319: in test_ban_user_op_access_other_ops_sender_in_bundle
    assert dump_mempool() == [user_op2]
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains one more item: UserOperation(sender='0xad9f4A570C949C67Cadde666Fc2b2cE234812dE3', nonce='0x0', initCode='0x', callData='0x', callGasL...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xad9f4A570C949C67Cadde666Fc2b2cE234812dE3',
E     -                nonce='0x0',
E     -                initCode='0x',
E     -                callData='0x',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x',
E     -                signature='0x'),
E       ]</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_ban_user_sender_double_role_in_bundle" time="0.158"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='0x', data=None, id=119)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_bundle.py:358: in test_ban_user_sender_double_role_in_bundle
    assert_ok(response1)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='0x', data=None, id=119)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_bundle" name="test_stake_check_in_bundler" time="0.337" /><testcase classname="tests.single.bundle.test_codehash" name="test_codehash_changed" time="0.086"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_codehash.py:44: in test_codehash_changed
    assert response.result, "userop dropped by bundler"
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][paymaster][no_storage][ok]" time="0.175"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=129)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=129)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-031]unstaked][paymaster][storage][drop]" time="0.174"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=131).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=131).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]unstaked][paymaster][reference_storage][drop]" time="0.173"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=133).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=133).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]unstaked][paymaster][reference_storage_struct][drop]" time="0.172"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=135).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=135).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-010]unstaked][paymaster][account_storage][ok]" time="0.170"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=137)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=137)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]unstaked][paymaster][account_reference_storage][ok]" time="0.069"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=139)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=139)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]unstaked][paymaster][account_reference_storage_struct][ok]" time="0.169"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=141)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=141)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop0]" time="0.344"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=143).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=143).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[EREP-050]unstaked][paymaster][context][drop]" time="0.182"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=145).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=145).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]unstaked][paymaster][external_storage_read][drop]" time="0.183"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=147).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=147).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]unstaked][paymaster][out_of_gas][drop]" time="0.173"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=149).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=149).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]unstaked][paymaster][sstore_out_of_gas][drop]" time="0.173"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=151).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=151).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]staked][paymaster][no_storage][ok]" time="0.194"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=153)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=153)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-031]staked][paymaster][storage][ok]" time="0.194"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=155)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=155)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]staked][paymaster][reference_storage][ok]" time="0.200"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=157)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=157)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]staked][paymaster][reference_storage_struct][ok]" time="0.195"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=159)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=159)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][paymaster][reference_storage_struct][ok]" time="0.195"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=161)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=161)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-010]staked][paymaster][account_storage][ok]" time="0.194"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=163)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=163)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]staked][paymaster][account_reference_storage][ok]" time="0.196"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=165)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=165)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]staked][paymaster][account_reference_storage_struct][ok]" time="0.195"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=167)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=167)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-022]staked][paymaster][account_reference_storage_init_code][ok]" time="0.314"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=169)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=169)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[EREP-050]staked][paymaster][context][ok]" time="0.196"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=171)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=171)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][paymaster][external_storage_write][drop]" time="0.094"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=173).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=173).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][paymaster][external_storage_read][ok]" time="0.194"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=175)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=175)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]staked][paymaster][out_of_gas][drop]" time="0.192"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=177).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=177).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]staked][paymaster][sstore_out_of_gas][drop]" time="0.192"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=179).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=179).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][factory][no_storage][ok]" time="0.199"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=181)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=181)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][factory][storage][drop]" time="0.203"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=183).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=183).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][factory][reference_storage][drop]" time="0.203"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=185).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=185).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]unstaked][factory][reference_storage_struct][drop]" time="0.200"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=187).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=187).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-010]unstaked][factory][account_storage][ok]" time="0.102"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=189)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=189)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]unstaked][factory][account_reference_storage][drop]" time="0.240"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=191).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=191).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]unstaked][factory][account_reference_storage_struct][drop]" time="0.100"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=193).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=193).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][factory][external_storage_read][drop]" time="0.204"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=195).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=195).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-042]unstaked][factory][EXTCODEx_CALLx_undeployed_sender][ok]" time="0.203"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=197)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=197)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][EXTCODESIZE_undeployed_contract][drop]" time="0.209"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=199).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=199).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][EXTCODEHASH_undeployed_contract][drop]" time="0.106"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=201).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=201).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][EXTCODECOPY_undeployed_contract][drop]" time="0.106"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=203).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=203).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][CALL_undeployed_contract][drop]" time="0.209"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=205).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=205).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][CALLCODE_undeployed_contract][drop]" time="0.215"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=207).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=207).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][DELEGATECALL_undeployed_contract][drop]" time="0.102"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=209).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=209).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][factory][STATICCALL_undeployed_contract][drop]" time="0.204"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=211).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=211).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]unstaked][factory][out_of_gas][drop]" time="0.203"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=213).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=213).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]unstaked][factory][sstore_out_of_gas][drop]" time="0.202"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=215).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=215).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]staked][factory][no_storage][ok]" time="0.127"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=217)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=217)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-031]staked][factory][storage][ok]" time="0.224"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=219)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=219)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]staked][factory][reference_storage][ok]" time="0.327"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=221)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=221)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-032]staked][factory][reference_storage_struct][ok]" time="0.221"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=223)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=223)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-010]staked][factory][account_storage][ok]" time="0.222"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=225)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=225)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]staked][factory][account_reference_storage][ok]" time="0.223"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=227)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=227)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]staked][factory][account_reference_storage_struct][ok]" time="0.224"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=229)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=229)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][factory][external_storage_write][drop]" time="0.227"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=231).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=231).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][factory][external_storage_read][ok]" time="0.121"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=233)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=233)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]staked][factory][out_of_gas][drop]" time="0.328"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=235).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=235).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]staked][factory][sstore_out_of_gas][drop]" time="0.228"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=237).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=237).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][account][no_storage][ok]" time="0.113"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=239)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=239)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-010]unstaked][account][account_storage][ok]" time="0.168"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=241)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=241)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]unstaked][account][account_reference_storage][ok]" time="0.171"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=243)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=243)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][drop]" time="0.338"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=245).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=245).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][ok]" time="0.408"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=247)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=247)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop1]" time="0.368"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=249).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=249).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]unstaked][account][account_reference_storage_struct][ok]" time="0.066"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=251)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=251)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]unstaked][account][external_storage_read][drop]" time="0.169"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=253).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=253).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]unstaked][account][out_of_gas][drop]" time="0.172"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=255).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=255).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]unstaked][account][sstore_out_of_gas][drop]" time="0.066"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=257).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=257).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-000]staked][account][no_storage][ok]" time="0.191"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=259)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=259)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-010]staked][account][account_storage][ok]" time="0.194"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=261)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=261)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]staked][account][account_reference_storage][ok]" time="0.192"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=263)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=263)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-021]staked][account][account_reference_storage_struct][ok]" time="0.190"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=265)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=265)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]staked][account][out_of_gas][drop]" time="0.190"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=267).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=267).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-020]staked][account][sstore_out_of_gas][drop]" time="0.193"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=269).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=269).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][account][external_storage_write][drop]" time="0.190"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=271).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=271).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[STO-033]staked][account][external_storage_read][ok]" time="0.190"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=273)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=273)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-011]unstaked][account][entryPoint_call_balanceOf][drop]" time="0.204"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=275).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=275).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-061]unstaked][account][eth_value_transfer_forbidden][drop]" time="0.166"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=277).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=277).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-053]unstaked][account][eth_value_transfer_entryPoint][ok]" time="0.168"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=279)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=279)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-052]unstaked][account][eth_value_transfer_entryPoint_depositTo][ok]" time="0.166"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=281)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=281)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][EXTCODESIZE_undeployed_contract][drop]" time="0.166"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=283).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=283).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][EXTCODEHASH_undeployed_contract][drop]" time="0.166"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=285).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=285).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][EXTCODECOPY_undeployed_contract][drop]" time="0.167"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=287).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=287).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-054]unstaked][account][EXTCODESIZE_entrypoint][drop]" time="0.072"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=289).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=289).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-054]unstaked][account][EXTCODEHASH_entrypoint][drop]" time="0.064"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=291).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=291).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-054]unstaked][account][EXTCODECOPY_entrypoint][drop]" time="0.065"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=293).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=293).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][CALL_undeployed_contract][drop]" time="0.167"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=295).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=295).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][CALLCODE_undeployed_contract][drop]" time="0.172"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=297).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=297).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][DELEGATECALL_undeployed_contract][drop]" time="0.169"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=299).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=299).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-041]unstaked][account][STATICCALL_undeployed_contract][drop]" time="0.169"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=301).code">tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=301).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_rule[[OP-062]unstaked][account][CALL_undeployed_contract_allowed_precompile][ok]" time="0.067"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=303)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=303)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.bundle.test_storage_rules" name="test_enough_verification_gas" time="0.037"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/bundle/test_storage_rules.py:798: in test_enough_verification_gas
    pre_verification_gas = response.result["preVerificationGas"]
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[GAS]" time="0.049"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=307).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=307).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[NUMBER]" time="0.152"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=308).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=308).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[TIMESTAMP]" time="0.152"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=309).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=309).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[COINBASE]" time="0.047"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=310).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=310).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[DIFFICULTY]" time="0.046"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=311).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=311).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[BASEFEE]" time="0.151"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=312).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=312).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[GASLIMIT]" time="0.052"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=313).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=313).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[GASPRICE]" time="0.094"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=314).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=314).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[SELFBALANCE]" time="0.150"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=315).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=315).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[BALANCE]" time="0.050"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=316).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=316).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[ORIGIN]" time="0.049"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=317).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=317).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[BLOCKHASH]" time="0.151"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=318).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=318).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[CREATE]" time="0.149"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=319).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=319).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[CREATE2]" time="0.150"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=320).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=320).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_banned_opcode[SELFDESTRUCT]" time="0.149"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=321).code">tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=321).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_allowed_opcode_sequence[GAS CALL]" time="0.046"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=322)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/opbanning/test_op_banning.py:58: in test_account_allowed_opcode_sequence
    assert_ok(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=322)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_account_allowed_opcode_sequence[GAS DELEGATECALL]" time="0.048"><failure message="Exception: expected result object, got:&#10;Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=323)">tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/opbanning/test_op_banning.py:58: in test_account_allowed_opcode_sequence
    assert_ok(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=323)</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[GAS]" time="0.168"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=324).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=324).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[NUMBER]" time="0.169"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=325).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=325).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[TIMESTAMP]" time="0.169"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=326).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=326).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[COINBASE]" time="0.170"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=327).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=327).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[DIFFICULTY]" time="0.165"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=328).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=328).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[BASEFEE]" time="0.166"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=329).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=329).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[GASLIMIT]" time="0.171"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=330).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=330).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[GASPRICE]" time="0.170"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=331).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=331).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[SELFBALANCE]" time="0.070"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=332).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=332).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[BALANCE]" time="0.066"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=333).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=333).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[ORIGIN]" time="0.167"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=334).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=334).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[BLOCKHASH]" time="0.167"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=335).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=335).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[CREATE]" time="0.169"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=336).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=336).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[CREATE2]" time="0.169"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=337).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=337).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_paymaster_banned_opcode[SELFDESTRUCT]" time="0.220"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=338).code">tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=338).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[GAS]" time="0.201"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=339).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=339).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[NUMBER]" time="0.201"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=340).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=340).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[TIMESTAMP]" time="0.199"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=341).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=341).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[COINBASE]" time="0.199"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=342).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=342).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[DIFFICULTY]" time="0.103"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=343).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=343).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[BASEFEE]" time="0.206"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=344).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=344).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[GASLIMIT]" time="0.102"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=345).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=345).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[GASPRICE]" time="0.102"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=346).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=346).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[SELFBALANCE]" time="0.201"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=347).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=347).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[BALANCE]" time="0.201"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=348).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=348).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[ORIGIN]" time="0.203"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=349).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=349).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[BLOCKHASH]" time="0.100"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=350).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=350).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[CREATE]" time="0.203"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=351).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=351).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[CREATE2]" time="0.202"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=352).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=352).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.opbanning.test_op_banning" name="test_factory_banned_opcode[SELFDESTRUCT]" time="0.205"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=353).code">tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.BANNED_OPCODE: -32502&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=353).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_chainId" name="test_eth_chainId[]" time="0.010" /><testcase classname="tests.single.rpc.test_eth_estimateUserOperationGas" name="test_eth_estimateUserOperationGas[]" time="0.029"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/rpc/test_eth_estimateUserOperationGas.py:20: in test_eth_estimateUserOperationGas
    validate(instance=response.result, schema=schema)
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_estimateUserOperationGas" name="test_eth_estimateUserOperationGas_execution_revert" time="0.029"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.EXECUTION_REVERTED: -32521&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=356).code">tests/single/rpc/test_eth_estimateUserOperationGas.py:29: in test_eth_estimateUserOperationGas_execution_revert
    assert_rpc_error(response, "test fail", RPCErrorCode.EXECUTION_REVERTED)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.EXECUTION_REVERTED: -32521&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=356).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_estimateUserOperationGas" name="test_eth_estimateUserOperationGas_simulation_revert" time="0.029"><failure message="AssertionError: assert 'dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'&#10; +  where 'dead signature' = &lt;built-in method lower of str object at 0x7f9e6b153330&gt;()&#10; +    where &lt;built-in method lower of str object at 0x7f9e6b153330&gt; = 'dead signature'.lower&#10; +  and   'failedopwithrevert(0,aa23 reverted,0x)' = &lt;built-in method lower of str object at 0x7f9e6a3bb510&gt;()&#10; +    where &lt;built-in method lower of str object at 0x7f9e6a3bb510&gt; = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower&#10; +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=357).message">tests/single/rpc/test_eth_estimateUserOperationGas.py:37: in test_eth_estimateUserOperationGas_simulation_revert
    assert_rpc_error(response, "dead signature", RPCErrorCode.REJECTED_BY_EP_OR_ACCOUNT)
tests/utils.py:106: in assert_rpc_error
    assert message.lower() in response.message.lower()
E   AssertionError: assert 'dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'
E    +  where 'dead signature' = &lt;built-in method lower of str object at 0x7f9e6b153330&gt;()
E    +    where &lt;built-in method lower of str object at 0x7f9e6b153330&gt; = 'dead signature'.lower
E    +  and   'failedopwithrevert(0,aa23 reverted,0x)' = &lt;built-in method lower of str object at 0x7f9e6a3bb510&gt;()
E    +    where &lt;built-in method lower of str object at 0x7f9e6a3bb510&gt; = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower
E    +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=357).message</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_getUserOperationByHash" name="test_eth_getUserOperationByHash[]" time="0.050"><failure message="TypeError: 'NoneType' object is not subscriptable">tests/single/rpc/test_eth_getUserOperationByHash.py:14: in test_eth_getUserOperationByHash
    assert userop_hash(
E   TypeError: 'NoneType' object is not subscriptable</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_getUserOperationByHash" name="test_eth_getUserOperationByHash_error" time="0.005"><failure message="AssertionError: assert -32602 == -32601&#10; +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=361).code">tests/single/rpc/test_eth_getUserOperationByHash.py:28: in test_eth_getUserOperationByHash_error
    assert_rpc_error(response, "Missing/invalid userOpHash", -32601)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32602 == -32601
E    +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=361).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_getUserOperationReceipt" name="test_eth_getUserOperationReceipt[]" time="0.045"><failure message="TypeError: 'NoneType' object is not subscriptable">tests/single/rpc/test_eth_getUserOperationReceipt.py:15: in test_eth_getUserOperationReceipt
    assert response.result["userOpHash"] == userop_hash(helper_contract, userop)
E   TypeError: 'NoneType' object is not subscriptable</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_getUserOperationReceipt" name="test_eth_getUserOperationReceipt_error" time="0.004"><failure message="AssertionError: assert -32602 == -32601&#10; +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=365).code">tests/single/rpc/test_eth_getUserOperationReceipt.py:26: in test_eth_getUserOperationReceipt_error
    assert_rpc_error(response, "Missing/invalid userOpHash", -32601)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32602 == -32601
E    +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=365).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_sendUserOperation" name="test_eth_sendUserOperation[]" time="0.044"><failure message="AttributeError: 'Error' object has no attribute 'result'">tests/single/rpc/test_eth_sendUserOperation.py:19: in test_eth_sendUserOperation
    assert response.result == userop_hash(helper_contract, userop)
E   AttributeError: 'Error' object has no attribute 'result'</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_sendUserOperation" name="test_eth_sendUserOperation_revert" time="0.045"><failure message="AssertionError: assert 'testwallet: dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'&#10; +  where 'testwallet: dead signature' = &lt;built-in method lower of str object at 0x7f9e6b11db60&gt;()&#10; +    where &lt;built-in method lower of str object at 0x7f9e6b11db60&gt; = 'testWallet: dead signature'.lower&#10; +  and   'failedopwithrevert(0,aa23 reverted,0x)' = &lt;built-in method lower of str object at 0x7f9e6a3bb5d0&gt;()&#10; +    where &lt;built-in method lower of str object at 0x7f9e6a3bb5d0&gt; = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower&#10; +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=368).message">tests/single/rpc/test_eth_sendUserOperation.py:32: in test_eth_sendUserOperation_revert
    assert_rpc_error(
tests/utils.py:106: in assert_rpc_error
    assert message.lower() in response.message.lower()
E   AssertionError: assert 'testwallet: dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'
E    +  where 'testwallet: dead signature' = &lt;built-in method lower of str object at 0x7f9e6b11db60&gt;()
E    +    where &lt;built-in method lower of str object at 0x7f9e6b11db60&gt; = 'testWallet: dead signature'.lower
E    +  and   'failedopwithrevert(0,aa23 reverted,0x)' = &lt;built-in method lower of str object at 0x7f9e6a3bb5d0&gt;()
E    +    where &lt;built-in method lower of str object at 0x7f9e6a3bb5d0&gt; = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower
E    +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=368).message</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_sendUserOperation" name="test_eth_sendUserOperation_invalid_signature" time="0.030"><failure message="AssertionError: assert -32500 == &lt;RPCErrorCode.INVALID_SIGNATURE: -32507&gt;&#10; +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=370).code">tests/single/rpc/test_eth_sendUserOperation.py:38: in test_eth_sendUserOperation_invalid_signature
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == &lt;RPCErrorCode.INVALID_SIGNATURE: -32507&gt;
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=370).code</failure><system-out>--------------------------------- Captured Log ---------------------------------

--------------------------------- Captured Out ---------------------------------

</system-out><system-err>--------------------------------- Captured Err ---------------------------------

</system-err></testcase><testcase classname="tests.single.rpc.test_eth_supportedEntryPoints" name="test_eth_supportedEntryPoints[]" time="0.016" /></testsuite></testsuites>