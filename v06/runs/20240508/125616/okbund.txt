Wed May  8 12:47:18 UTC 2024: starting bundler /home/runner/work/bundler-test-executor/bundler-test-executor/bundlers/okbund/okbund.yml, name=okbund
Wed May  8 12:47:48 UTC 2024: started bundler /home/runner/work/bundler-test-executor/bundler-test-executor/bundlers/okbund/okbund.yml, name=okbund
============================= test session starts ==============================
platform linux -- Python 3.10.12, pytest-7.2.0, pluggy-1.0.0
rootdir: /home/runner/work/bundler-test-executor/bundler-test-executor/bundler-spec-tests
plugins: web3-5.31.1
collected 170 items / 1 skipped

tests/single/bundle/test_bundle.py FFFFFFFFFFFFFFFFFFFF.                 [ 12%]
tests/single/bundle/test_codehash.py F                                   [ 12%]
tests/single/bundle/test_storage_rules.py FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF [ 30%]
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF              [ 65%]
tests/single/opbanning/test_op_banning.py FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF [ 82%]
FFFFFFFFFFFFFFFFF                                                        [ 92%]
tests/single/rpc/test_eth_chainId.py .                                   [ 93%]
tests/single/rpc/test_eth_estimateUserOperationGas.py FFF                [ 95%]
tests/single/rpc/test_eth_getUserOperationByHash.py FF                   [ 96%]
tests/single/rpc/test_eth_getUserOperationReceipt.py FF                  [ 97%]
tests/single/rpc/test_eth_sendUserOperation.py FFF                       [ 99%]
tests/single/rpc/test_eth_supportedEntryPoints.py .                      [100%]

=================================== FAILURES ===================================
________________ test_bundle_replace_op[only_priority_fee_bump] ________________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
__________________ test_bundle_replace_op[only_max_fee_bump] ___________________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
____________________ test_bundle_replace_op[with_same_fee] _____________________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
____________________ test_bundle_replace_op[with_less_fee] _____________________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
_______________ test_bundle_replace_op[fee_bump_below_threshold] _______________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
________________ test_bundle_replace_op[fee_bump_at_threshold] _________________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
_______________ test_bundle_replace_op[fee_bump_above_threshold] _______________
tests/single/bundle/test_bundle.py:81: in test_bundle_replace_op
    assert new_op.send().result
E   AttributeError: 'Error' object has no attribute 'result'
_ test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-sender] _
tests/single/bundle/test_bundle.py:233: in test_mempool_reputation_rules_all_entities
    assert_rpc_error(response, case.stake_status, case.errorCode)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == -32504
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=19).code
_ test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-paymaster] _
tests/single/bundle/test_bundle.py:233: in test_mempool_reputation_rules_all_entities
    assert_rpc_error(response, case.stake_status, case.errorCode)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == -32504
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=26).code
_ test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-factory] _
tests/single/bundle/test_bundle.py:233: in test_mempool_reputation_rules_all_entities
    assert_rpc_error(response, case.stake_status, case.errorCode)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == -32504
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=33).code
_ test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-sender] _
tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284', nonce='0x0', initCode='0xD14FbD8a040e74dAa9E38c92Bf...ityFeePerGas='0xb2d05e00', paymasterAndData='0xc0c7c6047ebfff49b4607f7d493d60037c336d4a6e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',
E     -                nonce='0x0',
E     -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xc0c7c6047ebfff49b4607f7d493d60037c336d4a6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',
E     -                nonce='0x10000000000000000',
E     -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xd8781682d1ec9ad131b55cdd261148e2dc5343476e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',
E     -                nonce='0x20000000000000000',
E     -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x38903b7be4172e26e1fff122a0b8e0d30902fe3e6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',
E     -                nonce='0x30000000000000000',
E     -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf276c5c895427c498935a0bbcfc94eb48296a7306e6f7468696e67',
E     -                signature='0x'),
E       ]
_ test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-paymaster] _
tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0xCbfeebB23ed42dA96fE04eC6B82E77480e7585c1', nonce='0x0', initCode='0x4a5217bEA15D166251b19834f0...ityFeePerGas='0xb2d05e00', paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xCbfeebB23ed42dA96fE04eC6B82E77480e7585c1',
E     -                nonce='0x0',
E     -                initCode='0x4a5217bEA15D166251b19834f00B51a4E70634650d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x868e9d9e907834649C3B23c0B4929538464cB82d',
E     -                nonce='0x10000000000000000',
E     -                initCode='0xBAFB8322F143B7FB5b3f55d306F2F218664A65aA0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x147A5abFC6ecedB6259Ee2e58FDf8a456d895dA4',
E     -                nonce='0x20000000000000000',
E     -                initCode='0xF3D59e8A1bD7C0B8D9b0C5BA434aFEF753d56b910d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xa9Ec3BF411592016C5d3aa93a9208B87a247f014',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x262544cA8d87618ff1F064DB0329C2b8e0A65ADf0d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',
E     -                signature='0x'),
E       ]
_ test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-factory] _
tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0xaa29d8Cc6Ce97045D44d35d59F9D73cAcFe4B3b0', nonce='0x0', initCode='0x0A2F4A1B01A3938D353758A54E...ityFeePerGas='0xb2d05e00', paymasterAndData='0xbce71b72dea6fe8c3467af921927c6c9d922435e6e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xaa29d8Cc6Ce97045D44d35d59F9D73cAcFe4B3b0',
E     -                nonce='0x0',
E     -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xbce71b72dea6fe8c3467af921927c6c9d922435e6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x1FA774fD9DbcAD806914D709efff3229d088825c',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x2d2b0e153d38a647aa340ffce497d23302ea70e96e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xA8C55A0d07A0C1A8bcb2DAd66B1e9dBe176cAdFa',
E     -                nonce='0x20000000000000000',
E     -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x0c2bc546170af052e09af44150f44c807a55f9676e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x308F0eDd9Ec006097E6DfEc1293F15288A54222F',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x788a8067dc02d624bbca0a906b82e6cb554897776e6f7468696e67',
E     -                signature='0x'),
E       ]
_ test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-sender] _
tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains 4 more items, first extra item: UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A', nonce='0x0', initCode='0xe34A029A9FD373a789dFC2F066...ityFeePerGas='0xb2d05e00', paymasterAndData='0xd5a67289a06cb80c6de21e631bc2e8e2ddeda5986e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',
E     -                nonce='0x0',
E     -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xd5a67289a06cb80c6de21e631bc2e8e2ddeda5986e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',
E     -                nonce='0x10000000000000000',
E     -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x7de8cb007b4e4f25beee380c0d0566a23c5285196e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',
E     -                nonce='0x20000000000000000',
E     -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x15b49038f94a377b0ecde0cb5047e067accb58bf6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',
E     -                nonce='0x30000000000000000',
E     -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xe52f1c1ea2501f08796122d3ba21e1806cd7d69d6e6f7468696e67',
E     -                signature='0x'),
E       ]
_ test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-paymaster] _
tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...re='0x'), ...]
E     Right contains 11 more items, first extra item: UserOperation(sender='0x9D1Bbe7d29049e28852CafEFc080d953FBA67D79', nonce='0x0', initCode='0x8918b10dAF5fBdE75D7493F8f0...ityFeePerGas='0xb2d05e00', paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x9D1Bbe7d29049e28852CafEFc080d953FBA67D79',
E     -                nonce='0x0',
E     -                initCode='0x8918b10dAF5fBdE75D7493F8f01c13D4670D5Cee0d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x257b703f3FdF3Ef612f5ceb23ab2a4122fAf5F99',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x3f900Cd347B97a26af63dEBD6b90031b449953Db0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xFdd03570198D096e3879d098B6cf71D5401142d3',
E     -                nonce='0x20000000000000000',
E     -                initCode='0xCbAd1c699C3A1538603C332e22AeBd24D91b64cD0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xD29eB06403C273cc57a372f9F6f5791D8E5fDCc8',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x2EeaD5bC99393049230151278c44fd38E1C9C8760d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xF12d7246B1b147457170C6fdF4fD4b83caF262a5',
E     -                nonce='0x40000000000000000',
E     -                initCode='0x0Cc52eE387541470E6786447E8593053A7d6CA2a0d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x2845682200FB2b62B376A38c3A0A3f2692a345e9',
E     -                nonce='0x50000000000000000',
E     -                initCode='0x54c17e4f4fCB9212673c105B87D536591dBDdB160d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xC6B42683BC5d6bD01BfEAFBeF7841a2500Dadb15',
E     -                nonce='0x60000000000000000',
E     -                initCode='0x1b03BCa79555046788238c69B6A0E024ECd0FAc50d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xf293c34894A64a94Ddec632f031588A182A536d8',
E     -                nonce='0x70000000000000000',
E     -                initCode='0xf9A21ef8211486D712d5A7d8B041A532117F27280d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x0406E61e70963e6B51C88d6c47DedE8bD9D72f0B',
E     -                nonce='0x80000000000000000',
E     -                initCode='0x9C30c6fAa0E930Bbe9C5970EdC142463d071E7410d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x842B2b21AE653461397901791f43491F5c4DB8EA',
E     -                nonce='0x90000000000000000',
E     -                initCode='0xC5d30fbCC27cf242e9Aae2c2e6eccf5b0f1d719D0d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xCB41BB8C023dc1dF00efaDA1fA3207DfDc96E2E4',
E     -                nonce='0xa0000000000000000',
E     -                initCode='0x0E999f4025A4BD6f1eccFF2f8fE0Ab50E5B0B5970d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
E     -                signature='0x'),
E       ]
_ test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-factory] _
tests/single/bundle/test_bundle.py:215: in test_mempool_reputation_rules_all_entities
    assert dump_mempool() == wallet_ops
E   AssertionError: assert [] == [UserOperatio...re='0x'), ...]
E     Right contains 11 more items, first extra item: UserOperation(sender='0xe442F254C216051d592ecd0B89eBe1229965b9c1', nonce='0x0', initCode='0x58A9673006FBa67d7B55812600...ityFeePerGas='0xb2d05e00', paymasterAndData='0xd2f7b109b426341eca1b4569f27e7a66388a6fe56e6f7468696e67', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xe442F254C216051d592ecd0B89eBe1229965b9c1',
E     -                nonce='0x0',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xd2f7b109b426341eca1b4569f27e7a66388a6fe56e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xfd5fDFD81077399adb5D0a5E215095A6fFFcF6b3',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xa7b891864a120fe562e192b242cc4455f4f84f5d6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x02d3053a4f1f2d686755Fb20E1fbC66D782FA3ed',
E     -                nonce='0x20000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x925976e4f15e46fa39b38c0a3e2e9d23d542b7c96e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x60AD072b8a7e81DbdB6cE822F4345ca24bEb30DA',
E     -                nonce='0x30000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x009c812a8cede6be0eb4105c292ddee5d112dbce6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xE86018cA6cd2599712FBBB10458dEbf68cf42eC4',
E     -                nonce='0x40000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xf811c26421e844e50f67c2c18dc32a4867fbd65d6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xCc89618A2e28E862C1E8B2989e9117714C008dE6',
E     -                nonce='0x50000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xe30911b834e07b58919fa5ce673993ddef14b4186e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x16Fa376C5277Ea396E3B2eB1132e804B8a1C3a54',
E     -                nonce='0x60000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x47532854295ec7ee150f77102f72b11db04e1a9e6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x77DFcB1d748c600887f36b2bDF3B9d8f23D035C9',
E     -                nonce='0x70000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x83a2128e2634d14998f62d7f492c2afb956ba5de6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x4Db08a04e8c0A15bbE2D605eC15C5EfF3864E125',
E     -                nonce='0x80000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x620f434f5cd3fceb5505834858b0fe7b0a2db8db6e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0xC698ebAB62CAb6FEA722574c2c80fB97963983Cd',
E     -                nonce='0x90000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0xae9631d0200455d6c0e91bf953fe71f27c8966c66e6f7468696e67',
E     -                signature='0x'),
E     -  UserOperation(sender='0x2d1e2a6F82D7f6f9d5d309CD11F8dE980C7c3322',
E     -                nonce='0xa0000000000000000',
E     -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x0f45d5a3d72945f3df66a0e59850a0728b6c52016e6f7468696e67',
E     -                signature='0x'),
E       ]
_____________________ test_max_allowed_ops_unstaked_sender _____________________
tests/single/bundle/test_bundle.py:248: in test_max_allowed_ops_unstaked_sender
    assert dump_mempool() == wallet_ops[: i + 1]
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains one more item: UserOperation(sender='0x9148D8a387b27be3894F1444153c238633c0e068', nonce='0x0', initCode='0x', callData='0xa9e966b7000...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x9148D8a387b27be3894F1444153c238633c0e068',
E     -                nonce='0x0',
E     -                initCode='0x',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x',
E     -                signature='0x'),
E       ]
______________________ test_max_allowed_ops_staked_sender ______________________
tests/single/bundle/test_bundle.py:275: in test_max_allowed_ops_staked_sender
    assert dump_mempool() == wallet_ops[: i + 1]
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains one more item: UserOperation(sender='0x72bB5c413FBa35522dD8B45A32C437dBf2eb6670', nonce='0x10000000000000000', initCode='0x', callDat...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0x72bB5c413FBa35522dD8B45A32C437dBf2eb6670',
E     -                nonce='0x10000000000000000',
E     -                initCode='0x',
E     -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x',
E     -                signature='0x'),
E       ]
______________ test_ban_user_op_access_other_ops_sender_in_bundle ______________
tests/single/bundle/test_bundle.py:319: in test_ban_user_op_access_other_ops_sender_in_bundle
    assert dump_mempool() == [user_op2]
E   AssertionError: assert [] == [UserOperatio...gnature='0x')]
E     Right contains one more item: UserOperation(sender='0xad9f4A570C949C67Cadde666Fc2b2cE234812dE3', nonce='0x0', initCode='0x', callData='0x', callGasL...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
E     Full diff:
E       [
E     +  ,
E     -  UserOperation(sender='0xad9f4A570C949C67Cadde666Fc2b2cE234812dE3',
E     -                nonce='0x0',
E     -                initCode='0x',
E     -                callData='0x',
E     -                callGasLimit='0x493e0',
E     -                verificationGasLimit='0xf4240',
E     -                preVerificationGas='0x493e0',
E     -                maxFeePerGas='0xee6b2800',
E     -                maxPriorityFeePerGas='0xb2d05e00',
E     -                paymasterAndData='0x',
E     -                signature='0x'),
E       ]
__________________ test_ban_user_sender_double_role_in_bundle __________________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_bundle.py:358: in test_ban_user_sender_double_role_in_bundle
    assert_ok(response1)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='0x', data=None, id=119)
____________________________ test_codehash_changed _____________________________
tests/single/bundle/test_codehash.py:44: in test_codehash_changed
    assert response.result, "userop dropped by bundler"
E   AttributeError: 'Error' object has no attribute 'result'
___________ test_rule[[STO-000]unstaked][paymaster][no_storage][ok] ____________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=129)
____________ test_rule[[STO-031]unstaked][paymaster][storage][drop] ____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=131).code
_______ test_rule[[STO-032]unstaked][paymaster][reference_storage][drop] _______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=133).code
___ test_rule[[STO-032]unstaked][paymaster][reference_storage_struct][drop] ____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=135).code
_________ test_rule[[STO-010]unstaked][paymaster][account_storage][ok] _________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=137)
____ test_rule[[STO-021]unstaked][paymaster][account_reference_storage][ok] ____
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=139)
_ test_rule[[STO-021]unstaked][paymaster][account_reference_storage_struct][ok] _
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=141)
_ test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop0] _
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=143).code
___________ test_rule[[EREP-050]unstaked][paymaster][context][drop] ____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=145).code
_____ test_rule[[STO-032]unstaked][paymaster][external_storage_read][drop] _____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=147).code
___________ test_rule[[OP-020]unstaked][paymaster][out_of_gas][drop] ___________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=149).code
_______ test_rule[[OP-020]unstaked][paymaster][sstore_out_of_gas][drop] ________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=151).code
____________ test_rule[[STO-000]staked][paymaster][no_storage][ok] _____________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=153)
______________ test_rule[[STO-031]staked][paymaster][storage][ok] ______________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=155)
_________ test_rule[[STO-032]staked][paymaster][reference_storage][ok] _________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=157)
_____ test_rule[[STO-032]staked][paymaster][reference_storage_struct][ok] ______
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=159)
_____ test_rule[[STO-033]staked][paymaster][reference_storage_struct][ok] ______
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=161)
__________ test_rule[[STO-010]staked][paymaster][account_storage][ok] __________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=163)
_____ test_rule[[STO-021]staked][paymaster][account_reference_storage][ok] _____
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=165)
_ test_rule[[STO-021]staked][paymaster][account_reference_storage_struct][ok] __
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=167)
_ test_rule[[STO-022]staked][paymaster][account_reference_storage_init_code][ok] _
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=169)
_____________ test_rule[[EREP-050]staked][paymaster][context][ok] ______________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=171)
_____ test_rule[[STO-033]staked][paymaster][external_storage_write][drop] ______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=173).code
_______ test_rule[[STO-033]staked][paymaster][external_storage_read][ok] _______
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=175)
____________ test_rule[[OP-020]staked][paymaster][out_of_gas][drop] ____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=177).code
________ test_rule[[OP-020]staked][paymaster][sstore_out_of_gas][drop] _________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=179).code
____________ test_rule[[STO-000]unstaked][factory][no_storage][ok] _____________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=181)
_____________ test_rule[[STO-000]unstaked][factory][storage][drop] _____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=183).code
________ test_rule[[STO-000]unstaked][factory][reference_storage][drop] ________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=185).code
____ test_rule[[STO-032]unstaked][factory][reference_storage_struct][drop] _____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=187).code
__________ test_rule[[STO-010]unstaked][factory][account_storage][ok] __________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=189)
____ test_rule[[STO-021]unstaked][factory][account_reference_storage][drop] ____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=191).code
_ test_rule[[STO-021]unstaked][factory][account_reference_storage_struct][drop] _
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=193).code
______ test_rule[[STO-000]unstaked][factory][external_storage_read][drop] ______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=195).code
__ test_rule[[OP-042]unstaked][factory][EXTCODEx_CALLx_undeployed_sender][ok] __
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=197)
_ test_rule[[OP-041]unstaked][factory][EXTCODESIZE_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=199).code
_ test_rule[[OP-041]unstaked][factory][EXTCODEHASH_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=201).code
_ test_rule[[OP-041]unstaked][factory][EXTCODECOPY_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=203).code
_____ test_rule[[OP-041]unstaked][factory][CALL_undeployed_contract][drop] _____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=205).code
___ test_rule[[OP-041]unstaked][factory][CALLCODE_undeployed_contract][drop] ___
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=207).code
_ test_rule[[OP-041]unstaked][factory][DELEGATECALL_undeployed_contract][drop] _
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=209).code
__ test_rule[[OP-041]unstaked][factory][STATICCALL_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=211).code
____________ test_rule[[OP-020]unstaked][factory][out_of_gas][drop] ____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=213).code
________ test_rule[[OP-020]unstaked][factory][sstore_out_of_gas][drop] _________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=215).code
_____________ test_rule[[STO-000]staked][factory][no_storage][ok] ______________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=217)
_______________ test_rule[[STO-031]staked][factory][storage][ok] _______________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=219)
__________ test_rule[[STO-032]staked][factory][reference_storage][ok] __________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=221)
______ test_rule[[STO-032]staked][factory][reference_storage_struct][ok] _______
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=223)
___________ test_rule[[STO-010]staked][factory][account_storage][ok] ___________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=225)
______ test_rule[[STO-021]staked][factory][account_reference_storage][ok] ______
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=227)
__ test_rule[[STO-021]staked][factory][account_reference_storage_struct][ok] ___
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=229)
______ test_rule[[STO-033]staked][factory][external_storage_write][drop] _______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=231).code
________ test_rule[[STO-033]staked][factory][external_storage_read][ok] ________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=233)
_____________ test_rule[[OP-020]staked][factory][out_of_gas][drop] _____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=235).code
_________ test_rule[[OP-020]staked][factory][sstore_out_of_gas][drop] __________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=237).code
____________ test_rule[[STO-000]unstaked][account][no_storage][ok] _____________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=239)
__________ test_rule[[STO-010]unstaked][account][account_storage][ok] __________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=241)
_____ test_rule[[STO-021]unstaked][account][account_reference_storage][ok] _____
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=243)
_ test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][drop] _
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=245).code
_ test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][ok] _
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=247)
_ test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop1] _
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=249).code
_ test_rule[[STO-021]unstaked][account][account_reference_storage_struct][ok] __
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=251)
______ test_rule[[STO-000]unstaked][account][external_storage_read][drop] ______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=253).code
____________ test_rule[[OP-020]unstaked][account][out_of_gas][drop] ____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=255).code
________ test_rule[[OP-020]unstaked][account][sstore_out_of_gas][drop] _________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=257).code
_____________ test_rule[[STO-000]staked][account][no_storage][ok] ______________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=259)
___________ test_rule[[STO-010]staked][account][account_storage][ok] ___________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=261)
______ test_rule[[STO-021]staked][account][account_reference_storage][ok] ______
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=263)
__ test_rule[[STO-021]staked][account][account_reference_storage_struct][ok] ___
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=265)
_____________ test_rule[[OP-020]staked][account][out_of_gas][drop] _____________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=267).code
_________ test_rule[[OP-020]staked][account][sstore_out_of_gas][drop] __________
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=269).code
______ test_rule[[STO-033]staked][account][external_storage_write][drop] _______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=271).code
________ test_rule[[STO-033]staked][account][external_storage_read][ok] ________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=273)
____ test_rule[[OP-011]unstaked][account][entryPoint_call_balanceOf][drop] _____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=275).code
___ test_rule[[OP-061]unstaked][account][eth_value_transfer_forbidden][drop] ___
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=277).code
___ test_rule[[OP-053]unstaked][account][eth_value_transfer_entryPoint][ok] ____
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=279)
_ test_rule[[OP-052]unstaked][account][eth_value_transfer_entryPoint_depositTo][ok] _
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=281)
_ test_rule[[OP-041]unstaked][account][EXTCODESIZE_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=283).code
_ test_rule[[OP-041]unstaked][account][EXTCODEHASH_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=285).code
_ test_rule[[OP-041]unstaked][account][EXTCODECOPY_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=287).code
______ test_rule[[OP-054]unstaked][account][EXTCODESIZE_entrypoint][drop] ______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=289).code
______ test_rule[[OP-054]unstaked][account][EXTCODEHASH_entrypoint][drop] ______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=291).code
______ test_rule[[OP-054]unstaked][account][EXTCODECOPY_entrypoint][drop] ______
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=293).code
_____ test_rule[[OP-041]unstaked][account][CALL_undeployed_contract][drop] _____
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=295).code
___ test_rule[[OP-041]unstaked][account][CALLCODE_undeployed_contract][drop] ___
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=297).code
_ test_rule[[OP-041]unstaked][account][DELEGATECALL_undeployed_contract][drop] _
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=299).code
__ test_rule[[OP-041]unstaked][account][STATICCALL_undeployed_contract][drop] __
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/single/bundle/test_storage_rules.py:22: in assert_error
    assert_rpc_error(response, response.message, RPCErrorCode.BANNED_OPCODE)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=301).code
_ test_rule[[OP-062]unstaked][account][CALL_undeployed_contract_allowed_precompile][ok] _
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/bundle/test_storage_rules.py:772: in test_rule
    case.assert_func(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=303)
_________________________ test_enough_verification_gas _________________________
tests/single/bundle/test_storage_rules.py:798: in test_enough_verification_gas
    pre_verification_gas = response.result["preVerificationGas"]
E   AttributeError: 'Error' object has no attribute 'result'
_______________________ test_account_banned_opcode[GAS] ________________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=307).code
______________________ test_account_banned_opcode[NUMBER] ______________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=308).code
____________________ test_account_banned_opcode[TIMESTAMP] _____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=309).code
_____________________ test_account_banned_opcode[COINBASE] _____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=310).code
____________________ test_account_banned_opcode[DIFFICULTY] ____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=311).code
_____________________ test_account_banned_opcode[BASEFEE] ______________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=312).code
_____________________ test_account_banned_opcode[GASLIMIT] _____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=313).code
_____________________ test_account_banned_opcode[GASPRICE] _____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=314).code
___________________ test_account_banned_opcode[SELFBALANCE] ____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=315).code
_____________________ test_account_banned_opcode[BALANCE] ______________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=316).code
______________________ test_account_banned_opcode[ORIGIN] ______________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=317).code
____________________ test_account_banned_opcode[BLOCKHASH] _____________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=318).code
______________________ test_account_banned_opcode[CREATE] ______________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=319).code
_____________________ test_account_banned_opcode[CREATE2] ______________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=320).code
___________________ test_account_banned_opcode[SELFDESTRUCT] ___________________
tests/single/opbanning/test_op_banning.py:46: in test_account_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=321).code
________________ test_account_allowed_opcode_sequence[GAS CALL] ________________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/opbanning/test_op_banning.py:58: in test_account_allowed_opcode_sequence
    assert_ok(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=322)
____________ test_account_allowed_opcode_sequence[GAS DELEGATECALL] ____________
tests/utils.py:98: in assert_ok
    assert response.result
E   AttributeError: 'Error' object has no attribute 'result'

The above exception was the direct cause of the following exception:
tests/single/opbanning/test_op_banning.py:58: in test_account_allowed_opcode_sequence
    assert_ok(response)
tests/utils.py:100: in assert_ok
    raise Exception(f"expected result object, got:\n{response}") from exc
E   Exception: expected result object, got:
E   Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=323)
______________________ test_paymaster_banned_opcode[GAS] _______________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=324).code
_____________________ test_paymaster_banned_opcode[NUMBER] _____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=325).code
___________________ test_paymaster_banned_opcode[TIMESTAMP] ____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=326).code
____________________ test_paymaster_banned_opcode[COINBASE] ____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=327).code
___________________ test_paymaster_banned_opcode[DIFFICULTY] ___________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=328).code
____________________ test_paymaster_banned_opcode[BASEFEE] _____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=329).code
____________________ test_paymaster_banned_opcode[GASLIMIT] ____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=330).code
____________________ test_paymaster_banned_opcode[GASPRICE] ____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=331).code
__________________ test_paymaster_banned_opcode[SELFBALANCE] ___________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=332).code
____________________ test_paymaster_banned_opcode[BALANCE] _____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=333).code
_____________________ test_paymaster_banned_opcode[ORIGIN] _____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=334).code
___________________ test_paymaster_banned_opcode[BLOCKHASH] ____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=335).code
_____________________ test_paymaster_banned_opcode[CREATE] _____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=336).code
____________________ test_paymaster_banned_opcode[CREATE2] _____________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=337).code
__________________ test_paymaster_banned_opcode[SELFDESTRUCT] __________________
tests/single/opbanning/test_op_banning.py:67: in test_paymaster_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=338).code
_______________________ test_factory_banned_opcode[GAS] ________________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=339).code
______________________ test_factory_banned_opcode[NUMBER] ______________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=340).code
____________________ test_factory_banned_opcode[TIMESTAMP] _____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=341).code
_____________________ test_factory_banned_opcode[COINBASE] _____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=342).code
____________________ test_factory_banned_opcode[DIFFICULTY] ____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=343).code
_____________________ test_factory_banned_opcode[BASEFEE] ______________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=344).code
_____________________ test_factory_banned_opcode[GASLIMIT] _____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=345).code
_____________________ test_factory_banned_opcode[GASPRICE] _____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=346).code
___________________ test_factory_banned_opcode[SELFBALANCE] ____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=347).code
_____________________ test_factory_banned_opcode[BALANCE] ______________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=348).code
______________________ test_factory_banned_opcode[ORIGIN] ______________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=349).code
____________________ test_factory_banned_opcode[BLOCKHASH] _____________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=350).code
______________________ test_factory_banned_opcode[CREATE] ______________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=351).code
_____________________ test_factory_banned_opcode[CREATE2] ______________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=352).code
___________________ test_factory_banned_opcode[SELFDESTRUCT] ___________________
tests/single/opbanning/test_op_banning.py:84: in test_factory_banned_opcode
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
E    +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=353).code
_____________________ test_eth_estimateUserOperationGas[] ______________________
tests/single/rpc/test_eth_estimateUserOperationGas.py:20: in test_eth_estimateUserOperationGas
    validate(instance=response.result, schema=schema)
E   AttributeError: 'Error' object has no attribute 'result'
______________ test_eth_estimateUserOperationGas_execution_revert ______________
tests/single/rpc/test_eth_estimateUserOperationGas.py:29: in test_eth_estimateUserOperationGas_execution_revert
    assert_rpc_error(response, "test fail", RPCErrorCode.EXECUTION_REVERTED)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.EXECUTION_REVERTED: -32521>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=356).code
_____________ test_eth_estimateUserOperationGas_simulation_revert ______________
tests/single/rpc/test_eth_estimateUserOperationGas.py:37: in test_eth_estimateUserOperationGas_simulation_revert
    assert_rpc_error(response, "dead signature", RPCErrorCode.REJECTED_BY_EP_OR_ACCOUNT)
tests/utils.py:106: in assert_rpc_error
    assert message.lower() in response.message.lower()
E   AssertionError: assert 'dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'
E    +  where 'dead signature' = <built-in method lower of str object at 0x7f9e6b153330>()
E    +    where <built-in method lower of str object at 0x7f9e6b153330> = 'dead signature'.lower
E    +  and   'failedopwithrevert(0,aa23 reverted,0x)' = <built-in method lower of str object at 0x7f9e6a3bb510>()
E    +    where <built-in method lower of str object at 0x7f9e6a3bb510> = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower
E    +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=357).message
______________________ test_eth_getUserOperationByHash[] _______________________
tests/single/rpc/test_eth_getUserOperationByHash.py:14: in test_eth_getUserOperationByHash
    assert userop_hash(
E   TypeError: 'NoneType' object is not subscriptable
____________________ test_eth_getUserOperationByHash_error _____________________
tests/single/rpc/test_eth_getUserOperationByHash.py:28: in test_eth_getUserOperationByHash_error
    assert_rpc_error(response, "Missing/invalid userOpHash", -32601)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32602 == -32601
E    +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=361).code
______________________ test_eth_getUserOperationReceipt[] ______________________
tests/single/rpc/test_eth_getUserOperationReceipt.py:15: in test_eth_getUserOperationReceipt
    assert response.result["userOpHash"] == userop_hash(helper_contract, userop)
E   TypeError: 'NoneType' object is not subscriptable
____________________ test_eth_getUserOperationReceipt_error ____________________
tests/single/rpc/test_eth_getUserOperationReceipt.py:26: in test_eth_getUserOperationReceipt_error
    assert_rpc_error(response, "Missing/invalid userOpHash", -32601)
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32602 == -32601
E    +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=365).code
_________________________ test_eth_sendUserOperation[] _________________________
tests/single/rpc/test_eth_sendUserOperation.py:19: in test_eth_sendUserOperation
    assert response.result == userop_hash(helper_contract, userop)
E   AttributeError: 'Error' object has no attribute 'result'
______________________ test_eth_sendUserOperation_revert _______________________
tests/single/rpc/test_eth_sendUserOperation.py:32: in test_eth_sendUserOperation_revert
    assert_rpc_error(
tests/utils.py:106: in assert_rpc_error
    assert message.lower() in response.message.lower()
E   AssertionError: assert 'testwallet: dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'
E    +  where 'testwallet: dead signature' = <built-in method lower of str object at 0x7f9e6b11db60>()
E    +    where <built-in method lower of str object at 0x7f9e6b11db60> = 'testWallet: dead signature'.lower
E    +  and   'failedopwithrevert(0,aa23 reverted,0x)' = <built-in method lower of str object at 0x7f9e6a3bb5d0>()
E    +    where <built-in method lower of str object at 0x7f9e6a3bb5d0> = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower
E    +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=368).message
_________________ test_eth_sendUserOperation_invalid_signature _________________
tests/single/rpc/test_eth_sendUserOperation.py:38: in test_eth_sendUserOperation_invalid_signature
    assert_rpc_error(
tests/utils.py:105: in assert_rpc_error
    assert response.code == code
E   AssertionError: assert -32500 == <RPCErrorCode.INVALID_SIGNATURE: -32507>
E    +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=370).code
=============================== warnings summary ===============================
tests/single/bundle/test_codehash.py::test_codehash_changed
  /home/runner/work/bundler-test-executor/bundler-test-executor/bundler-spec-tests/.venv/lib/python3.10/site-packages/web3/contract.py:1190: UserWarning: The log with transaction hash: HexBytes('0xc300b38b3997b4f9bc80b4626884e160d7cb9d7f7c859a82263ad1aba1d8e0f7') and logIndex: 0 encountered the following error during processing: MismatchedABI(The event signature did not match the provided ABI). It has been discarded.
    warnings.warn(

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
==================================== PASSES ====================================
- generated xml file: /home/runner/work/bundler-test-executor/bundler-test-executor/build/out/okbund.xml -
=========================== short test summary info ============================
PASSED tests/single/bundle/test_bundle.py::test_stake_check_in_bundler
PASSED tests/single/rpc/test_eth_chainId.py::test_eth_chainId[]
PASSED tests/single/rpc/test_eth_supportedEntryPoints.py::test_eth_supportedEntryPoints[]
SKIPPED [1] tests/single/reputation/test_reputation.py:18: reputation tests currently skipped
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[only_priority_fee_bump] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[only_max_fee_bump] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[with_same_fee] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[with_less_fee] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[fee_bump_below_threshold] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[fee_bump_at_threshold] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_bundle_replace_op[fee_bump_above_threshold] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-sender] - AssertionError: assert -32500 == -32504
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=19).code
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-paymaster] - AssertionError: assert -32500 == -32504
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=26).code
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[SREP-020-banned-entity-not-allowed-banned-factory] - AssertionError: assert -32500 == -32504
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=33).code
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-sender] - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains 4 more items, first extra item: UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284', nonce='0x0', initCode='0xD14FbD8a040e74dAa9E38c92Bf...ityFeePerGas='0xb2d05e00', paymasterAndData='0xc0c7c6047ebfff49b4607f7d493d60037c336d4a6e6f7468696e67', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',
  -                nonce='0x0',
  -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xc0c7c6047ebfff49b4607f7d493d60037c336d4a6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',
  -                nonce='0x10000000000000000',
  -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xd8781682d1ec9ad131b55cdd261148e2dc5343476e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',
  -                nonce='0x20000000000000000',
  -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x38903b7be4172e26e1fff122a0b8e0d30902fe3e6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xF1956ffE69bA963C1d3D202883b7c6870B164284',
  -                nonce='0x30000000000000000',
  -                initCode='0xD14FbD8a040e74dAa9E38c92Bf8FFc810467B3930d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf276c5c895427c498935a0bbcfc94eb48296a7306e6f7468696e67',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-paymaster] - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains 4 more items, first extra item: UserOperation(sender='0xCbfeebB23ed42dA96fE04eC6B82E77480e7585c1', nonce='0x0', initCode='0x4a5217bEA15D166251b19834f0...ityFeePerGas='0xb2d05e00', paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0xCbfeebB23ed42dA96fE04eC6B82E77480e7585c1',
  -                nonce='0x0',
  -                initCode='0x4a5217bEA15D166251b19834f00B51a4E70634650d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x868e9d9e907834649C3B23c0B4929538464cB82d',
  -                nonce='0x10000000000000000',
  -                initCode='0xBAFB8322F143B7FB5b3f55d306F2F218664A65aA0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x147A5abFC6ecedB6259Ee2e58FDf8a456d895dA4',
  -                nonce='0x20000000000000000',
  -                initCode='0xF3D59e8A1bD7C0B8D9b0C5BA434aFEF753d56b910d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xa9Ec3BF411592016C5d3aa93a9208B87a247f014',
  -                nonce='0x30000000000000000',
  -                initCode='0x262544cA8d87618ff1F064DB0329C2b8e0A65ADf0d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xad77701231559ae1596063bdb2b59e83c7e6476a6e6f7468696e67',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[SREP-030-throttled-entity-allowed-a-little-throttled-factory] - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains 4 more items, first extra item: UserOperation(sender='0xaa29d8Cc6Ce97045D44d35d59F9D73cAcFe4B3b0', nonce='0x0', initCode='0x0A2F4A1B01A3938D353758A54E...ityFeePerGas='0xb2d05e00', paymasterAndData='0xbce71b72dea6fe8c3467af921927c6c9d922435e6e6f7468696e67', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0xaa29d8Cc6Ce97045D44d35d59F9D73cAcFe4B3b0',
  -                nonce='0x0',
  -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xbce71b72dea6fe8c3467af921927c6c9d922435e6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x1FA774fD9DbcAD806914D709efff3229d088825c',
  -                nonce='0x10000000000000000',
  -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x2d2b0e153d38a647aa340ffce497d23302ea70e96e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xA8C55A0d07A0C1A8bcb2DAd66B1e9dBe176cAdFa',
  -                nonce='0x20000000000000000',
  -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x0c2bc546170af052e09af44150f44c807a55f9676e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x308F0eDd9Ec006097E6DfEc1293F15288A54222F',
  -                nonce='0x30000000000000000',
  -                initCode='0x0A2F4A1B01A3938D353758A54E1a7e39c7be21Dc0d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x788a8067dc02d624bbca0a906b82e6cb554897776e6f7468696e67',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-sender] - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains 4 more items, first extra item: UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A', nonce='0x0', initCode='0xe34A029A9FD373a789dFC2F066...ityFeePerGas='0xb2d05e00', paymasterAndData='0xd5a67289a06cb80c6de21e631bc2e8e2ddeda5986e6f7468696e67', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',
  -                nonce='0x0',
  -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xd5a67289a06cb80c6de21e631bc2e8e2ddeda5986e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',
  -                nonce='0x10000000000000000',
  -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x7de8cb007b4e4f25beee380c0d0566a23c5285196e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',
  -                nonce='0x20000000000000000',
  -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x15b49038f94a377b0ecde0cb5047e067accb58bf6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xcADd911BC0484CF66faa4605f92c71a3F5F77e0A',
  -                nonce='0x30000000000000000',
  -                initCode='0xe34A029A9FD373a789dFC2F0662f5d1Da59417170d058fe300000000000000000000000000000000000000000000000000000000000001c800000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xe52f1c1ea2501f08796122d3ba21e1806cd7d69d6e6f7468696e67',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-paymaster] - AssertionError: assert [] == [UserOperatio...re='0x'), ...]
  Right contains 11 more items, first extra item: UserOperation(sender='0x9D1Bbe7d29049e28852CafEFc080d953FBA67D79', nonce='0x0', initCode='0x8918b10dAF5fBdE75D7493F8f0...ityFeePerGas='0xb2d05e00', paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0x9D1Bbe7d29049e28852CafEFc080d953FBA67D79',
  -                nonce='0x0',
  -                initCode='0x8918b10dAF5fBdE75D7493F8f01c13D4670D5Cee0d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x257b703f3FdF3Ef612f5ceb23ab2a4122fAf5F99',
  -                nonce='0x10000000000000000',
  -                initCode='0x3f900Cd347B97a26af63dEBD6b90031b449953Db0d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xFdd03570198D096e3879d098B6cf71D5401142d3',
  -                nonce='0x20000000000000000',
  -                initCode='0xCbAd1c699C3A1538603C332e22AeBd24D91b64cD0d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xD29eB06403C273cc57a372f9F6f5791D8E5fDCc8',
  -                nonce='0x30000000000000000',
  -                initCode='0x2EeaD5bC99393049230151278c44fd38E1C9C8760d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xF12d7246B1b147457170C6fdF4fD4b83caF262a5',
  -                nonce='0x40000000000000000',
  -                initCode='0x0Cc52eE387541470E6786447E8593053A7d6CA2a0d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x2845682200FB2b62B376A38c3A0A3f2692a345e9',
  -                nonce='0x50000000000000000',
  -                initCode='0x54c17e4f4fCB9212673c105B87D536591dBDdB160d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xC6B42683BC5d6bD01BfEAFBeF7841a2500Dadb15',
  -                nonce='0x60000000000000000',
  -                initCode='0x1b03BCa79555046788238c69B6A0E024ECd0FAc50d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xf293c34894A64a94Ddec632f031588A182A536d8',
  -                nonce='0x70000000000000000',
  -                initCode='0xf9A21ef8211486D712d5A7d8B041A532117F27280d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x0406E61e70963e6B51C88d6c47DedE8bD9D72f0B',
  -                nonce='0x80000000000000000',
  -                initCode='0x9C30c6fAa0E930Bbe9C5970EdC142463d071E7410d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x842B2b21AE653461397901791f43491F5c4DB8EA',
  -                nonce='0x90000000000000000',
  -                initCode='0xC5d30fbCC27cf242e9Aae2c2e6eccf5b0f1d719D0d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xCB41BB8C023dc1dF00efaDA1fA3207DfDc96E2E4',
  -                nonce='0xa0000000000000000',
  -                initCode='0x0E999f4025A4BD6f1eccFF2f8fE0Ab50E5B0B5970d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf811f82cc471664181a346c7dd835ac3f361e72c6e6f7468696e67',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_mempool_reputation_rules_all_entities[UREP-010 UREP-020-unstaked-entity-allowed-function-unstaked-factory] - AssertionError: assert [] == [UserOperatio...re='0x'), ...]
  Right contains 11 more items, first extra item: UserOperation(sender='0xe442F254C216051d592ecd0B89eBe1229965b9c1', nonce='0x0', initCode='0x58A9673006FBa67d7B55812600...ityFeePerGas='0xb2d05e00', paymasterAndData='0xd2f7b109b426341eca1b4569f27e7a66388a6fe56e6f7468696e67', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0xe442F254C216051d592ecd0B89eBe1229965b9c1',
  -                nonce='0x0',
  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007b00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xd2f7b109b426341eca1b4569f27e7a66388a6fe56e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xfd5fDFD81077399adb5D0a5E215095A6fFFcF6b3',
  -                nonce='0x10000000000000000',
  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007c00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xa7b891864a120fe562e192b242cc4455f4f84f5d6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x02d3053a4f1f2d686755Fb20E1fbC66D782FA3ed',
  -                nonce='0x20000000000000000',
  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007d00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x925976e4f15e46fa39b38c0a3e2e9d23d542b7c96e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x60AD072b8a7e81DbdB6cE822F4345ca24bEb30DA',
  -                nonce='0x30000000000000000',
  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007e00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x009c812a8cede6be0eb4105c292ddee5d112dbce6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xE86018cA6cd2599712FBBB10458dEbf68cf42eC4',
  -                nonce='0x40000000000000000',
  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xf811c26421e844e50f67c2c18dc32a4867fbd65d6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xCc89618A2e28E862C1E8B2989e9117714C008dE6',
  -                nonce='0x50000000000000000',
  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xe30911b834e07b58919fa5ce673993ddef14b4186e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x16Fa376C5277Ea396E3B2eB1132e804B8a1C3a54',
  -                nonce='0x60000000000000000',
  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008100000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x47532854295ec7ee150f77102f72b11db04e1a9e6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x77DFcB1d748c600887f36b2bDF3B9d8f23D035C9',
  -                nonce='0x70000000000000000',
  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008200000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x83a2128e2634d14998f62d7f492c2afb956ba5de6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x4Db08a04e8c0A15bbE2D605eC15C5EfF3864E125',
  -                nonce='0x80000000000000000',
  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008300000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x620f434f5cd3fceb5505834858b0fe7b0a2db8db6e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0xC698ebAB62CAb6FEA722574c2c80fB97963983Cd',
  -                nonce='0x90000000000000000',
  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008400000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0xae9631d0200455d6c0e91bf953fe71f27c8966c66e6f7468696e67',
  -                signature='0x'),
  -  UserOperation(sender='0x2d1e2a6F82D7f6f9d5d309CD11F8dE980C7c3322',
  -                nonce='0xa0000000000000000',
  -                initCode='0x58A9673006FBa67d7B55812600Cc80806393F0210d058fe3000000000000000000000000000000000000000000000000000000000000008500000000000000000000000000000000000000000000000000000000000000600000000000000000000000005ff137d4b0fdcd49dca30c7cf57e578a026d278900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x0f45d5a3d72945f3df66a0e59850a0728b6c52016e6f7468696e67',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_max_allowed_ops_unstaked_sender - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains one more item: UserOperation(sender='0x9148D8a387b27be3894F1444153c238633c0e068', nonce='0x0', initCode='0x', callData='0xa9e966b7000...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0x9148D8a387b27be3894F1444153c238633c0e068',
  -                nonce='0x0',
  -                initCode='0x',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_max_allowed_ops_staked_sender - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains one more item: UserOperation(sender='0x72bB5c413FBa35522dD8B45A32C437dBf2eb6670', nonce='0x10000000000000000', initCode='0x', callDat...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0x72bB5c413FBa35522dD8B45A32C437dBf2eb6670',
  -                nonce='0x10000000000000000',
  -                initCode='0x',
  -                callData='0xa9e966b70000000000000000000000000000000000000000000000000000000000000001',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_ban_user_op_access_other_ops_sender_in_bundle - AssertionError: assert [] == [UserOperatio...gnature='0x')]
  Right contains one more item: UserOperation(sender='0xad9f4A570C949C67Cadde666Fc2b2cE234812dE3', nonce='0x0', initCode='0x', callData='0x', callGasL...tionGas='0x493e0', maxFeePerGas='0xee6b2800', maxPriorityFeePerGas='0xb2d05e00', paymasterAndData='0x', signature='0x')
  Full diff:
    [
  +  ,
  -  UserOperation(sender='0xad9f4A570C949C67Cadde666Fc2b2cE234812dE3',
  -                nonce='0x0',
  -                initCode='0x',
  -                callData='0x',
  -                callGasLimit='0x493e0',
  -                verificationGasLimit='0xf4240',
  -                preVerificationGas='0x493e0',
  -                maxFeePerGas='0xee6b2800',
  -                maxPriorityFeePerGas='0xb2d05e00',
  -                paymasterAndData='0x',
  -                signature='0x'),
    ]
FAILED tests/single/bundle/test_bundle.py::test_ban_user_sender_double_role_in_bundle - Exception: expected result object, got:
Error(code=-32500, message='0x', data=None, id=119)
FAILED tests/single/bundle/test_codehash.py::test_codehash_changed - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][paymaster][no_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=129)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-031]unstaked][paymaster][storage][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=131).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]unstaked][paymaster][reference_storage][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=133).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]unstaked][paymaster][reference_storage_struct][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=135).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-010]unstaked][paymaster][account_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=137)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]unstaked][paymaster][account_reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=139)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]unstaked][paymaster][account_reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=141)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop0] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=143).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[EREP-050]unstaked][paymaster][context][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=145).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]unstaked][paymaster][external_storage_read][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=147).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]unstaked][paymaster][out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=149).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]unstaked][paymaster][sstore_out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=151).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]staked][paymaster][no_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=153)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-031]staked][paymaster][storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=155)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]staked][paymaster][reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=157)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]staked][paymaster][reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=159)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][paymaster][reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=161)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-010]staked][paymaster][account_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=163)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]staked][paymaster][account_reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=165)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]staked][paymaster][account_reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=167)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-022]staked][paymaster][account_reference_storage_init_code][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=169)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[EREP-050]staked][paymaster][context][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=171)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][paymaster][external_storage_write][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=173).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][paymaster][external_storage_read][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=175)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]staked][paymaster][out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=177).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]staked][paymaster][sstore_out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=179).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][factory][no_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=181)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][factory][storage][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=183).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][factory][reference_storage][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=185).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]unstaked][factory][reference_storage_struct][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=187).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-010]unstaked][factory][account_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=189)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]unstaked][factory][account_reference_storage][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=191).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]unstaked][factory][account_reference_storage_struct][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=193).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][factory][external_storage_read][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=195).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-042]unstaked][factory][EXTCODEx_CALLx_undeployed_sender][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=197)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][EXTCODESIZE_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=199).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][EXTCODEHASH_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=201).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][EXTCODECOPY_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=203).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][CALL_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=205).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][CALLCODE_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=207).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][DELEGATECALL_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=209).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][factory][STATICCALL_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=211).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]unstaked][factory][out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=213).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]unstaked][factory][sstore_out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=215).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]staked][factory][no_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=217)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-031]staked][factory][storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=219)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]staked][factory][reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=221)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-032]staked][factory][reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=223)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-010]staked][factory][account_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=225)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]staked][factory][account_reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=227)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]staked][factory][account_reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=229)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][factory][external_storage_write][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=231).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][factory][external_storage_read][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=233)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]staked][factory][out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=235).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]staked][factory][sstore_out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=237).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][account][no_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=239)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-010]unstaked][account][account_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=241)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]unstaked][account][account_reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=243)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=245).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-022]unstaked][account][account_reference_storage_init_code][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=247)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-022]unstaked][paymaster][account_reference_storage_init_code][drop1] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=249).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]unstaked][account][account_reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=251)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]unstaked][account][external_storage_read][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=253).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]unstaked][account][out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=255).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]unstaked][account][sstore_out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=257).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-000]staked][account][no_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=259)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-010]staked][account][account_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=261)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]staked][account][account_reference_storage][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=263)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-021]staked][account][account_reference_storage_struct][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=265)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]staked][account][out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=267).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-020]staked][account][sstore_out_of_gas][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=269).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][account][external_storage_write][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=271).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[STO-033]staked][account][external_storage_read][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=273)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-011]unstaked][account][entryPoint_call_balanceOf][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=275).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-061]unstaked][account][eth_value_transfer_forbidden][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=277).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-053]unstaked][account][eth_value_transfer_entryPoint][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=279)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-052]unstaked][account][eth_value_transfer_entryPoint_depositTo][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=281)
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][EXTCODESIZE_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=283).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][EXTCODEHASH_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=285).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][EXTCODECOPY_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=287).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-054]unstaked][account][EXTCODESIZE_entrypoint][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=289).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-054]unstaked][account][EXTCODEHASH_entrypoint][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=291).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-054]unstaked][account][EXTCODECOPY_entrypoint][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=293).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][CALL_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=295).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][CALLCODE_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=297).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][DELEGATECALL_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=299).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-041]unstaked][account][STATICCALL_undeployed_contract][drop] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=301).code
FAILED tests/single/bundle/test_storage_rules.py::test_rule[[OP-062]unstaked][account][CALL_undeployed_contract_allowed_precompile][ok] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=303)
FAILED tests/single/bundle/test_storage_rules.py::test_enough_verification_gas - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[GAS] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=307).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[NUMBER] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=308).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[TIMESTAMP] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=309).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[COINBASE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=310).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[DIFFICULTY] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=311).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[BASEFEE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=312).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[GASLIMIT] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=313).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[GASPRICE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=314).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[SELFBALANCE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=315).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[BALANCE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=316).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[ORIGIN] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=317).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[BLOCKHASH] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=318).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[CREATE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=319).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[CREATE2] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=320).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_banned_opcode[SELFDESTRUCT] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=321).code
FAILED tests/single/opbanning/test_op_banning.py::test_account_allowed_opcode_sequence[GAS CALL] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=322)
FAILED tests/single/opbanning/test_op_banning.py::test_account_allowed_opcode_sequence[GAS DELEGATECALL] - Exception: expected result object, got:
Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=323)
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[GAS] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=324).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[NUMBER] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=325).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[TIMESTAMP] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=326).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[COINBASE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=327).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[DIFFICULTY] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=328).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[BASEFEE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=329).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[GASLIMIT] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=330).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[GASPRICE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=331).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[SELFBALANCE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=332).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[BALANCE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=333).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[ORIGIN] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=334).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[BLOCKHASH] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=335).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[CREATE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=336).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[CREATE2] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=337).code
FAILED tests/single/opbanning/test_op_banning.py::test_paymaster_banned_opcode[SELFDESTRUCT] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=338).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[GAS] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=339).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[NUMBER] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=340).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[TIMESTAMP] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=341).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[COINBASE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=342).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[DIFFICULTY] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=343).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[BASEFEE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=344).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[GASLIMIT] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=345).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[GASPRICE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=346).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[SELFBALANCE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=347).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[BALANCE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=348).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[ORIGIN] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=349).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[BLOCKHASH] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=350).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[CREATE] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=351).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[CREATE2] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=352).code
FAILED tests/single/opbanning/test_op_banning.py::test_factory_banned_opcode[SELFDESTRUCT] - AssertionError: assert -32500 == <RPCErrorCode.BANNED_OPCODE: -32502>
 +  where -32500 = Error(code=-32500, message='FailedOp(0,AA20 account not deployed)', data=None, id=353).code
FAILED tests/single/rpc/test_eth_estimateUserOperationGas.py::test_eth_estimateUserOperationGas[] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/rpc/test_eth_estimateUserOperationGas.py::test_eth_estimateUserOperationGas_execution_revert - AssertionError: assert -32500 == <RPCErrorCode.EXECUTION_REVERTED: -32521>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=356).code
FAILED tests/single/rpc/test_eth_estimateUserOperationGas.py::test_eth_estimateUserOperationGas_simulation_revert - AssertionError: assert 'dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'
 +  where 'dead signature' = <built-in method lower of str object at 0x7f9e6b153330>()
 +    where <built-in method lower of str object at 0x7f9e6b153330> = 'dead signature'.lower
 +  and   'failedopwithrevert(0,aa23 reverted,0x)' = <built-in method lower of str object at 0x7f9e6a3bb510>()
 +    where <built-in method lower of str object at 0x7f9e6a3bb510> = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower
 +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=357).message
FAILED tests/single/rpc/test_eth_getUserOperationByHash.py::test_eth_getUserOperationByHash[] - TypeError: 'NoneType' object is not subscriptable
FAILED tests/single/rpc/test_eth_getUserOperationByHash.py::test_eth_getUserOperationByHash_error - AssertionError: assert -32602 == -32601
 +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=361).code
FAILED tests/single/rpc/test_eth_getUserOperationReceipt.py::test_eth_getUserOperationReceipt[] - TypeError: 'NoneType' object is not subscriptable
FAILED tests/single/rpc/test_eth_getUserOperationReceipt.py::test_eth_getUserOperationReceipt_error - AssertionError: assert -32602 == -32601
 +  where -32602 = Error(code=-32602, message='Missing/invalid userOpHash', data=None, id=365).code
FAILED tests/single/rpc/test_eth_sendUserOperation.py::test_eth_sendUserOperation[] - AttributeError: 'Error' object has no attribute 'result'
FAILED tests/single/rpc/test_eth_sendUserOperation.py::test_eth_sendUserOperation_revert - AssertionError: assert 'testwallet: dead signature' in 'failedopwithrevert(0,aa23 reverted,0x)'
 +  where 'testwallet: dead signature' = <built-in method lower of str object at 0x7f9e6b11db60>()
 +    where <built-in method lower of str object at 0x7f9e6b11db60> = 'testWallet: dead signature'.lower
 +  and   'failedopwithrevert(0,aa23 reverted,0x)' = <built-in method lower of str object at 0x7f9e6a3bb5d0>()
 +    where <built-in method lower of str object at 0x7f9e6a3bb5d0> = 'FailedOpWithRevert(0,AA23 reverted,0x)'.lower
 +      where 'FailedOpWithRevert(0,AA23 reverted,0x)' = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=368).message
FAILED tests/single/rpc/test_eth_sendUserOperation.py::test_eth_sendUserOperation_invalid_signature - AssertionError: assert -32500 == <RPCErrorCode.INVALID_SIGNATURE: -32507>
 +  where -32500 = Error(code=-32500, message='FailedOpWithRevert(0,AA23 reverted,0x)', data=None, id=370).code
============= 167 failed, 3 passed, 1 skipped, 1 warning in 37.03s =============
Wed May  8 12:48:26 UTC 2024: done bundler /home/runner/work/bundler-test-executor/bundler-test-executor/bundlers/okbund/okbund.yml, name=okbund
              Container                           Repository                Tag          Image Id       Size  
--------------------------------------------------------------------------------------------------------------
bundler-test-executor_bundler-waiter_1   curlimages/curl                latest         79009b90fb07   17.29 MB
bundler-test-executor_bundler_1          txgyy/ok_bund                  latest         11a080f35782   565.3 MB
bundler-test-executor_deployer_1         accountabstraction/deployer    0.6            7e3c6d5f0f4d   143.1 MB
bundler-test-executor_funder_1           bundler-test-executor_funder   latest         7cfa092c2000   164.3 MB
geth-1.13                                ethereum/client-go             release-1.13   ef31eb599a3f   66.72 MB
